prompt,completion
"Design a class for representing a person in Python.
","class Person:
    """"""
    Class to represent a person
    """"""
    def __init__(self, name, age, address):
        self.name = name
        self.age = age
        self.address = address
    
    def birthday(self):
        """"""
        Increments the age of the person
        """"""
        self.age += 1"
"Generate a random list of 20 numbers between 1 and 100.
","[86, 19, 2, 8, 12, 37, 43, 48, 63, 68, 21, 4, 39, 55, 87, 23, 69, 61, 44, 91]"
"Create an SQL query to find the number of employees whose age is between 30 and 40
",SELECT COUNT(*) FROM employees WHERE age BETWEEN 30 AND 40;
"Create a HTML page that containsthe loading icon for a web page request.
","<!DOCTYPE html>
<html>
  <head>
    <title>Loading Icon</title>
  </head>
  <body>
  <div id=""loading-icon"">
    <span></span>
    <span></span>
    <span></span>
    <span></span>
    <span></span>
  </div>
  <style type=""text/css"">
    #loading-icon {
      margin: auto;
      text-align: center;
      width: 120px;
    }

    #loading-icon span {
      background-color: #E3EEF6;
      border-radius: 50%;
      display: inline-block;
      height: 10px;
      margin-right: 10px;
      width: 10px;
      animation: loader 2s ease-in infinite;
    }

    #loading-icon span:nth-child(1) {
      animation-delay: 0s;
    }

    #loading-icon span:nth-child(2) {
      animation-delay: 0.3s;
    }

    #loading-icon span:nth-child(3) {
      animation-delay: 0.6s;
    }

    #loading-icon span:nth-child(4) {
      animation-delay: 0.9s;
    }

    #loading-icon span:nth-child(5) {
      animation-delay: 1.2s;
    }

    @keyframes loader {
      25% { transform: scale(1.3); }
      50% { transform: scale(1.1); }
      75% { transform: scale(1.3); }
    }
  </style>
  </body>
</html>"
"Write a function that takes in a list and a target value, and returns a new list with the target value removed.
my_list = [1,2,3,4,5,6]
target = 3","def remove_target(my_list, target):
    return [x for x in my_list if x != target]

my_list = remove_target(my_list, target)
print(my_list)"
"Create a JavaScript function that takes a given sentence as a parameter and capitalizes the first letter of each word.
'hello world'","function capitalizeSentence(str) {
    let words = str.split(' ');
    let res = [];
  
    for (let word of words) {
        res.push(word[0].toUpperCase() + word.slice(1));
    }
  
    return res.join(' ');
}"
"Edit the following program to add 1 to each element of the list and print the result.
my_list = [2, 5, 7, 9]","my_list = [2, 5, 7, 9]
for (let i = 0; i < my_list.length; i++) {
    my_list[i] = my_list[i] + 1;
}
console.log(my_list); // [3, 6, 8, 10]"
"Write a Python code to classify the following sentence
It's raining cats and dogs","import nltk
from nltk.tokenize import word_tokenize

sentence = ""It's raining cats and dogs""
tokens = word_tokenize(sentence)
tagged = nltk.pos_tag(tokens)

print(tagged) #[('It', 'PRP'), (""'s"", 'VBZ'), ('raining', 'VBG'), ('cats', 'NNS'), ('and', 'CC'), ('dogs', 'NNS')]"
"Write a Java program to print the nth number in the Fibonacci sequence.
","public class FibonacciExample1{
    
    public static void main(String args[]) {
        int n = 18, t1 = 0, t2 = 1;
        System.out.print(""First "" + n + "" terms: "");
        
        for (int i = 1; i <= n; ++i)
        {
            System.out.print(t1 + "" + "");
            
            int sum = t1 + t2;
            t1 = t2;
            t2 = sum;
        }
    }
}"
"Write code that validates a given number is within a given range
num = 5
min = 0
max = 10","def in_range(num, min, max):
    if num in range(min, max):
        print(f'{num} is in range')
    else:
        print(f'{num} is not in range')
in_range(num, min, max) # Output: 5 is in range"
"Compute the bulk density of a polyhedron using the formula $\frac{mass}{volume}$.
mass = 3.5 g, volume = 2.6 cm$^3$","def compute_bulk_density(mass, volume):
    """"""Compute the bulk density of a polyhedron using the formula $\frac{mass}{volume}$.""""""
    return mass / volume

if __name__ == '__main__':
    mass = 3.5 # g
    volume = 2.6 # cm^3
    print(compute_bulk_density(mass, volume))"
"Design a SQL query to list all the unique authors in the book table.
Table: books
Fields: id, title, author, is_subscribed","SELECT DISTINCT author
FROM books;"
"Create an SQL statement to sort the table 'employees' by salary in descending order.
",SELECT * FROM employees ORDER BY salary DESC;
"Write an algorithm to find the largest element in an array.
[8, 11, 12, 5, 3]","// Algorithm to find the largest element in an array

// Step 1: Create a variable 'max' and initialize it with value of the first element in the array
int max = arr[0];

// Step 2: Iterate through the array and compare each element with 'max'
for (int i = 1; i < arr.length; i++) {
    if (arr[i] > max) {
        max = arr[i];
    }
}

// Step 3: Return the value of 'max'
return max;"
"How to check if a number is prime or not in Java
","public class Number { 
	
    public static boolean isPrime(int n) 
    { 
        // Corner cases 
        if (n <= 1) 
            return false; 
        if (n <= 3) 
            return true; 
  
        // This is checked so that we can skip 
        // middle five numbers in below loop 
        if (n % 2 == 0 || n % 3 == 0) 
            return false; 
  
        for (int i = 5; i * i <= n; i = i + 6) { 
            if (n % i == 0 || n % (i + 2) == 0) 
                return false; 
        } 
  
        return true; 
    } 
  
    public static void main(String[] args) 
    { 
        int n = 25; 
        if (isPrime(n)) 
            System.out.println(""Yes""); 
        else
            System.out.println(""No""); 
    } 
}"
"What is the minimum number of arguments needed to call the function ""foo"".
","The minimum number of arguments needed to call the function ""foo"" is 0."
"Write a function to calculate the sum of the elements of an array with float values.
","def sum_float_array(float_array):
    total = 0
    for i in float_array:
        total += i
    return total"
"Construct a class in Python that describes a car
","class Car:
    def __init__(self, brand, color):
        self.brand = brand
        self.color = color
    def describe(self):
        return “This car is a {} and it is {}.”.format(self.brand, self.color)"
"Write a Java program to sum the elements of an array except for the maximum and minimum.
Array: [1, 2, 3, 4, 5]","class Sum {
    public static void main(String[] args) {
        int[] arr = {1,2,3,4,5};
        int max = arr[0];
        int min = arr[0]; 
  
        int sum = 0; 
        for (int i = 0; i < arr.length; i++) { 
            sum += arr[i]; 

            if (arr[i] > max) { 
                max = arr[i]; 
            } 
            if (arr[i] < min) { 
                min = arr[i]; 
            } 
        } 

        int res = sum - (max + min); 
  
        System.out.println(res); 
    } 
}"
"Create a for loop for the list.
my_list = [1, 2, 3, 4]","my_list = [1, 2, 3, 4]

for item in my_list:
    print(item)"
"Edit the following XML code to add a navigation bar to the top of a web page
<html>
<head>
  <title>My Webpage</title>
</head>","<html>
<head>
  <title>My Webpage</title>
</head>
<body>
  <nav>
    <ul>
      <li><a href=""index.html"">Home</a></li>
      <li><a href=""about.html"">About Us</a></li>
      <li><a href=""contact.html"">Contact</a></li>
    </ul>
  </nav>
</body>"
"Create a Java program to convert an array of integers into an integer.
[1,2,3,4]","public static int convertToInt(int[] arr) {
    int result = 0;
    for (int i=0; i<arr.length; i++) {
        result += arr[i]*Math.pow(10, arr.length-1-i);
    }
    return result;
}"
"Write an SQL query to return the total number of student enrollments in courses from the courses table.
Table: courses

Columns: course_id, course_name, enrollments","SELECT SUM(enrollments)
FROM courses;"
"Implement a class that stores values of all data types.
","class DataStorage {
  constructor() {
    this.storage = {};
  }

  setData(key, value) {
    this.storage[key] = value;
  }

  getData(key) {
    return this.storage[key];
  }
}"
"Print the total number of keys present in a given dictionary.
phone_numbers = {
    ""John"" : ""123-456-7890"",
    ""Jane"" : ""890-567-1234"",
    ""Jack"" : ""345-678-9012""
}",print(len(phone_numbers)) # Output: 3
"Using the given array of objects, find the object with the highest age.
[{name: ""John"", age: 25}, {name: ""Jack"", age: 50}, {name: ""Jill"", age: 30}]","The object with the highest age is {name: ""Jack"", age: 50}."
"Write a SQL query to find customers from USA and order the list by their total purchases in descending order.
","SELECT *
FROM customers
WHERE country='USA' 
ORDER BY total_purchases DESC;"
"Using SQL, write a query to find the employee names and the departments that they work in.
","SELECT last_name, first_name, department
FROM employees;"
"Create a Python class with the following attributes: firstname, lastname and address.
","# Define a python class 
class Person: 
 def __init__(self, firstname, lastname, address): 
  self.firstname = firstname
  self.lastname = lastname
  self.address = address"
"Modify the HTML code with the following: Make all the text bold without changing the fontsize.
<div>
    <h1>Welcome</h1>
    <p>This is an example text</p>
</div>","<div>
    <h1><strong>Welcome</strong></h1>
    <p><strong>This is an example text</strong></p>
</div>"
"Write C# code to remove a specific element from an array.
{1,2,3,4,5,6}, 4","public static int[] RemoveElement(int[] arr, int element) 
{ 
    List<int> result = arr.ToList(); 
    for (int i = 0; i < result.Count; i++) 
        if (result[i] == element) 
            result.RemoveAt(i); 
    return result.ToArray(); 
}"
"Compose an if-else block in Python for checking if a string is empty.
str1 = ""My String""
str2 = """"","if len(str1) > 0:
    print(""Not empty"")
else:
    print(""Empty"")"
"Simulate a coin toss using Python.
","import random

def coin_toss():
  result = random.choice([""heads"", ""tails""])
  return result

print(coin_toss())"
"Demonstrate how to use an arraylist in Java.
","import java.util.ArrayList;

public class ArrayListExample {
    public static void main(String[] args) {
        // Create an arraylist 
        ArrayList<String> list = new ArrayList<String>(); 
  
        // Adding elements to the list 
        list.add(""Adam""); 
        list.add(""Bob""); 
        list.add(""Charlie""); 
  
        // Printing elements in the list 
        System.out.println(list); 
  
        // Accessing elements using get() method 
        String name = list.get(1); 
        System.out.println(""Name at index 1 is : "" + name); 
  
        // Adding elements at a specific index 
        list.add(1, ""David""); 
        System.out.println(""Updated list : ""+list); 
  
        // Removing elements from a list 
        list.remove(""Adam""); 
        System.out.println(""Updated list : ""+list); 
  
        // Check if an element exists in a list 
        boolean isPresent = list.contains(""Bob""); 
        System.out.println(""Bob is present in the list : "" + isPresent); 
    } 
}

// Output:
// [Adam, Bob, Charlie] 
// Name at index 1 is : Bob
// Updated list : [Adam, David, Bob, Charlie]
// Updated list : [David, Bob, Charlie]
// Bob is present in the list : true"
"Describe what is a linked list data structure in 10 words or less.
",A linear data structure of linked nodes.
"Generate 5 random numbers between 1 and 10 using a PHP script.
","<?php 
for($i=0; $i<5; $i++){
  echo rand(1, 10)."" ""; 
} 
?>"
"Given a string, write a program to remove the leading and trailing white spaces from the string and output the modified string.
String: ""Hello world   ""","# Python program to remove leading and trailing white spaces from a string 
  
# Function to remove leading and trailing white spaces 
def removeWhitespaces(string): 
    # Remove leading and trailing whitespaces 
    newString = string.strip() 
  
    # Returns the new string with leading and trailing 
    # whitespaces removed 
    return newString 
  
# Driver program 
inputString = ""Hello world   ""
  
# Printing the modified string 
print(removeWhitespaces(inputString))"
"Write a line of code in C# to find the index of an element in a given array.
array = {1, 2, 3, 4, 5};
element = 3","int index = Array.IndexOf(array, element);"
"What is the correct syntax to call a constructor of a class in Java?
",ClassName objectName = new ClassName(parameters);
"Create a simple calculator program in Python.
","def add(num1, num2): 
  return num1 + num2 

def subtract(num1, num2): 
  return num1 - num2 

def multiply(num1, num2): 
  return num1 * num2 

def divide(num1, num2): 
  return num1 / num2 

# Infinite loop until user chooses to exit 
while True: 
    print(""Select operation:"") 
    print(""1. Add"") 
    print(""2. Subtract"") 
    print(""3. Multiply"") 
    print(""4. Divide"")
    print(""5. Exit"") 
    choice = input(""Enter choice (1/2/3/4):"") 
  
    # Check if choice is one of the four options 
    if choice in ('1', '2', '3', '4', '5'): 
        num1 = float(input(""Enter first number: "")) 
        num2 = float(input(""Enter second number: "")) 
  
        if choice == '1': 
            print(num1, ""+"", num2, ""="", add(num1, num2)) 

        elif choice == '2': 
            print(num1, ""-"", num2, ""="", subtract(num1, num2)) 
  
        elif choice == '3': 
            print(num1, ""*"", num2, ""="", multiply(num1, num2)) 

        elif choice == '4': 
            print(num1, ""/"", num2, ""="", divide(num1, num2))
        elif choice == '5':
            break
        else: 
            print(""Invalid Input"") 
    else: 
        print(""Invalid Input"")"
"Format the strings given in the list so that only the first letter of each word is in upper case.
[""Hello world"", ""Wonderful DAY""]","[""Hello World"", ""Wonderful Day""]"
"Create a function to edit a given string, replacing all the vowels with a given character.
String: ""Hello world""
Character: 'x'","""""""
Create a function to edit a given string, replacing all the vowels with a given character.
""""""
def replace_vowels(string, replacement_character):
    vowels = ['a', 'e', 'i', 'o', 'u']
    new_str = """"
    for char in string:
        if char in vowels:
            new_str += replacement_character
        else:
            new_str += char
    return new_str

if __name__ == '__main__':
    string = ""Hello world""
    replacement_character = 'x' 
    print(replace_vowels(string, replacement_character))"
"Given a list of strings, create a function that returns a list of only the unique strings.
[""this"", ""is"", ""a"", ""list"", ""of"", ""strings"", ""this"", ""list"", ""has"", ""some"",  ""duplicates""]","def unique_strings(string_list): 
  return list(set(string_list))"
"Write a SQL query to find the total number of orders placed between two given dates.
start_date = '2020-01-01'
end_date = '2020-02-01'","SELECT COUNT(*)
FROM orders
WHERE order_date BETWEEN '2020-01-01' AND '2020-02-01';"
"Develop a PHP script that creates and populates a database table called “customers”.
","<?php
$host = ""localhost"";
$username = ""root"";
$password = """";
$database = ""mydb"";

$connection = new mysqli($host, $username, $password, $database);

if ($connection->connect_error) {
    die(""Connection failed: "" . $connection->connect_error);
}

$query = ""CREATE TABLE customers ( 
  id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  firstname VARCHAR(30) NOT NULL,
  lastname VARCHAR(30) NOT NULL,
  address VARCHAR(100),
  city VARCHAR(50),
  postalcode VARCHAR(10)
)"";

if ($connection->query($query) === TRUE) {
    echo ""Table customers created successfully"";
} else {
    echo ""Error creating table: "" . $connection->error;
}

$connection->close();
?>"
"Create a regex expression that matches all strings with four alphabetic characters.
",^[a-zA-Z]{4}$
"Create a regex expression to match the numbers from 0 to 9.
",[0-9]
"Write a short class in Python that will print a custom message when created.
","class CustomMessage:
    def __init__(self):
        print(""This is a custom message!"")"
"Find the sum of the series n3/(3n+1).
14","def sum_series(n):
    result = 0
    for x in range(1, n+1):
        result += (x**3) / (3*x+1)
    return result

print(sum_series(14))"
"Write an if else statement in Python for checking if a given number is positive or negative.
","if x > 0:
  print(""The number is positive"")
else:
  print(""The number is negative"")"
"Write a Java program that passes an array to a method and prints its length.
","public class TestArrayLength {
    public static void printLength(int[] array) {
        System.out.println(""The length of the array is: "" + array.length);
    }
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        printLength(numbers);
    }
}"
"Write an R function to calculate the mean of a numerical vector.
","calc_mean <- function(x) {
    mean(x)
}"
"Create a CSS property for displaying text in bold font.
",font-weight: bold;
"Write the output for the following Java program.
public class OddNumber {
  public static void main(String[] args) {
    for(int i=10; i<20; i++) {
      if(i % 2 == 1) {
        System.out.println(i);
      }
    }
  }
}","11
13
15
17
19"
"Write a Python function that takes an integer as an argument and returns the square of that number
","def square(n):
    return n ** 2"
"Construct a simple Java program that calculates the sum of two integers.
","public class Sum {
 public static void main(String[] args) {
   int a = 5;
   int b = 10;
   int sum = a + b;
   System.out.println(""The sum of the two integers is: "" + sum);
 }
}"
"Design an algorithm to search for the longest string in a list.
list = [""apples"", ""bananas"", ""kiwis""]","def find_longest_string(list):
    # Set initial max_length to the length of the first item in list
    max_length = len(list[0])
    # Set initial max_string to the first string in the list
    max_string = list[0]
    # Loop through remaining strings in the list
    for i in range(1, len(list)):
        current_string = list[i]
        current_length = len(current_string)
        if current_length > max_length:
            max_length = current_length
            max_string = current_string
    return max_string"
"Determine the number of words in the given passage using text processing in Python.
passage = ""Once upon a midnight dreary, while I pondered, weak and weary""","n_words = len(passage.split())
print(""The number of words in the passage is:"", n_words)"
"Create a function to convert miles per hour to kilometers per hour.
","def convert_mph_to_kph(mph):
    return mph * 1.609"
"Suggest a way to display the following list in a readable format.
list = [3,5,7,9,11]","print("", "".join(str(x) for x in list)) 
# Output: 3, 5, 7, 9, 11"
"Convert the given string to a list containing the words in the string.
my_string = ""This is a string""","my_list = my_string.split("" "")"
"Explain the purpose and implementation of the media query.
","A media query is a CSS tool that allows a web page to adapt to different screen sizes (desktop, mobile, tablet, etc.). It uses a set of rules consisting of media type, media feature and value, which, when satisfied, trigger the application of a corresponding CSS stylesheet. Media queries are implemented using the @media rule, which combines a media type and media query expression, and has a corresponding block of style rules that get applied when the condition is true."
"Write an XPath query to identify all elements with the given ID attribute.
ID: menu",//*[@id='menu']
"Generate a list of 10 numbers in Python where each number is a multiple of 7 and greater than 40
","[x for x in range(41, 100) if x % 7 == 0]
# Output: [42, 49, 56, 63, 70, 77, 84, 91, 98]"
"Using the given input, write a function to produce a desired output.
Input: [1, 4, 8, 9, 10] 
Desired Output: [[1, 4, 8], [9, 10]]","def split_list(lst):
    # Create an empty list
    result = []
    
    # Iterate through the list and divide it into two parts
    for i in range(0, len(lst), 3):
        result.append(lst[i:i+3])
        
    # Return the result
    return result"
"Write a function that checks if a string is a palindrome or not.
string = ""ana""","def is_palindrome(string):
    rev = ''.join(reversed(string))
    if rev == string:
        return True
    else:
        return False"
"Compare two strings and returns ""yes"" if they are equal, otherwise returns ""no"".
""Apple"", ""apple""","const stringCompare = (str1, str2) => {
    if (str1.toLowerCase() === str2.toLowerCase()) {
        return 'yes';
    } else {
        return 'no';
    }
};

let compResult = stringCompare('Apple', 'apple');
console.log(compResult); // Output: 'yes'"
"Create a JavaScript code snippet to get the current date.
","let currentDate = new Date(); 
console.log(currentDate);"
"Add comments to the following JavaScript code that explains what it does.
let result = 0;
for (let i = 0; i < 10; i++) {
  result += i;
}","// This code loop through the numbers from 0 to 9 and add them to the variable result.
let result = 0; 
for (let i = 0; i < 10; i++) { 
  // Add the current number to the value of result
  result += i;
}"
"Read the following block of code. What is the main goal of the code?
def first_duplicate(arr):
    seen = set()
    for i in arr:
        if i in seen:
            return i
        seen.add(i)
    return -1",The main goal of the code is to find the first duplicate element in an array.
"Print the following statements in a sorted order
I am learning Python
I am learning Java","I am learning Java
I am learning Python"
"Change this code to print the reversed version of a string.
string s = ""Hello World!"";","string s = ""Hello World!""; 
reverse(s.begin(), s.end()); 
cout << s; 
// Outputs: !dlroW olleH"
"What is the maximum number of columns allowed in a MySQL table?
",The maximum number of columns allowed in a MySQL table is 4096.
"Create a new view controller class named ""MainViewController"".
","class MainViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
    }

}"
"Construct a while loop that prints integers from 0 to 9.
","i = 0
while i < 10:
 print(i)
 i+=1"
"What is the Big O complexity of this following code snippet?
def find_duplicates(nums):
    duplicates = []
    for num in nums:
        if num in duplicates:
            yield num
        else:
            duplicates.append(num)","The Big O complexity of this code snippet is O(n), since it takes linear time to loop through the array and check if the element has appeared before."
"Using the code, update the variable to count from 4 to 14.
x = 4","for x in range(4, 15):
    print(x)"
"Add a method in JavaScript for an object to find the sum of all its elements.
class MyObject {
    constructor(elements) {
      this.elements = elements;
    }
}","class MyObject {
    constructor(elements) {
      this.elements = elements;
    }
    
    sumElements() {
        let sum = 0;
        this.elements.forEach(element => {
            sum += element;
        });
        return sum;
    }
}"
"Generate a function in Python that takes a number and a list as input and finds the number of occurrences of the number in the list.
","def count_occurrence(number, input_list):
    return input_list.count(number)"
"Form an if-else condition that prints “This is an even number” if a number is even and “This is an odd number” if the number is odd
number = 5","if (number % 2 == 0): 
    print(""This is an even number"") 
else: 
    print(""This is an odd number"")"
"Write a Python script to send an email using the smtplib module.
","import smtplib

sender = 'from@example.com'
recipients = ['to@example.com']

message = """"""Subject: Test Email

This is a test email message.
""""""

with smtplib.SMTP('localhost') as server:
  server.sendmail(sender, recipients, message)"
"Create a perl code to parse a JSON object.
","use JSON;

# Parse a JSON object
my $json_text = ""{\""name\"":\""John\"",\""age\"":30,\""city\"":\""New York\""}"";
my $json_obj = decode_json($json_text);

# Access data
print ""name  : "" . $json_obj->{""name""} . ""\n"";
print ""age   : "" . $json_obj->{""age""} . ""\n"";
print ""city  : "" . $json_obj->{""city""} . ""\n"";"
"Perform sentiment analysis on the given text using NLTK library in Python.
The food here is amazing.","from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentences = [""The food here is amazing!""]

sid = SentimentIntensityAnalyzer()

for sentence in sentences:
    ss = sid.polarity_scores(sentence)
    print(""for sentence: {}, sentiment analysis: {}"".format(sentence, ss))

# Output
# for sentence: The food here is amazing!, sentiment analysis: {'neg': 0.0, 'neu': 0.436, 'pos': 0.564, 'compound': 0.6249}"
"Name a few use cases of Convolutional Neural Networks.
","Convolutional Neural Networks are widely used in domains such as computer vision, natural language processing, pattern recognition, time series analysis, audio processing, object recognition and classification, and for other tasks such as image segmentation, automated image captioning, image deblurring, object detection and tracking."
"Write a SQL query to extract all the orders placed on a given date.
order_date = ""2020-01-01""","SELECT * 
FROM orders 
WHERE order_date = '2020-01-01';"
"Suggest a way to optimize a given code segment.
x = 0
for i in range(100):
    for j in range(100):
        x = x + 1","To optimize this code segment, you can use the NumPy library to take advantage of vectorized operations and reduce the number of iterations. Additionally, you can use MultiProcessing to run the code in parallel, taking advantage of multiple cores on the machine:

import numpy as np

x = np.zeros((100, 100))

for i in range(100):
    x[i] = x[i] + 1"
"Construct a for loop to interate over the following JSON data.
data = [{""name"": ""John"", ""age"": 34}, {""name"": ""Mary"", ""age"": 25}]","for item in data:
    name = item['name']
    age = item['age']
    print(f""{name}'s age is {age}"")"
"Explain the use of the Huffman encoding algorithm.
","Huffman encoding is an algorithm used for lossless data compression. It works by taking a string of data, analysing it and creating a shorter bit string that represents the same data. The data is compressed by assigning shorter codes to commonly occurring characters. This process reduces the amount of bits needed to represent the data, which leads to overall data compression."
"Design an algorithm to add two given binary numbers
","def add_binary(b1, b2):
    # initalize result
    result = """"
    carry = 0
    # iterate over the bits
    for i in range(max(len(b1), len(b2))):
        a = int(b1[-i-1]) if i < len(b1) else 0
        b = int(b2[-i-1]) if i < len(b2) else 0
        #calculate sum
        sum = carry ^ a ^ b
        result = str(sum) + result
        # calculate the carry
        carry = (carry&a) | (carry&b) | (a&b)
    #append the carry to the result
    if carry:
        result = '1' + result
    return result"
"Create an HTML table using the dataset provided.
DataSet = [{'Name': 'John', 'Age': 23},
{'Name': 'Mary', 'Age': 24},
{'Name': 'David', 'Age': 20}]","<table>
  <tr>
    <th>Name</th>
    <th>Age</th>
  </tr>
  <tr>
    <td>John</td>
    <td>23</td>
  </tr>
  <tr> 
    <td>Mary</td>
    <td>24</td>
  </tr>
  <tr>
    <td>David</td>
    <td>20</td>
  </tr>
</table>"
"You need to prefill an array with a given value.
let array = new Array(10);
let val = 'foo'",let prefilledArray = array.fill(val);
"Write an algorithm in JavaScript for finding the maximum number in a given array.
[5, 10, 8, 3, 13]","function maxFromArray(arr) {
    let maxNum = arr[0];
    for (let i = 1; i < arr.length; i++) {
        if (arr[i] > maxNum) {
            maxNum = arr[i];
        }
    } 
    return maxNum;
}

console.log(maxFromArray([5, 10, 8, 3, 13])); // Outputs: 13"
"Add the `color` parameter to this function and make sure it works properly.
def printShape(num, shape):
    for i in range(0,num):
        print(shape)","def printShape(num, shape, color):
	for i in range(0, num):
		print(color + shape)"
"Write an instruction for a GPT model to generate a response when it is given a given an English sentence as input.
""How are you today?""","return ""I'm doing great, thank you for asking!"""
"Edit the following program to add all the numbers in the given array.
let numbers = [2, 10, 5, 4, 3];

function add(arr) {
  let total = 0;
  arr.forEach(num => total += num);
  //TODO
  return total;
}","let numbers = [2, 10, 5, 4, 3];

function add(arr) {
  let total = 0;  
  arr.forEach(num => total += num);
  total = total/arr.length;
  return total;
}"
"Write a function in the Python language to convert a string to a list.
my_string = ""Welcome to the world of GPT models""","def string_to_list(my_string):
    return my_string.split()"
"Given a list of integers, write a Python program to create a new list that contains the square of every element in the original list.
","def square_numbers(nums):
  return [num**2 for num in nums]"
"Write a boolean expression for the statement ""4 is greater than 5"".
",4 > 5
"Outpus the sum of all blocks in the following oracle database table.
Table Name: orders
Column Names: order_id, quantity, price
Row 1: 12345, 5, 120
Row 2: 67890, 10, 150",sum_of_all_blocks = 1750
"Create a for loop in Python to print all elements in a given numpy array.
import numpy as np 
myArray = np.array([1, 2, 3, 4])","for element in myArray:
 print(element)"
"Write a parser to convert an XML document to a dictionary.
","from xml.etree.ElementTree import fromstring

def xml_to_dict(xml_string):
    xml_dict = {}
    root = fromstring(xml_string)
    for element in root:
        xml_dict[element.tag] = element.text
    return xml_dict"
"Change the variable name of the given example to a lowercase variable.
let MyFavoriteMovie = 'The Matrix';",let myFavoriteMovie = 'The Matrix';
"Replace the ""TODO"" comment in the code with the proper code to print the length of a given List.
list1 = [1, 2, 3, 4, 5]

# TODO","list1 = [1, 2, 3, 4, 5]

print(len(list1))"
"Create a function that takes two parameters, an array and an object key, and returns an object containing all the elements in the array whose value is the same as the given object key.
array = [""a"", ""b"", ""c"", ""a"", ""b"", ""d""]
key = ""b""","def group_by_key(array, key):
    returned_object = {}
    for item in array:
        if item == key:
            returned_object[item] = key
    return returned_object

group_by_key(array, key) # Returns {""b"": ""b""}"
"Design an algorithm in Python that takes an array of classmates' age and returns the median age.
ages = [10, 9, 12, 14, 11]","def median_age(ages):
    ages.sort()
    mid_index = len(ages)//2

    if len(ages)%2 == 0:
        return (ages[mid_index-1] + ages[mid_index])/2
    else:
        return ages[mid_index]"
"Create a function in Java to convert a list of strings to a 2D array.
list: [""aa"", ""bb"", ""cc""]","public static String[][] convertTo2DArray(List<String> strings) {
    int n = strings.size();
    String[][] array = new String[n][1];
    for (int i = 0; i < n; i++) {
        array[i][0] = strings.get(i);
    }
    return array;
    
}"
"Write a function in Python that takes a string and a set of characters as inputs and removes all characters in the string that are in the set.
string = ""Hello, world!""
charset = [""o"", ""!""]","def removeChars(string, charset):
	result = """"
	for c in string:
		if c not in charset:
			result += c
	return result"
"Write a SQL query to sort all the customers by their first name in ascending order.
",SELECT * FROM customers ORDER BY first_name ASC;
"Rearrange the following code to print out the list elements in reverse order.
colors = [""red"", ""green"", ""blue""]","colors = [""red"", ""green"", ""blue""]
colors.reverse()
for color in colors:
    print(color)"
"Write a SQL query for finding records where the sales amount is greater than 1000.
","SELECT * 
FROM sales 
WHERE sales_amount > 1000;"
"Create an array of the words in a given string and sort them alphabetically.
""Hello World How Are You""","const alphabetize = (str) => {
    const words = str.split(' ');
    words.sort();
    return words;
};

let sortedWords = alphabetize('Hello World How Are You');
console.log(sortedWords); // Output: ['Are', 'Hello', 'How', 'You', 'World']"
"What is ""type casting"" in programming?
","In programming, type casting is the process of converting a value from one data type to another. This is done either explicitly, by writing a cast operator, or implicitly, which is done by the programming language itself. Type casting is often used to convert values from one type to another to enable a program to work with values of multiple types."
"Write a SQL statement to create a new table named ""Users"" in a database.
","CREATE TABLE Users (
    id INT NOT NULL,
    name VARCHAR(50) NOT NULL,
    age INT NOT NULL
);"
"Compute the square root of 150 using C++.
","#include <iostream>
#include <math.h>

using namespace std;

int main()
{
double n = 150;
cout << ""The square root of "" << n << "" is: "" << sqrt(n) << endl;
return 0;
}"
"How to reverse a given string in JavaScript?
","let str = 'Hello World!';
let newStr = str.split('').reverse().join('');
console.log(newStr); //outputs '!dlroW olleH'"
"Write jQuery code to add/remove a class on a webpage.
","$('#element').addClass('className'); // To add
$('#element').removeClass('className'); // To remove"
"Break down the given code into its individual parts.
def square_sum(x, y):
 return x*x + y*y","def square_sum(x, y):
 return x * x + y * y

# Break down code
# part 1
def square_sum(x, y):
# part 2
 return x * x + y * y
# part 3
# return calculated value"
"Output true if a given expression evaluates to true and false if it doesn't.
expression = ""2 + 2 == 4""","""""""
Output true if a given expression evaluates to true and false if it doesn't
""""""

expression = ""2 + 2 == 4""

def evaluate_expression(expression):
    return eval(expression)

if __name__ == '__main__': 
    print(evaluate_expression(expression))"
"Given a string, remove all characters except for alphabets and write the new string.
my_string = ""Hello, world!""",Hello world
"Filter a given list of numbers in Python to find all the even numbers.
list1 = [3, 4, 5, 6, 7, 8, 9]","list2 = [number for number in list1 if number % 2 == 0]
print(list2) #[4, 6, 8]"
"Reorder a given array in specialized order
","def reorder_array(arr):
    """"""
    Reorder a given array in specialized order
    :param arr: the input array to reorder
    :return: the reordered array
    """"""
    # determine the size of the array
    n = len(arr)
    
    # create a new array to store the reordered results
    reordered = [0] * n
    
    # loop through the array 
    for i in range(n):
        # calculate the position of the current element
        pos = 2 * (arr[i] % (1 + n // 2))
        # find the first vacant position in the new array
        while reordered[pos] != 0:
            pos += 1
        # assign the current element to the vacant position
        reordered[pos] = arr[i]
    
    return reordered"
"Write a HTML code snippet to create a link which redirects to a given website.
","<a href=""https://www.example.com/"">Link Text</a>"
"Implement a game of Hangman in Python.
","import random

# list of words
word_list = [""python"", ""java"", ""computer"", ""programming"", ""hangman""]

# randomly select a word
word = random.choice(word_list)

# set initial lives
lives = 6

# write your code here
def hangman(word, lives):
  return # write your code here"
"Design an algorithm for finding the frequency of occurrence of each character in a given string
str = ""hello world""","def char_frequency(str):
    freq = {}
    for char in str:
        if char in freq: 
            freq[char] += 1
        else:
            freq[char] = 1
    return freq"
"Create a function that takes in two integer values and prints out the larger one.
","def print_greater_value(num1, num2):
    if num1 > num2:
        print(num1)
    else:
        print(num2)"
"Print out all the numbers between 1 and 100 that are divisible by 3.
","for i in range (1, 101):
  if i % 3 == 0:
    print(i)"
"How can you print the following pattern in JavaScript?
","for (let i=1; i<=5; i++) {
 for (let j=5; j>=i; j--) {
    document.write(""*"");
  }
 document.write(""<br>"");
}"
"Add a function to the following JavaScript code to search a value in a given array
const arr = [12, 5, 8, 130, 44];","const arr = [12, 5, 8, 130, 44];

function searchValue(arr, value) {
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] === value) {
            return (i);
        }
    }
    return -1;
}"
"Implement a matrix multiplication program in Java.
","public class MatrixMultiplication 
{
    static int N = 5; 
  
    static int[][] multiply(int[][] A,  
                     int[][] B) 
    { 
        int[][] C = new int[N][N]; 
  
        for (int i = 0; i < N; i++) 
        { 
            for (int j = 0; j < N; j++) 
            { 
                for (int k = 0; k < N; k++) 
                { 
                    C[i][j] += A[i][k] * B[k][j]; 
                } 
            } 
        } 
        return C; 
    } 
  
    static void printMatrix 
                           (int[][] matrix) 
    { 
        for (int i = 0; i < N; i++) 
        { 
            for (int j = 0; j < N; j++) 
            { 
                System.out.print(matrix[i][j] + "" ""); 
            } 
            System.out.println(); 
        } 
    } 
  
    public static void main (String[] args) 
    { 
        int[][] A = { { 1, 1, 1 },  
                      { 2, 2, 2 },  
                      { 3, 3, 3 },  
                      { 4, 4, 4 },  
                      { 5, 5, 5 } }; 
  
        int[][] B = { { 1, 1, 1 },  
                      { 2, 2, 2 },  
                      { 3, 3, 3 },  
                      { 4, 4, 4 },  
                      { 5, 5, 5 } }; 
  
        int[][] C = multiply(A, B); 
        printMatrix(C); 
    } 
}"
"Create an array with elements 'Red', 'Green', 'Blue'.
","var colors = ['Red', 'Green', 'Blue'];"
"Write code to return a list of prime numbers in the given range.
Start: 10. End: 15","def get_prime_numbers(start, end):
    prime_numbers = []
    for num in range(start, end + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_numbers.append(num)
    return prime_numbers
    
# print list of prime numbers
print(get_prime_numbers(10, 15))  
# Output: [11, 13, 15]"
"Write a function to print out all possible permutations of a list of numbers.
list = [1, 2, 3]","def permutations(list): 
    if len(list) == 0: 
        return [] 
    if len(list) == 1: 
        return [list]
    l = [] #empty list 
  
    for i in range(len(list)): 
        m = list[i] 
        remList = list[:i] + list[i+1:] 
        for p in permutations(remList): 
            l.append([m] + p) 
    return l"
"Construct a classifier to identify which programming language a given code snippet belongs to.
def foo(x, y):
 return x + y","from sklearn.feature_extraction.text import CountVectorizer 
from sklearn.naive_bayes import MultinomialNB

def get_features(code):
 # Count the words in the code
 vectorizer = CountVectorizer(token_pattern=r""(?u)\b\w+\b"")
 count_vectors = vectorizer.fit_transform([code])
 return count_vectors.toarray()

def classify_language(code):
 # Training data
 data = [(""Python"", ""def foo(x, y):\n return x + y""),
 (""Java"", ""public int foo(int x, int y) {\n return x + y;\n }""),
 (""C++"", ""int foo(int x, int y) {\n return x + y;\n }""),
 (""JavaScript"", ""function foo(x, y) {\n return x + y;\n }"")]
 languages, codes = zip(*data)
 
 # Extract features from the code
 X_train = [get_features(c) for c in codes]
 # Train a classifier
 clf = MultinomialNB().fit(X_train, languages)
 # Extract features from the given code
 X_input = get_features(code)
 # Predict the language
 return clf.predict([X_input])[0]"
"Generate a SQL query to return all records from the table with a specified column including null values
Table name: my_table
Column name: age","SELECT * 
FROM my_table 
WHERE age IS NULL OR age != '';"
"How would you access the value of the key 'name' in the following dictionary?
my_dict = {
 'name': 'John',
 'age': 22
}",my_dict['name']
"Write a LINQ query to retrieve records from employee list which are from either India or Canada.
","var employees = from e in Employee
                where e.Country == ""India"" || e.Country == ""Canada""
                select e;"
"How would you update the following code to iterate over a list of strings?
list_of_ints = [1, 2, 3, 4]

for n in list_of_ints:
    print(n)","The following code can be updated to iterate over a list of strings by replacing `list_of_ints` with the list of strings and replacing `print(n)` with `print(str(n))` to properly format each element of the list.

list_of_strings = [""one"", ""two"", ""three"", ""four""]

for n in list_of_strings:
    print(str(n))"
"Output the top 3 values of the given array in descending order.
nums = [4, 8, 2, 10, 9, 6, 1]","nums.sort()
top_3 = nums[-3:]

 # reverse to great in descending order
top_3.reverse()

print(top_3) # Output [10, 9, 8]"
"Write a function to remove duplicate elements from a list keeping only the first occurrence of each element.
[1, 2, 3, 3, 3, 4, 4, 5]","def remove_duplicates(nums):
 # Create a list to store the first occurrence of each number
 seen = []
 # Iterate over the list
 for num in nums:
  # If the number is not in the seen list, add it
  if num not in seen:
   seen.append(num)
 return seen"
"Build a MapReduce job with Hadoop to find the 99th percentile of a given data set.
","//Mapper Code
 
import java.io.IOException;
 
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
 
public class MapperClass extends Mapper<LongWritable, Text, Text, LongWritable> {
 
    LongWritable one = new LongWritable(1);
    Text data = new Text();
 
    @Override
    protected void map(LongWritable key, Text value, Context context) 
      throws IOException, InterruptedException {
 
        String[] line = value.toString().split("","");
        String number = line[0];
        // Emit key-value pair for number
        data.set(number);
        context.write(data, one);
 
    }
  
}
 
//Reducer Code
 
import java.io.IOException;
 
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;
 
public class ReducerClass extends Reducer<Text, LongWritable, Text, LongWritable> {
 
    int percentile;
    @Override
    protected void setup(Context context) 
      throws IOException, InterruptedException {
 
        //Get percentile from context configuration
        percentile = context.getConfiguration().getInt(""percentile"", 99);
    }
 
    @Override
    protected void reduce(Text key, Iterable<LongWritable> values,
      Context context)
      throws IOException, InterruptedException {
 
        LongWritable result = new LongWritable();
        int sum = 0;
        // Sum up the values
        for (LongWritable value : values) {
            sum += value.get();
        }
 
        // Calculate percentile
        int percentage = (sum*100)/percentile;
 
        if (percentile == percentage) {
            result.set(Long.parseLong((key.toString())));
            context.write(new Text(""Percentile 99:""), result);
        }
 
    }
  
}"
"Edit this HTML code to make it compliant with the HTML5 standard.
<html>
<head>
  <title>My HTML Page</title>
</head>
<body>
  <p>My HTML Page</p>
</body>
</html>","<!DOCTYPE html>
<html>
<head>
  <title>My HTML Page</title>
</head>
<body>
  <p>My HTML Page</p>
</body>
</html>"
"Write a JavaScript code snippet that creates a pop-up window with the text ""Welcome!"".
",window.alert('Welcome!');
"What is wrong with this code?
str1 = 'This is a string'
str2 = str1
str2 += ' with a suffix'",The variable str1 is not updated and remains as 'This is a string' when you add a suffix to str2. This means that the values of str1 and str2 are no longer the same.
"Create a list comprehension in Python to extract all the even numbers from a given list.
list = [3,4,5,6,7,8]",evens_list = [num for num in list if num % 2 == 0]
"Identify the type of the following variable:
$$
a = 5
$$
",The type of 'a' is an integer.
"Write a function to remove the value x from a list l
x = 2
l = [1, 2, 3, 4, 5]","def remove_x(x, l):
    l.remove(x)
    return l"
"How to write a React component to render an array of numbers?
","class MyComponent extends React.Component {
  render() {
    const numbers = [1, 2, 3, 4, 5];
    return(
      <div>
        {numbers.map(number => <p key={number}>{number}</p>)}
      </div>
    );
  }
}"
"Change the following regular expression so that it matches terms beginning with 'g'
^g",^g\w+
"Edit the given code snippet to generate a table in HTML with four columns and three rows.
<table></table>","<table>
    <tr>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
    </tr>
    <tr>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
    </tr>
    <tr>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
    </tr>
</table>"
"In CSS, how can the width of a div element be set to 100% of its parent's width?
","In CSS, the width of a div element can be set to 100% of its parent's width by using the ""width: 100%;"" property."
"Identify the bug in the following python code:

def foo(x):
    x[0] = 2
[0, 1, 2]","This code is trying to modify an immutable object (a tuple) as it is attempting to assign a value to the first element in a tuple. The correct way to do this is with a list, not a tuple. The code should be changed to:

def foo(x):
    x[0] = 2
    
where the input x is a list instead of a tuple."
"Classify the following sentence into either Affective or Predicate.
""She was beautiful.""",Affective
"Create a function that returns the longest word in a sentence.
sentence = ""This is a sentence with lots of words.""","def get_longest_word(sentence):
    words = sentence.split()
    longest_word = """"
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    return longest_word"
"Create a JS object property with a string value.
","let obj = {
  name:""John Smith""
};"
"Modify the given Java code to print the first character of each word in a sentence.
String sentence = ""Today is a good day"";","String sentence = ""Today is a good day"";
String[] words = sentence.split("" "");
 
for (String word : words) {
    System.out.print(word.charAt(0));
}"
"Write a Python program to output an array with dimensions [N, M] filled with random numbers between 0 and 1
N = 5
M = 4","import numpy as np
np.random.seed(0)
nums=np.random.rand(N,M)
print(nums)"
"Fill in the blanks of the following Python code to implement a Selection Sort algorithm.
def selection_sort(arr):
    for [i] in [range](len(arr),1,-1):
        max_element=arr[0]
        for [j] in [range]([i]):
            if arr[j] > max_element :
                max_element=arr[j]
          
        [temp] = arr[i]
        arr[i] = max_element
        arr[arr.index(max_element)] = [temp]","def selection_sort(arr):
    for i in range(len(arr),1,-1):
        max_element=arr[0]
        for j in range(i):
            if arr[j] > max_element :
                max_element=arr[j]
          
        temp = arr[i-1]
        arr[i-1] = max_element
        arr[arr.index(max_element)] = temp"
"Write an HTML code to create a horizontal line.
",<hr>
"Create an HTML form with radio buttons for selecting gender.
","<form>
  <label>Gender:</label><br>
  <input type=""radio"" name=""gender"" value=""male""> Male<br>
  <input type=""radio"" name=""gender"" value=""female""> Female<br> 
</form>"
"Create a SQL query to list all the employees of a given department in descending order of their salary.
Table name: ""Employees""
Columns: ""emp_name"", ""emp_dept"", ""salary""","SELECT emp_name, emp_dept, salary FROM Employees 
WHERE emp_dept = <dept_name> 
ORDER BY salary DESC;"
"Construct a regex pattern to match a valid IP address
",^(((25[0–5]|2[0-4][0–9]|[01]?[0-9][0–9]?)\.){3}(25[0–5]|2[0-4][0–9]|[01]?[0–9][0–9]?))$
"Write a C# program to sort a given array using the Quick Sort algorithm.
array = [8, 4, 1, 9, 6]","using System;

namespace QuickSortExample
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] array = { 8, 4, 1, 9, 6 };
            int left = 0;
            int right = array.Length - 1;

            quickSort(array, left, right);
	
            Console.WriteLine(""Sorted array is:"");
            foreach (int val in array)
            {
                Console.WriteLine(val);
            }
            
        }

        static void quickSort(int[] array, int left, int right)
        {
            if (left < right)
            {
                int pivotIndex = partition(array, left, right);
	
                quickSort(array, left, pivotIndex - 1);
                quickSort(array, pivotIndex + 1, right);
            }
        }

        static int partition(int[] array, int left, int right)
        {
            int pivot = array[right];
            int pivotIndex = left;
	
            for (int i = left; i < right; i++)
            {
                if (array[i] <= pivot)
                {
                    swap(array, i, pivotIndex);
                    pivotIndex++;
                }
            }

            swap(array, right, pivotIndex);
 
            return pivotIndex;
        }

        static void swap(int[] array, int i, int j)
        {
            int temp = array[i];
            array[i] = array[j];
            array[j] = temp;
        }
    }
}"
"Count the number of vowels present in the input text.
Good morning!","def vowel_count(text):
    vowels = ['a', 'e', 'i', 'o', 'u']
    count = 0
    for c in text:
        if c.lower() in vowels:
            count += 1
    return count"
"Given a binary search tree and a target value, write a python function to search for the closest node value to the target.
","def closestInBST(root, target):
  res = root.val
  while root:
    if root.val == target:
      return root.val
    if abs(root.val-target) < abs(res-target):
      res = root.val
    if target < root.val:
      root = root.left
    else:
      root = root.right
  return res"
"Create a React component to display HTML elements in a scrolling page.
","import React from 'react';

const ScrollingPage = () => {
  return (
    <div style={{ overflow: 'auto' }}>
      {/* HTML elements you want to display go here */}
    </div>
  );
};

export default ScrollingPage;"
"Suggest an appropriate algorithm to filter out unwanted words from a given paragraph of text.
","A possible approach to filter out unwanted words from a given paragraph of text is to use a hash table or dictionary. By creating a dictionary using key-value pairs of words and their frequencies, it becomes possible to compare the words found in a given text against the words in the dictionary to determine their relevance. If a word is not found in the dictionary, it can be assumed to be an unwanted word and can thus be discarded."
"How do you sort a dictionary by values in Python?
","sorted_dict = dict(sorted(mydict.items(), key=lambda x: x[1]))"
"Write an SQL query to update the salary of all employees with the title 'Manager' to $50000.
","UPDATE employees
 SET salary = 50000
 WHERE title = 'Manager';"
"Write a code to fetch the title of a web page
","import requests
from bs4 import BeautifulSoup

def fetch_title():
    page = requests.get('http://example.com')
    content = page.content
    soup = BeautifulSoup(content, 'html.parser')
    return soup.title.string"
"Edit the following Java code to print the elements of an array in the form of a matrix.
public class Matrix 
{ 
    public static void main(String[] args) 
    { 
        int[][] myArray = {{1,2,3}, 
                            {4,5,6}, 
                            {7,8,9}}; 
    } 
}","public class Matrix 
{ 
    public static void main(String[] args) 
    { 
        int[][] myArray = {{1,2,3}, 
                            {4,5,6}, 
                            {7,8,9}}; 
        for (int i = 0; i < myArray.length; i++) 
        { 
            for (int j = 0; j < myArray[i].length; j++) 
            { 
                System.out.print(myArray[i][j] + "" ""); 
            } 
            System.out.println();
        } 
    } 
}"
"Rewrite this code in a more efficient way making use of the built-in sort functions.
my_list = [3, 2, 1]
for i in range(len(my_list)):
    for j in range(len(my_list)-1):
        if my_list[j] > my_list[j+1]:
            my_list[j], my_list[j+1] = my_list[j+1], my_list[j]","""""""
Rewrite this code in a more efficient way making use of the built-in sort functions
""""""

my_list = [3, 2, 1]
my_list.sort()"
"Write a PHP program to receive an array as an input and return an array with the same elements in reverse order.
[1, 2, 3, 4, 5]","<?php

function reverse_array($arr) {
  $reversed_arr = array_reverse($arr);
  return $reversed_arr;
}

$input_arr = [1, 2, 3, 4, 5];
$output_arr = reverse_array($input_arr);

print_r($output_arr);"
"How would you reverse the order of the elements in a given singly linked list in-place?
","def reverse_inplace(head): 
    if head is None or head.next is None: 
        return head  
        
    prev_node = None
    next_node = None
    curr_node = head  
    
    while curr_node is not None: 
        next_node = curr_node.next
        curr_node.next = prev_node
        prev_node = curr_node
        curr_node = next_node
        
    return prev_node"
"Write a SQL query to find the 10 longest surnames from a given table of surnames.
","SELECT surname, LENGTH(surname) 
FROM table 
ORDER BY LENGTH(surname) DESC 
LIMIT 10;"
"Write a code snippet to display the name and age of the oldest person in a list called 'people'.
people = [{'name':'Jone','age':45}, {'name':'Jane','age':37}, {'name':'Jack','age':48}]","oldest_person = max(people, key=lambda person: person['age'])

print(""Name: {} Age: {}"".format(oldest_person['name'], oldest_person['age']))"
"Identify which language the following code snippet is written in.
#include<bits/stdc++.h>
using namespace std;

int main() 
{ 
    cout << ""Hello, World"";
    return 0; 
}",C++
"Write a function in C# to calculate the area of a circle from its radius.
Radius: 5","public double GetAreaOfCircle(double radius)
{
    return Math.PI * Math.Pow(radius, 2);
}"
"Change the given string to list.
Data Science","['Data', 'Science']"
"Program to swap all even and odd elements in a given array.
my_list = [1, 2, 3, 4, 5, 6, 7, 8]","def swap_even_and_odd(my_list):
 for i in range(len(my_list)-1):
 if i % 2 == 0 and my_list[i] % 2 != 0:
 my_list[i], my_list[i+1] = my_list[i+1], my_list[i]
 return my_list

print(swap_even_and_odd(my_list))"
"Write a JavaScript program to search a given element x in a sorted array.
arr = [1, 2, 4, 8, 10];
x = 8","function searchElement(arr, x) {
 let start = 0;
 let end = arr.length - 1;
 let mid;

 while (start <= end) {
  mid = Math.floor((start + end) / 2);
  if (arr[mid] === x) {
   return mid;
  }
  if (arr[mid] < x) {
   start = mid + 1;
  } else {
   end = mid - 1;
  }
 }

 return false;
}

console.log(searchElement(arr, x));"
"Write an XPATH expression to select an element with a specific id
","//*[@id=""myElement""]"
"Create a database in SQL and name it ""Contacts"".
",CREATE DATABASE Contacts;
"Using C#, write a code to convert a Fahrenheit temperature to its equivalent in Celsius.
50","public static double FahrenheitToCelsius(double fahrenheitTemperature)
{
    double celsiusTemperature = (fahrenheitTemperature - 32) / 1.8;
    
    return celsiusTemperature;
}"
"Edit the following code to return the elements in the reversed order.
def reverse_list(lst):
    for i in range(0, len(lst)):
        temp = lst[i]
        lst[i] = lst[len(lst)-1-i]
        lst[len(lst)-1-i] = temp
    return lst","def reverse_list(lst):
    for i in range(0, len(lst)//2):
        temp = lst[i]
        lst[i] = lst[len(lst)-1-i]
        lst[len(lst)-1-i] = temp
    return lst"
"Write a regular expression to match a 4 digit zip code.
","import re

# Zip code should consist of four digits.
zip_code_regex = re.compile(r'\d{4}')"
"Create a JavaScript function to convert a given string to a Base-64 encoded value.
","const convertToBase64 = str => btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,
  (match, p1) => String.fromCharCode(`0x${p1}`)));"
"Create a PHP script that can validate if a given string is a valid IP address.
","function validateIP(ip) { 
  return filter_var(ip, FILTER_VALIDATE_IP); 
}"
"Create a list of all the prime numbers between 3 and 20
","[3, 5, 7, 11, 13, 17, 19]"
"Given a SQL table of user accounts, write a SQL query to find the account with the lowest number of login attempts.
","SELECT * 
FROM users
ORDER BY login_attempts ASC 
LIMIT 1"
"Find any two numbers in an array such that their sum is equal to a given value.
array = [3, 4, 5, 6, 7, 8]
value = 11","for i in range(len(array)):
 for j in range(i+1, len(array)):
  if array[i] + array[j] == value:
   print(array[i], array[j])"
"Create a if statement in JavaScript that checks if number is divisible by 3.
Number: 9","if (number % 3 === 0) {
    console.log('Number is divisible by 3');
}"
"You need to classify a given sentence into one of 5 categories.
This sentence is about sports","def classify(sentence):
    if 'sports' in sentence.lower():
        return 'sports'
    elif 'entertainment' in sentence.lower():
        return 'entertainment'
    elif 'politics' in sentence.lower():
        return 'politics'
    elif 'finance' in sentence.lower():
        return 'finance'
    elif 'science' in sentence.lower():
        return 'science'
    else:
        return 'other'"
"Is the following code valid Python?
if bool == true:
    print(""True"")",False
"Create a function to compute the depth of a binary tree.
","def tree_depth(root): 
    # Base case 
    if root is None: 
        return 0 ;  
  
    # If tree is not empty then height = 1 + max of left  
    # height and right heights  
    return 1 + max(tree_depth(root.left),  
                    tree_depth(root.right))"
"Create a CSS style for the text within the tag <p> to be blue and italicized.
","p {
  color: blue;
  font-style: italic;
}"
"Create a function that calculates the area of a circle when provided with its radius.
radius = 5","def calculate_area(radius):
    return 3.14 * radius * radius"
"Describe a pipelined architecture for a processor
","A pipelined Processor architecture is one in which the instruction set is divided into separate stages, each associated with a specific segment in the computation process. As an instruction is entered, it is routed to the appropriate stage in the pipeline and progresses sequentially, thereby allowing the processor to complete multiple instructions simultaneously. The stages, known as the pipeline stages, can include IF (Instruction Fetch), ID (Instruction Decode), EX (Execution), MEM (Memory Access) and WB (Write-Back). The IF and ID stages typically handle instruction fetch and decode, while EX and MEM perform instruction execution and memory access, respectively. The final stage, WB, is responsible for writing the result to memory or a register."
"How can we join two lists in Python?
","list1 = [1, 2, 3]
list2 = [4, 5, 6]

# Join two lists
list3 = list1 + list2"
"Translate the following Ruby code to Javascript
def print_hello
  puts ""Hello!""
end

print_hello","function printHello() {
  console.log(""Hello!"");
}

printHello();"
"What is the purpose of treemaps in data visualization?
",Treemaps are used to represent hierarchical data visually. They are used to visualize large datasets by dividing them into rectangles proportional to their values. This makes it easier to quickly compare values and identify patterns across datasets.
"Model a NoSQL database using CosmosDB
The database should store user posts, which consists of the post ID, content text, user ID and date of creation.","Azure Cosmos DB is a NoSQL database-as-a-service model that provides a schema-free data model and supports automatic indexing of all data. 
To model a posts database with CosmosDB, create a database and a container. 
Then create item in the container, each item should contain the fields ""Post ID"", ""ContentText"", ""User ID"" and ""Date of Creation"". 
These fields should be indexed to allow for efficient queries and retrieval of the posts data."
"Design a JavaScript function named ""calculate"" that calculates the mean of a given array.
Array: [1, 5, 8, 9, 10]","function calculate(array) {
  let sum = 0;
  for (let i = 0; i < array.length; i++) {
    sum += array[i];
  }
  let mean = sum / array.length; 
  return mean;
}"
"How many lines of code to print Fibonacci sequence of 30 numbers?
",The number of lines of code to print Fibonacci sequence of 30 numbers is 5.
"Write a code to split a list of numbers into two sets with equal sum
[1, 2, 3, 4, 5, 6, 7]","def split_list(list):
    start = 0
    end = len(list) - 1

    left_sum = 0
    right_sum = sum(list[start:end+1])

    while start < end:
        right_sum -= list[end]
        if left_sum == right_sum:
            break
        left_sum += list[start]
        start += 1

    if left_sum == right_sum:
        return list[:start], list[start:]
    else:
        return None

if __name__ == '__main__':
    arr = [1, 2, 3, 4, 5, 6, 7]
    left, right = split_list(arr)
    print(""left set:"", left)  # prints [1, 2, 3, 4]
    print(""right set:"", right)  # prints [5, 6, 7]"
"How will you modify the following Ruby code to convert a given number to its corresponding alphabetical letter?
num = 56","num += 64
letter = num.chr
puts letter
# Output: '8'"
"Enter the necessary code to initiate a MongoDB connection
","from pymongo import MongoClient

#creating the MongoClient
client = MongoClient(""mongodb://localhost:27017/"")

#connecting to the database
db = client[""database_name""]"
"Generate a program to convert a date in the format 'dd/mm/yyyy' to a date in the format 'yyyy/mm/dd'.
02/12/2020","def convert_date(date):
  date_list = date.split('/')
  return '{}/{}/{}'.format(date_list[2],date_list[1],date_list[0])"
"Create an asyncio event loop and execute a coroutine.
","import asyncio

async def myfunc():
   print(""I'm in a coroutine"")

loop = asyncio.get_event_loop()
try:
    loop.run_until_complete(myfunc())

finally:
    loop.close()"
"Given the following array of dictionaries, write a function in Python to find and return the longest common prefix in the keys of dictionaries.
arr_of_dictionaries = [
    {
        ""name"": ""John Doe"",
        ""country"": ""United States""
    },
    {
        ""name"": ""Jane Doe"",
        ""state"": ""New York""
    }
]","def longest_common_prefix(arr_of_dictionaries):
    prefix = ''
    if len(arr_of_dictionaries) == 0:
        return prefix
    first_dict_keys = arr_of_dictionaries[0].keys()
    for i in range(len(list(first_dict_keys)[0])):
        char = list(first_dict_keys)[0][i]
        for dict in arr_of_dictionaries:
            if list(dict.keys())[0][i] != char:
                return prefix
        prefix += char
    return prefix"
"How would you use regex to identify a valid ip4 address?
","A valid IPv4 address can be identified using the regular expression pattern: 

^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.|$)){4}$"
"Create a method in Python to round a number to 4 decimal points.
","def round_to_4_dp(num):
    return round(num, 4)"
"Describe the programming language used for the given project
Project: Building an e-commerce website using Django.","The programming language used for the project is Python with Django web framework. Django is an open source framework for developing web applications. It uses the Model-View-Template architecture pattern for developing web applications. It provides useful features like built-in admin interface, secure authentication and authorization, support for AJAX and Python libraries."
"Write a query to display the average age of the students.
Table Name: Students",SELECT AVG(Age) FROM Students;
"How would you capitalize the first letter of a string in JavaScript?
","function capitalizeFirstLetter(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}"
"Generate a string representation of a binary tree.
","def tree_str(root):
    if root is None:
        return ''

    left_str = tree_str(root.left)
    right_str = tree_str(root.right)

    if left_str != '' and right_str != '':
        return '(' + left_str + ')' + str(root.val) + '(' + right_str + ')'
    if left_str != '' and right_str == '':
        return '(' + left_str + ')' + str(root.val)
    if left_str == '' and right_str != '':
        return  str(root.val) + '(' + right_str + ')'
    else:
        return str(root.val)"
"Generate a 3x3 matrix using randomly generated numbers between 1 and 10.
","matrix = [[4, 5, 7],
          [6, 2, 9],
          [1, 3, 8]]"
"Create a python program to determine the comprehesive count of words in a given string
Given the string s =""python programming is fun""","def count_words(s):
    words = s.split(' ')
    count = len(words)
    return count"
"Create a function that takes two strings and removes all the white spaces from them.
string_1 = ""Hello World !""
string_2 = ""  Goodbye!  ""","def remove_whitespace(string_1, string_2):
    return string_1.replace("" "", """") + string_2.replace("" "", """")"
"Create a function to append a new element to a list.
","def append_list(my_list, new_element):
    my_list.append(new_element)
    return my_list"
"Create a class that can be used to generate random numbers between a given range.
","class RandomNumberGenerator:
    def __init__(self, min_num, max_num):
        self.min_num = min_num
        self.max_num = max_num
    
    def get_random_number(self):
        return random.randint(self.min_num, self.max_num)"
"Write a function in Python to convert JSON data into a Python dictionary.
json_data = '{""name"":""John"",""age"":30,""city"":""New York""}'","import json

def json_to_dict(json_data):
 return json.loads(json_data)

data = json_to_dict(json_data)
print(data)"
"Write a Java program to produce Fibonacci numbers up to a given number
","public class Fibonacci {
    public static void main(String[] args) {
        int limit = 10;
        System.out.print(""Fibonacci Series of ""+limit+"" numbers: "");
        for(int i=0; i<limit; i++){
            System.out.print(fibonacci(i)+"" "");
        }
    }
 
    public static int fibonacci(int number){
        if(number==0 || number==1){
            return number;
        }
 
        return fibonacci(number-1) + fibonacci(number-2);
    }
}"
"Create a CSS style sheet to set font size of all headings to 20px, font weight to bold and color to blue.
","h1, h2, h3, h4, h5, h6 {
    font-size: 20px;
    font-weight: bold;
    color: blue;
}"
"Construct a for loop to print out each element in a given list.
my_list = [2, 3, 5, 8]","for i in my_list:
    print(i)"
"Rewrite the code block in an optimized way.
nums = [1, 2, 3, 4, 5, 6]
new_nums = []
for num in nums:
	new_nums.append(num + 1)","nums = [1, 2, 3, 4, 5, 6]
new_nums = [num + 1 for num in nums]"
"Create a DynamoDB table called ""Users"" with a primary key as ""UserID"".
","aws dynamodb create-table --table-name Users --attribute-definitions 
AttributeName=UserID,AttributeType=S 
--key-schema AttributeName=UserID,KeyType=HASH 
--provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5"
"Pack a string of characters into an array of length 8
var myString = ""abcdefgh""","function packChars(str) {
    var arr = [];
    for (var i = 0; i < 8; i++) {
        arr.push(str[i] || "" "");
    }
    return arr;
}
packChars(myString);
// Returns [""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h""]"
"Complete the following C++ code to sort a two-dimensional array.
int[][] arr = {{4, 9}, {2, 8}, {3, 1}};","#include <algorithm> 

int[][] arr = {{4, 9}, {2, 8}, {3, 1}};

// Sort by the first element
std::sort(arr.begin(), arr.end(), 
    [](const std::vector<int>& a, const std::vector<int>& b) {
        return a[0] < b[0];
    });

// Sort by the second element 
std::sort(arr.begin(), arr.end(), 
    [](const std::vector<int>& a, const std::vector<int>& b) {
        return a[1] < b[1];
    });"
"Write a PHP function named ""calculateArea"" to calculate the area of a rectangle.
length = 10
width = 20","<?php
  function calculateArea($length,$width){
    return $length * $width;
}
 
echo calculateArea(10,20);
?>"
"Write a SQL query to find the employee names who are working in the company since Jan 2019.
",SELECT employee_name FROM employees WHERE start_date >= '2019-01-01'
"Convert 1024 bytes into kilobytes.
","1 kilobyte = 1024 bytes

1024 bytes = 1 kilobyte."
"Create a new list by changing all the strings in a given list to uppercase.
lst = [""apple"", ""orange"", ""banana""]","def to_upper_case_list(lst):
    res = []
    for s in lst:
        res.append(s.upper())
    return res

if __name__ == '__main__':
    lst = [""apple"", ""orange"", ""banana""]
    print(to_upper_case_list(lst))"
"Print the number of elements present in a list in C.
int list[20] = {1, 4, 6, 8, 9};","int listLength = sizeof(list) / sizeof(list[0]);
printf(""Number of elements in the list: %d \n"", listLength);"
"Generate a C# code for searching an element in an array.
","public class Program
{
    public static int SearchElement(int[] arr, int value)
    {
        for (int i=0; i<arr.Length; i++)
        {
            if (arr[i] == value)
                return i;
        }
        return -1;
    }

    public static void Main()
    {
        int[] myArray = { 1, 2, 3, 5, 7, 10, 15 };
        int element = 5;

        int index = SearchElement(myArray, element);

        if (index == -1)
            Console.WriteLine(""Element not found"");
        else
            Console.WriteLine(""Element found at position: "" + (index+1));
    }
}"
"Design a function that provides the square root of a number x.
","def square_root(x):
    return x ** 0.5"
"Create a React component that displays a search bar.
","const SearchBar = () => {
  return (
    <div>
      <input type=""text""/>
      <button>Search</button>
    </div>
  );
};"
"Store the text ""Hello World!"" in a variable in Ruby.
","my_text = ""Hello World!"""
"Create a Python class that encodes a given number using the Base58 algorithm.
number = 123456789","class Base58Encoder:
    '''This class encodes numbers using the Base58 algorithm'''
    def __init__(self,number):
        self.number = number

    def encode(self):
        encoded = """" 
        alphabet = ""123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz""
    
        while self.number > 0:
            remainder = self.number % 58 
            self.number = self.number // 58 
            encoded = alphabet[remainder] + encoded 
    
        return encoded"
"Change the given code to allow the user to input a number and print it twice.
","num = int(input(""Enter a number: ""))
print(num * 2)"
"Create a function in C++ to find the ASCII value of a character
","int asciiValue(char c) 
{ 
    int value = int(c); 
    return value; 
}"
"Return a subset of a given array of size K
arr = [3, 6, 2, 5, 7, 4], K = 3","def subset(arr, K): 
    n = len(arr) 
    subset_arr = [0]; 
      
    for i in range (0, n): 
        x = len(subset_arr) 
        for j in range(0, x): 
              
            # Generate subset by adding 
            # elements of A
            temp = [] 
            temp = subset_arr[j] 
            temp.append(arr[i]) 
              
            # Append in the list 
            subset_arr.append(temp) 
              
    # Return K size subset 
    length = len(subset_arr) 
    if (length >= K): 
        return subset_arr[length - K:] 
    else: 
        return -1
    
print(subset(arr, K))"
"Using React, write a function to render a text area element with the text provided as the input for the function.
text = ""Hello World!""","const renderTextArea = text => {
  return (
    <textarea value={text} />
  );
};"
"Create a function to find the value of Pi rounded to the 3rd decimal point.
","def find_pi():
    pi = 3.141
    return round(pi, 3) # rounded to the 3rd decimal point"
"Complete the following code so it swaps two given elements in the list.
list = [1, 3, 7, 4, 2]
def swap(list, i, j):
    # Your code here","list = [1, 3, 7, 4, 2]
def swap(list, i, j):
    # Swap the elements
    list[i], list[j] = list[j], list[i]"
"Create a script in JavaScript for flipping a coin.
","function coinFlip(){
  let flipResult = Math.floor(Math.random() * 2);
  
  if (flipResult == 0){
    return ""Heads"";
  } 
  else {
    return ""Tails"";
  }
}

let result = coinFlip();
console.log(result);"
"Write a SQL query to select all books with a title starting with “The” from the database.
Table: books
Columns: id, title, year
Entries
1, ‘The Millionaire Network’, 2020
2, ‘Web Development for Dummies’, 2020
3, ‘The Network for Beginners’, 2021","SELECT * 
FROM books 
WHERE title LIKE ‘The%’;"
"Assign a value to a variable based on the value of another variable.
int x = 0;
int y = 1;","if (x == 0) {
    int y = 1;
} else {
    int y = 0;
}"
"Using given HTML code, make the font color of 2nd paragraph blue.
<body>
    <p>This is the first paragraph.</p>
    <p>This is the second paragraph.</p>
</body>","<body>
    <p>This is the first paragraph.</p>
    <p style=""color:blue;"">This is the second paragraph.</p>
</body>"
"With given input string, create a program that returns a new string with the first character capitalized.
hello world","def capitalize(text):
    return text[0].upper() + text[1:]"
"Using the code given below, add a class called ""active"" to the first navigation link to make it highlighted when the page is loaded.
<ul>
  <li><a href=""#"">Home</a></li>
  <li><a href=""#"">About</a></li>
  <li><a href=""#"">Contact</a></li>
</ul>","<ul>
  <li><a href=""#"" class=""active"">Home</a></li>
  <li><a href=""#"">About</a></li>
  <li><a href=""#"">Contact</a></li>
</ul>"
"Deploy a basic HTML page to a server.
","Clone the repository containing the HTML page to the server.
Configure the web server so that it will serve the HTML page when requested."
"Write an HTML code to create a form with input fields for name, age and email address.
","<form>
  Name: <input type=""text"" name=""name""><br>
  Age: <input type=""number"" name=""age""><br>
  Email: <input type=""email"" name=""email""><br>
  <input type=""submit"" value=""Submit"">
</form>"
"Create a JavaScript object that stores the properties name, age and favorite color.
","let person = {
  name: ""John Smith"",
  age: 30,
  favoriteColor: ""blue""
};"
"Create a method to reverse a linked list.
","def reverse_list(head): 
  
    prev = None
    current = head 
    while(current is not None): 
        next = current.next
        current.next = prev 
        prev = current 
        current = next
    head = prev 
    return head"
"Construct a loop to output all the elements from a list.
['a', 'b', 'c', 'd']","for i in range(len(arr)):
    print(arr[i])"
"Create a Dockerfile to containerize an existing web application.
","FROM ubuntu:latest

# Install the necessary packages
RUN apt-get update && apt-get install -y \
    apache2 \
    php \
    libapache2-mod-php

# Copy the web application files from host to container
COPY . /var/www/html

# Set Apache as the default startup command
CMD [""apachectl"", ""-D"", ""FOREGROUND""]"
"Create a Git branch for a given feature.
Feature name: 'my-feature'",git checkout -b my-feature
"Write a Java program to print out all possible combinations of the numbers from 0 to 9
","public class Combinations {
    static void printCombinations(int[] arr, int index, int num, int reducedNum) 
    { 
        if (reducedNum < 0) 
            return; 
         if (reducedNum == 0) { 
            for (int i = 0; i < index; i++) 
                System.out.print(arr[i] + "" ""); 
            System.out.println(); 
            return; 
        } 
  
        // One by one replace the digit with all  
        // possible digits 
        int digit = 0; 
        while (digit <= 9) { 
  
            // if the digit is not used then replace 
            // it with the digit 
            if (arr[index] == -1) { 
                arr[index] = digit; 
                printCombinations(arr, index + 1,  
                                    num, reducedNum - digit); 
            } 
            digit++; 
        } 
  
        // replace the last digit with -1 
        arr[index] = -1; 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        int[] arr = new int[10];; 
        for (int i = 0; i < 10; i++) 
            arr[i] = -1; 
  
        printCombinations(arr, 0, 10, 10); 
    } 
}"
"Add a new element to the end of a list.
mylist=[2,5,7]",mylist.append(9)
"Find all the string literals in a given C++ program.
#include <iostream>
int main(){
 std::cout << ""Hello World!"" << std::endl;
 return 0;
}","""Hello World!"""
"Use the following code to create a dictionary of the words in the text and the frequency of their occurrence.
text = “a happy day makes a happy life”","text = “a happy day makes a happy life”
words_dict = {}

for word in text.split():
    if word not in words_dict:
        words_dict[word] = 1
    else:
        words_dict[word] += 1"
"Create a class with two methods to generate a random Integer and String
","import random

class randomGenerator:
  
    def __init__(self):
        pass
    
    def generate_random_int(self):
        return random.randint(0,100)
    
    def generate_random_string(self):
        return ''.join(random.choices(string.ascii_letters + string.digits, k=10))

randomGenerator = randomGenerator()"
"Write code to generate a random six-character string that contains at least one lowercase letter and one number.
","import string
import random

def generate_code():
    chars = string.ascii_lowercase + string.digits
    return ''.join(random.choices(chars, k=6))"
"Implement a binary search algorithm using Python.
nums = [1, 2, 3, 4, 5, 6, 7, 8, 9]","def binary_search(nums, target): 
    start = 0
    end = len(nums) - 1

    while start <= end:
        mid = start + (end - start)//2

        if nums[mid] == target:
            return mid

        if nums[mid] > target:
            end = mid - 1

        else: 
            start = mid + 1

    return -1"
"Implement a function to print the Fibonacci series up to the nth term.
","def FibonacciSeries(n): 
    a = 0
    b = 1 
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n+1): 
            c = a + b 
            a = b 
            b = c 
        return b"
"Manually calculate this equation: (5x + 6) / 3
",(5x + 6) / 3 = (5x/3) + (6/3) = (5/3)x + 2
"Create a Java program to read in an integer from the user and output the number doubled.
","import java.util.Scanner;

public class NumberDoubling {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print(""Enter an integer: "");
        int number = scanner.nextInt();

        System.out.println(""The doubled number is: "" + (number * 2));
    }
}"
"Find the length of a given string using JavaScript.
str = ""I'm a GPT model""","let str = ""I'm a GPT model"";
let length = str.length;
console.log(length); // 16"
"Explain the concept of Generative Adversarial Networks (GANs).
","Generative Adversarial Networks (GANs) are a type of deep neural network that are composed of two sub-networks; a generative network and a discriminative network. The generative network produces samples such as images, audio, or text that try to fool the discriminator network, which is trained to recognize real data from generated data. The two networks are trained together in an adversarial setting, in which the generator attempts to generate data that is indistinguishable from real data and the discriminator tries to distinguish real data from generated data."
"Formulate an algorithm that helps you arrange a given set of numbers in ascending order.
[7, 4, 8, 9, 11]","1. Take two variables, say x and y. 
2. Assign x the value of the first element in the list and y the value of the second element.
3. Compare x and y. 
4. If x > y, swap them.
5. Now x is the smallest and move to the next element in the list. Repeat from step 2 with y and new element.
6. At the end of the array, the list is sorted."
"Assign a value to `name` by using the ternary operator
let name;",name = condition ? value1 : value2;
"Write a CSS selector to select all elements of the class ""title"".
",".title {

}"
"Implement a basic calculator using JavaScript.
","function calculate(inputString) {
  let result = 0;
  inputString.split(/\+|\-|\*|\//).forEach(function(value) {
    result += parseFloat(value);
  });
  return result;
}"
"Update the existing code to have a shape of (3,3) when an array of size (2,2) is reshaped.
import numpy as np

arr = np.arange(4).reshape(2,2)","import numpy as np

arr = np.arange(9).reshape(3,3)"
"Develop an algorithm to traverse a two-dimensional array.
A two-dimensional array with 3 rows and 4 columns.","One possible algorithm to traverse a two-dimensional array is an in-place spiral traversal. Start at the top left corner of the array and traverse in a clockwise direction while updating the location at each step. Each time move one step in the direction you are currently going, then turn right and continue in the new direction. When you reach the end of a row or column, turn right and continue in the new direction until you have traversed the entire array. 

For example, for an array of 3 rows and 4 columns: 

Step 1: [0, 0] 
Step 2: [0, 1] 
Step 3: [0, 2] 
Step 4: [0, 3] 
Step 5: [1, 3] 
Step 6: [2, 3] 
Step 7: [2, 2] 
Step 8: [2, 1] 
Step 9: [2, 0] 
Step 10: [1, 0] 
Step 11: [1, 1] 
Step 12: [1, 2]"
"Handle the given input and output a CSV string.
[{ user_id: 1, name: 'John', age: 15 }, { user_id: 2, name: 'Bob', age: 22 }]","user_id,name,age
1,John,15
2,Bob,22"
"Create an HTML page with a table containing the following data in four rows.
Id | First Name | Last Name | Age
1 | John | Doe | 30
2 | Jane | Doe | 25
3 | Brian | Smith | 32
4 | Maria | Smith | 28","<html>
    <head>
        <title>Table Data</title>
    </head>
    <body>
        <table>
            <thead>
                <tr>
                    <th>Id</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Age</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>1</td>
                    <td>John</td>
                    <td>Doe</td>
                    <td>30</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Jane</td>
                    <td>Doe</td>
                    <td>25</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Brian</td>
                    <td>Smith</td>
                    <td>32</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>Maria</td>
                    <td>Smith</td>
                    <td>28</td>
                </tr>
            </tbody>
        </table>
    </body>
</html>"
"Consider the formula z=(x1n+x2+x3)(2x2+3x3)? find the value of y
x1 = 2; x2 = 4; x3 = 6",y = 28
"Write a code that adds two integers without using any arithmetic operators.
","def add_two_integers(a, b): 
    while b != 0:
        carry = a & b     
        a = a ^ b      
        b = carry << 1  
    return a"
"Use the following code and write a JavaScript function to reverse the order of the characters in a given string.
","function reverseString(str) {
 return str.split('').reverse().join('');
}"
"Write a code to get the top 5 Twitter trends in the US.
","""""""
Get the top 5 Twitter trends in the US
""""""

import tweepy

def get_top_trends():
    # Setup authorization
    auth = tweepy.OAuthHandler('','')
    auth.set_access_token('','')
    api = tweepy.API(auth)

    # Get trends
    trends_result = api.trends_place(23424977)
    trends = trends_result[0]['trends']

    # Get top 5 trends
    top_trends = []
    for trend in trends:
        if trend['tweet_volume'] is not None and len(top_trends) < 5:
            top_trends.append(trend['name'])

    return top_trends

if __name__ == '__main__':
    print(get_top_trends())"
"Write a function to extract the elements from a given list and add them to a new list.
given_list = [0, 2, 4, 6, 8]","def extract_and_add_elements(given_list):
    new_list = []
    for x in given_list:
        new_list.append(x)
    return new_list"
"Write a fragment in HTML to display the values of an array in a table.
array = [""Banana"", ""Apple"", ""Pineapple"", ""Mango""]","<table>
   <tr>
      <th>Fruits</th>
   </tr>
   <tr>
      <td>Banana</td>
   </tr>
   <tr>
      <td>Apple</td>
   </tr>
   <tr>
      <td>Pineapple</td>
   </tr>
   <tr>
      <td>Mango</td>
   </tr>
</table>"
"Rewrite the code snippet using a different loop structure.
i = 0
while i < 5:
    print(i)
    i += 1","for i in range(0, 5):
    print(i)"
"Write a Lambda expression for finding the maximum number from a list of integers.
[3, 5, 21, 11, 9]","max_num = lambda x: max(x)

# Test
nums = [3, 5, 21, 11, 9]
max_num = max_num(nums)
print(max_num) # 21"
"Create a PHP program to store data submitted by an HTML form.
","<?php
if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
    $name = $_POST['name'];
    $age = $_POST['age'];

    // Store data in database
    $servername = ""localhost"";
    $username = ""root"";
    $password = """";
    $dbname = ""myDB"";

    // Connect to database
    $conn = new mysqli($servername, $username, $password, $dbname);
    if (!$conn) {
        die(""Connection failed: "" . mysqli_connect_error());
    }
    // Insert data
    $sql = ""INSERT INTO users (name, age)
    VALUES ('$name', '$age')"";

    if (mysqli_query($conn, $sql)) {
        echo ""Data stored successfully"";
    } else {
        echo ""Error: "" . $sql . ""<br>"" . mysqli_error($conn);
    }

    mysqli_close($conn);
}
?>"
"Generate a Java program that creates a random array of 10 integers ranging from 0 to 9.
","import java.util.Random;

class GenerateRandomArray{
 
    public static void main(String[] args)
    {
        int[] arr = new int[10];
        Random random = new Random();
        for (int i=0; i<arr.length; i++){
            arr[i] = random.nextInt(10);
        }
 
        // print the elements
        for (int i=0; i<arr.length; i++){
            System.out.print(arr[i]+ "" "");
        }
    }
}"
"Write an algorithm that finds the longest palindromic substring of a given input string.
""forgeeksskeegfor""","// Algorithm to find the longest palindromic substring

int longestPalindromicSubstr(char* str) 
{
	// Variables to store the start and the end of the palindromic substring
	int maxLen = 1;
	int start = 0;
	int len = strlen(str);
	// Table to store boolean value at the index
	// dp[i][j] stores whether the substring str[i..j] is palindrome or not
	int dp[len][len];
	
	// Initialize all entries to False
	memset(dp, 0, sizeof(dp));
	
	// All characters of length 1 are palindrome
	for (int i = 0; i < len; i++) 
		dp[i][i] = true;
	
	// Check for substring of length 2
	for (int i = 0; i < len-1; i++) 
	{
		if (str[i] == str[i+1]) 
		{
			dp[i][i+1] = true;
			start = i;
			maxLen = 2;
		}
	}
	
	// Check for lengths greater than 2 
	for (int k = 3; k <= len; k++) 
	{ 
		// looping until len-k+1, so that you can get ith character
		for (int i = 0; i < len-k+1; i++) 
		{ 
			int j = i + k - 1; 
			if (dp[i+1][j-1] && str[i] == str[j]) 
			{ 
				dp[i][j] = true; 

				if (k > maxLen) 
				{ 
					start = i; 
					maxLen = k; 
				} 
			} 
		} 
	} 
	
	return maxLen; 
}"
"Implement a sorting algorithm in Python to arrange the given array in descending order.
[10, 80, 40, 20, 60]","def descendingOrder(arr): 
    arr.sort(reverse = True) 
    return arr 
  
# Driver code 
arr = [10, 80, 40, 20, 60] 
output = descendingOrder(arr) 
print(output)"
"Convert this Python list of dictionaries to JSON.
list_of_dictionaries=[
  { 
         ""name"" : ""John"", 
         ""age"" : 30, 
         ""city"" : ""New York""
     }, 
     { 
         ""name"" : ""Mike"", 
         ""age"" : 25, 
         ""city"" : ""California""
     }
 ]","[ 
    { 
        ""name"" : ""John"", 
        ""age"" : 30, 
        ""city"" : ""New York""
    }, 
    { 
        ""name"" : ""Mike"", 
        ""age"" : 25, 
        ""city"" : ""California""
    } 
]"
"Create a class definition in python with one variable and one method
","class Example:
  def __init__(self, variable):
    self.variable = variable

  def method(self):
    return self.variable + 1"
"How many elements are in list1 after executing the following Python code?
list1 = [1, 2, 3]
list2 = [4, 5, 6]
list1.extend(list2)",6
"Using SQLite3, how can one create a table in an existing database?
","CREATE TABLE table_name (column_name data_type PRIMARY KEY, ...);"
"Write a function to detect if the given integer is even or odd.
number = 3","def is_even(number):
    if number % 2 == 0:
        return True
    else:
        return False"
"Rearrange the items in the array in ascending order.
[3, 6, 5, 1, 4, 2]","[1, 2, 3, 4, 5, 6]"
"Write an SQL query to find all the customers with first names starting with ""A"" from the customers table.
customers table","SELECT *
FROM customers 
WHERE first_name LIKE 'A%'"
"Generate an HTML page using the defined header and footer.
Header:
<head>
   <title>My Page</title>
</head>

Footer:
<div id=""footer"">
   <p>Copyright © 2020 MyPage</p>
</div>","<html>
   <head>
      <title>My Page</title>
   </head>
   <body>
      <div id=""content"">
         <h1>My Page</h1>
      </div>
      <div id=""footer"">
         <p>Copyright © 2020 MyPage</p>
      </div>
   </body>
</html>"
"Create a HTML page with a table containing five columns and four rows.
","<html>
<head>
   <title>Table with Columns and Rows</title>
</head>
<body>
   <table>
      <tr>
         <th>Column 1</th>
         <th>Column 2</th>
         <th>Column 3</th>
         <th>Column 4</th>
         <th>Column 5</th>
      </tr>
      <tr>
         <td>Cell 1</td>
         <td>Cell 2</td>
         <td>Cell 3</td>
         <td>Cell 4</td>
         <td>Cell 5</td>
      </tr>
      <tr>
         <td>Cell 6</td>
         <td>Cell 7</td>
         <td>Cell 8</td>
         <td>Cell 9</td>
         <td>Cell 10</td>
      </tr>
      <tr>
         <td>Cell 11</td>
         <td>Cell 12</td>
         <td>Cell 13</td>
         <td>Cell 14</td>
         <td>Cell 15</td>
      </tr>
   </table>
</body>
</html>"
"Edit the following code to include user input.
def hello_world():
    # Prints ""Hello, World!""
    print(""Hello, World!"")","def hello_world():
    # Prompt user for input
    user_input = input(""Please enter your name: "")

    # Prints ""Hello, {user_input}!""
    print(""Hello, {}!"".format(user_input))"
"Write a Java function to find out if a string contains any vowels.
","public static boolean containsVowels(String input) {
        for (int i = 0; i < input.length(); i++) {
            char ch = input.charAt(i);
            if (ch == 'a' || ch == 'e' || ch == 'i'
                    || ch == 'o' || ch == 'u') {
                return true;
            }
        }
        return false;
    }"
"Explain how you would use a for loop to iterate through an array.
","A for loop can be used to iterate through an array by looping through it for a predetermined number of times, with each loop accessing the next element in the array. 
For example, let's say we have an array of integers: int[] myArray = new int[]{1, 2, 3, 4, 5}.
We could loop through this array using a for loop like this:

for (int i = 0; i < myArray.length; i++) {
    int element = myArray[i];
    // do something with element
}

In this example, the loop will execute five times as the array is of length five. During each loop, the value of 'i' will increase by one, allowing each element in the array to be accessed in order."
"Edit this code to create a function which prints the Fibonacci series.
","def Fibonacci(n): 
    if n==0: 
        return 0
    elif n==1: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
for n in range(10):
    print(Fibonacci(n))"
"Rewrite the below JAVA program in Python
public static void main (String[] args) { 
  int count = 10; 
  while (count > 0) { 
    System.out.println(""Code:"" + count); 
    count--; 
  } 
}","count = 10
while count > 0:
    print(""Code:"", count)
    count -= 1"
"Generate a 5x5 array with all its elements equal to 1.
","arr = [[1,1,1,1,1],
       [1,1,1,1,1],
       [1,1,1,1,1],
       [1,1,1,1,1],
       [1,1,1,1,1]]"
"You need to generate a list of all the even numbers between two given numbers.
","def even_numbers(start, end):
 even_nums = []
 for num in range(start, end):
 if num % 2 ==0:
 even_nums.append(num)
 return even_nums"
"Generate five random numbers between 0 and 10 in Python.
","import random
random.sample(range(0, 10), 5)"
"Compose a SQL query to find the names of all professors in the department of Computer Science.
",SELECT name FROM professor WHERE department = 'Computer Science';
"Create a HTML page with given header and footer elements.
Header: <h1>Hi there!</h1>
Footer: <h5>Goodbye!</h5>","<html>
  <head>
    <title>Page Title</title>
  </head>
  <body>
    <h1>Hi there!</h1>

    <div>
      // Page content goes here
    </div>

    <h5>Goodbye!</h5>
  </body>
</html>"
"Convert the following csv data into a JSON object.
id,name,age
1,John,12
2,Jack,15","import json

csv_data = '''id,name,age
1,John,12
2,Jack,15'''

# Split the CSV data into individual lists.
csv_rows = [row.strip().split(',') for row in csv_data.split('\n')]
# Create a dictionary from the list of values.
data_objects = [dict(zip(csv_rows[0], row)) for row in csv_rows[1:]]
# Convert the dictionary to a JSON object.
json_data = json.dumps(data_objects)
print(json_data)"
"Edit this code so it prints the sum of the increasing odd numbers from 10 to 50
total = 0
for num in range(10, 50):
    if num % 2 == 0:
        total += num","total = 0
for num in range(10, 50, 2):
    total += num"
"What is polymorphism and how it is used in object-oriented programming?
","Polymorphism is the ability of an object to be interpreted and used differently in different contexts. In object-oriented programming, it allows operations to be performed on objects despite different underlying data types. For example, it allows functions to take multiple types of arguments and still be able to process them, without requiring different lines of code for each data type. Polymorphism also allows for code reuse through the concept of inheritance, where subclasses can inherit all the methods and properties of their parent class. As a result, objects can be written more efficiently and with less repetition."
"Make a function in Python which calculates the covariance between two given lists.
list1: [1, 2, 3, 4, 5]
list2: [3, 4, 2, 4, 5]","def cov(list1, list2): 
    mean1 = sum(list1)/len(list1) 
    mean2 = sum(list2)/len(list2) 
    total = 0
	for i in range(len(list1)): 
        total += (list1[i] - mean1)*(list2[i] - mean2) 
    return total/len(list1)"
"Rewrite the following piece of code in Python.
for (i = 0; i < 10; i++)
    if (i % 2 == 0)
        printf(""%d"", i);","for i in range(10):
    if i % 2 == 0:
        print(i)"
"Generate a code to convert a given number to its English word equivalent.
","# dictionary to convert numbers to words
number_words = {0 : 'zero', 1: 'one', 2 : 'two',
                3 : 'three', 4 : 'four', 5 : 'five', 
                6 : 'six', 7 : 'seven', 8 : 'eight', 
                9 : 'nine', 10 : 'ten'}

# convert number to string
def convert_to_words(n):
    if n in number_words:
        return number_words[n]
    return """"

# Driver code
print(convert_to_words(5))
# Output: five"
"Construct a SQL query to select all the records from the ""user_table"" table that were created in the last 3 days.
","SELECT * FROM `user_table` WHERE date_created > date_sub(curdate(), interval 3 day)"
"Given the following list, use list comprehension to create a new list with the string ""student_"" added to the beginning of each student's name.
students = ['John', 'Randy', 'Marie', 'Clare']","new_list = [""student_"" + name for name in students]"
"Write a line of code to input 10 numbers from the user.
","a = list(map(int, input(""Enter 10 numbers: "").split()))"
"Create a CSS class to override page text style.
",".my-style {
  font-weight: bold;
  font-size: 16px;
  font-family: Arial, sans-serif;
  color: #333;
  line-height: normal;
}"
"Create a JavaScript object called 'book' with the following properties - title, author, genre, and number of pages.
","let book = {
 title: ""The Great Gatsby"",
 author: ""F.Scott Fitzgerald"",
 genre: ""Novel"",
 pages: 180
};"
"Using JavaScript, create an interactive web page that displays a list of strings taken from the user's inputs.
","// JavaScript Code
let list = [];
const addToList = (str) => {
 list.push(str);
}

const createList = () => {
let html = ""<ul>\n"";
 for(let i = 0; i < list.length; i++) {
 html += `<li>${list[i]}</li>\n`;
 }
html += ""</ul>"";
 document.getElementById('list').innerHTML = html;
}"
"Insert a comment that explains what the following C++ code does.
sum = 0
for (i = 0; i < 10; i++):
  sum += arr[i]","// Set ""sum"" to 0 
// Iterate over the array ""arr"", from its 0th element to 9th element 
// and add each element of the array to the ""sum"" at each iteration"
"Write a code to print out a multiplication table of a number in Python.
","def print_multiplication_table(num): 
    for i in range(1,11):  
       print(num,'x',i,'=',num*i)

print_multiplication_table(5) 
# OUTPUT: 5 x 1 = 5
        5 x 2 = 10
        5 x 3 = 15
        5 x 4 = 20
        5 x 5 = 25
        5 x 6 = 30
        5 x 7 = 35
        5 x 8 = 40
        5 x 9 = 45
        5 x 10 = 50"
"Name three techniques used to debug a program.
",Three techniques used to debug a program are: 1) Printing debugging messages to track the state of the variables; 2) Stepping through code execution to find the source of the bug; and 3) Testing the code through a series of test cases to uncover any issues.
"Using the function you wrote in 4.
Write a Python program to convert a binary list to an integer
binary_list = [1, 0, 1, 0]","def binary_list_to_int(binary_list):
    return int(''.join(str(x) for x in binary_list), 2)"
"How can you make a dictionary key iterable in Python?
","A dictionary in Python can be made iterable using a for loop. To iterate over the keys of a dictionary, we can use the ``dict.keys()`` method which returns an iterable object of the keys in the dictionary. This iterable can then be used to iterate over the keys of the dictionary."
"Print all members of the list that are greater than 10.
theList = [1, 15, 20, 9, 12, 13]",15
"Write a SQL query to find the number of students living in zipcode 90001.
","SELECT COUNT(*) 
FROM students 
WHERE zipcode = 90001;"
"Edit the code to construct a bubble sort algorithm.
arr = [5, 2, 1, 7, 8]","def bubble_sort(arr):
    n = len(arr)

    # Traverse through all array elements
    for i in range(n):
        # Last i elements are already in place
        for j in range(0, n-i-1):
            # traverse the array from 0 to n-i-1
            # Swap if the element found is greater
            # than the next element
            if arr[j] > arr[j+1] :
                arr[j], arr[j+1] = arr[j+1], arr[j]"
"Create a Flask endpoint that displays a ""Hello World!"" message.
","@app.route(""/"", methods=['GET'])
def hello_world():
    return ""Hello World!"""
"Identify the most efficient way to render a list of 10 divs using React.
","render() { 
    return ( 
        <div> 
            {[...Array(10)].map((_, i) => <div key={i}>Div #{i+1}</div> )}
        </div> 
    );
};"
"Create a program that can output the current date and time in a user-friendly format.
","from datetime import datetime

def get_date_and_time():
    current_date_and_time = datetime.now()
    friendly_format = current_date_and_time.strftime('%c')
    return friendly_format

if __name__ == ""__main__"":
    print(get_date_and_time())"
"Suggest an efficient way to find the longest word in a string.
","The most efficient way to find the longest word in a string is to use the split() method to convert the string into a list of words, then use the max() method to find the longest word in the list. For example:

string = ""The quickest way to find the longest word""
longest_word = max(string.split(), key=len)"
"Swap the two variables without using a temporary variable
a = 3
b = 7","a = a + b
b = a - b
a = a - b"
"Construct a loop in JavaScript that prints out each item in an array.
let arr = [1,2,3,4,5]","for (let i = 0; i < arr.length; i++) {
  console.log(arr[i]);
}"
"Come up with some ideas to design a user interface for an online database
","Some ideas for designing a user interface for an online database include:
- Using a search bar for users to easily find the information they are looking for quickly. 
- Creating a filter search to allow users to narrow down relevant results as needed.
- Offering a progress bar to show the status of database operations. 
- Creating a database dashboard to give users an overview of data. 
- Implementing database notifications to alert users when tasks or operations are completed or if any errors occur."
"Create an algorithm with pseudocode to find maximum and minimum element of an array.
","Algorithm findMaxMin(arr)
  Input: arr - an array of integers
  Output: maxEle - the maximum element in the array, minEle - the minimum element in the array
Begin
  maxEle <- arr[0]
  minEle <- arr[0]
  for i = 0 to length(arr)-1 do
    if arr[i] > maxEle then
      maxEle <- arr[i]
    end if
    if arr[i] < minEle then
      minEle <- arr[i]
    end if
  end for
  return maxEle, minEle
End"
"Write a JavaScript code snippet to track the mouse movement.
","document.addEventListener(""mousemove"", function(e) {
   console.log(""mouse is at x:"" + e.clientX + "" y:"" + e.clientY);
});"
"Generate an HTML form to create a user profile.
N/A","<form action=""userprofile.php"" method=""post"">
    <label for=""username"">Username</label><br>
    <input type=""text"" id=""username"" name=""username"" required/><br>
    <label for=""email"">Email</label><br>
    <input type=""email"" id=""email"" name=""email"" required/><br>
    <label for=""password"">Password</label><br>
    <input type=""password"" id=""password"" name=""password"" required/><br>
    <input type=""submit"" value=""Create Profile"" />
</form>"
"Given a range of numbers, write a python program to find the sum of the elements within that range.
range: 1 to 10","def sum_range(start, end):
    res = 0
    for i in range(start, end+1):
        res += i
    return res

sum_range(1, 10)"
"You need to develop a code that takes two strings and returns a boolean if the substrings are anagrams.
Strings: ""computer"" and ""computer""","def isAnagram (str1, str2): 
    # Get length of both strings 
    n1 = len(str1) 
    n2 = len(str2) 
  
    # If length is not same, then strings are not anagrams 
    if n1 != n2: 
        return False
  
    # Sort both strings 
    str1 = sorted(str1) 
    str2 = sorted(str2) 
  
    # Compare sorted strings 
    for i in range(0, n1): 
        if str1[i] != str2[i]: 
            return False
  
    return True

print (isAnagram(""computer"", ""computer""))"
"Create a Java program that prints out the Fibonacci series within a given range
Range = (5, 15)","public class FibonacciRange {
	 
	public static void main(String args[]) {
		// Set the range
		int lowerLimit=5, upperLimit=15;
		
		// Print the fibonacci series
		for (int number = lowerLimit; number <= upperLimit; number++) {
			System.out.print(fibonacciSeries(number) +"" "");
		}
	}
 
	// Generates the fibonacci series
	public static int fibonacciSeries(int fibonacciNumber) {
		if (fibonacciNumber == 1 || fibonacciNumber == 2) {
			return 1;
		}
		return fibonacciSeries(fibonacciNumber - 1) + fibonacciSeries(fibonacciNumber - 2);
	}
}"
"Write a SQL query which returns the product name and the number of times it has been purchased
","SELECT product_name, COUNT(*)
FROM purchases
GROUP BY product_name;"
"Suggest a completion for the following JavaScript code to determine if a number is an odd number.
function isOddNumber(","function isOddNumber(num) {
    return num % 2 !== 0;
}"
"Perform a binary search on the following list of integers: [0, 1, 2, 3, 4, 5, 6, 7, 8].
","def binary_search(nums, target):
  low = 0
  high = len(nums) - 1

  while low <= high:
    mid = (low + high) // 2
    if target == nums[mid]:
      return mid
    elif target < nums[mid]:
      high = mid - 1
    else:
      low = mid + 1
  
  return -1"
"Generate a pseudorandom sequence of hexadecimal numbers with length 10.
","let hexValues = '0123456789abcdef';
let randomHexSeq = [];
for (let i = 0; i < 10; i++) {
    randomHexSeq.push(hexValues[Math.floor(Math.random() * hexValues.length)]);
}

console.log(randomHexSeq.join(''));"
"Develop a Swift program that returns the index of a given element in an array.
Given an array of integers and a target element.","func searchIndex(arr: [Int], target: Int) -> Int? {
      for index in 0..<arr.count {
          if arr[index] == target {
              return index
          }
      }
      return nil
}"
"Construct a loop that checks whether each item in a list is greater than 10
my_list = [5, 11, 8, 15]","for x in my_list:
    if x > 10:
        print(""{0} is greater than 10"".format(x))"
"Create a linux shell script for restarting network interfaces.
","#!/bin/bash

# Restart network interfaces
sudo ifconfig wlan0 down
sudo ifconfig wlan0 up
sudo ifconfig eth0 down
sudo ifconfig eth0 up"
"Parse the following XML data to get a list of country names
<data>
  <country name=""Ghana"">
    <rank>99</rank>
    <year>2012</year>
    <gdppc>2616.7</gdppc>
    <neighbor name=""Togo"" direction=""W""/>
  </country>
  <country name=""Iceland"">
    <rank>16</rank>
    <year>2015</year>
    <gdppc>38639.2</gdppc>
    <neighbor name=""Greenland"" direction=""N""/>
    <neighbor name=""Denmark"" direction=""E""/>
  </country>
</data>","import xml.etree.ElementTree as ET

tree = ET.parse('data.xml')
root = tree.getroot()

countries = []

for country in root:
    countries.append(country.attrib['name'])

print(countries)

# Output: ['Ghana', 'Iceland']"
"Write a SQL query for selecting all the people who were born after January 1st, 1960.
",SELECT * FROM People WHERE BirthDate > '1960-01-01';
"Merge two sorted linked lists and return it as a new list.
","def merge_sorted_lists(list1, list2):
    """""" Merges two sorted linked lists and returns it as a new list
    
    Args:
        list1 (list): The first sorted linked list 
        list2 (list): The second sorted linked list
        
    Returns:
        list: The merged sorted linked list
    """"""
    # Initialize the merged list
    merged_list = []
    
    # Initialize the pointers
    i = 0
    j = 0

    # Iterate over the two lists
    while i < len(list1) and j < len(list2):
        # Add the element with the smaller value to the merged list
        if list1[i] < list2[j]:
            merged_list.append(list1[i])
            i += 1
        else:
            merged_list.append(list2[j])
            j += 1
    
    # Add the remaining elements to the merged list
    while i < len(list1):
        merged_list.append(list1[i])
        i += 1
    
    while j < len(list2):
        merged_list.append(list2[j])
        j += 1
    
    return merged_list"
"Design a shell script for sorting the elements of a given array [2, 5, 1, 8, 4].
Array elements: [2, 5, 1, 8, 4]","#!/bin/bash

#array elements
arr=(2 5 1 8 4)

#Sorting the array in ascending order
for((i=0;i<4;i++))
do
    for((j=0;j<4-i;j++))
    do
        if [ ${arr[j]} -gt ${arr[$((j+1))]} ]
        then
           # swap
           temp=${arr[j]}
           arr[$j]=${arr[$((j+1))]}
           arr[$((j+1))]=$temp
        fi
    done
done
echo ${arr[*]}"
"Create a dictionary that has the keys and values of a given list.
my_list = [2, 4, 6, 8]","my_list = [2, 4, 6, 8]

# Create an empty dict 
my_dict = {}

# Add elements to the dict
for i in my_list:
    my_dict[i] = i**2

print(my_dict) # prints {2: 4, 4: 16, 6: 36, 8: 64}"
"Edit the following JavaScript code so that it rounds a number to the nearest integer.
function roundNumber(x) {
 return x + 0.5;
}","function roundNumber(x) {
 return Math.round(x);
}"
"Find all the elements in a Python list that correspond to a certain condition using list comprehension
list = [-3, -2, -1, 0, 1, 2, 3]",[x for x in list if x >= 0]
"Write a shell script to calculate the sum of two numbers given as command line argument.
","sum=$(echo ""$1 + $2"" | bc -l)
echo $sum"
"Write a function that returns True if a given number is prime and False if it is not.
","def is_prime(n):
    if n <= 1:
        return False
    for i in range(2,n):
        if n % i == 0:
            return False
    return True"
"You need to design a database for a school where multiple students can have a tutor of a subject. What is the best way to design the database?
","The best way to design the database is to create three tables: students, tutors and subjects. The students table would contain columns for each student's name, ID and contact details. The tutors table would contain the tutor's name, ID and contact details. The subjects table would contain the subject name, description and number of available tutors. The three tables would then be linked by a linking table, which would contain two columns - one for the student ID, one for the tutor ID - and an extra column to identify which subject the tutor-student pair is associated with."
"Create an algorithm to detect whether an array is sorted in a given order.
array = [1, 2, 4, 7, 10, 11]","def is_sorted(arr, order = ""asc""):
    #check if array is sorted in ascending or descending order
    if order == ""asc"":
        for i in range(0, len(arr)-1):
            if arr[i] > arr[i+1]:
                return False
    elif order == ""desc"":
        for i in range(0, len(arr)-1):
            if arr[i] < arr[i+1]:
                return False
    else:
        print(""Error: Invalid sort order!"")
    return True"
"Create a function in python that takes a string as an argument and prints out two copies of the string.
string = ""Hello World!""","def print_twice(string):
    print(string)
    print(string)
    
print_twice(string)"
"Create a HTML form with two text fields that accept a first and last name, respectively.
","<form>
  <label for=""firstName"">First Name</label>
  <input type=""text"" id=""firstName"" name=""firstName"">

  <label for=""lastName"">Last Name</label>
  <input type=""text"" id=""lastName"" name=""lastName"">

<input type=""submit"" value=""Submit"">
</form>"
"Create a for loop for iterating over list y and adding its elements to a new list
y = [1,2,3,4,5]","new_list = []
for el in y:
    new_list.append(el)"
"Generate C code that prints the result of multiplying two numbers.
int num1 = 10
int num2 = 5","int num1 = 10;
int num2 = 5;
int result = num1 * num2;

printf(""Result: %d\n"", result);"
"How would you display the below list in descending order?
[2, 5, 8, 9, 1]","[9, 8, 5, 2, 1]"
"Write a PowerShell script to list all the installed applications on a Windows machine
","Get-ItemPropertyHKLM:\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\* | select-Object DisplayName, Publisher"
"Rewrite this code using list comprehension
my_list = []
for i in range(5):
   my_list.append(i)",my_list = [i for i in range(5)]
"Generate a class in Java that validates if a given number is a prime or not.
Number: 13","public class PrimeNumberValidator {

    public static boolean validate(int number) {
        if (number < 2) {
            return false;
        }
        for (int i = 2; i < Math.sqrt(number); i++) {
            if (number % i == 0) {
                return false;
            }
        }
        return true;
    }
}"
"Write a function that takes a list of strings and returns the longest common prefix of the list of strings.
","def longest_common_prefix(strings):
    if len(strings) == 0:
        return """"
    smallest_string = min(strings, key=len)
    end_word_index = len(smallest_string)

    for i in range(end_word_index):
        for word in strings:
            if word[i] != smallest_string[i]:
                return smallest_string[:i] 
    return smallest_string"
"Edit the following program to improve its execution speed
#include <iostream> 
  
int n = 100; 
  
void foo(int n) 
{ 
    for (int i = 0; i < n; i++) 
        std::cout << i << ""\n""; 
} 
  
int main() 
{ 
    foo(n); 
    return 0; 
}","#include <iostream> 
  
int n = 100; 
 
void foo(int n) 
{ 
    int chunk_size = 5;
    for (int i = 0; i < n; i+=chunk_size) {
        for (int j = i; j < i + chunk_size; j++) 
            std::cout << j << ""\n""; 
    } 
} 
  
int main() 
{ 
    foo(n); 
    return 0; 
}"
"Create an algorithm in JavaScript that calculates the average of a series of numbers.
Series of numbers: [2, 3, 7, 8]","function calculateAverage(arr) {
    let sum = 0;
    arr.forEach(num => sum += num);
    return sum/arr.length;
}

console.log(calculateAverage([2, 3, 7, 8]))"
"Create a Python function that generates a random number between two specified numbers.
lower_bound = 10
upper_bound = 20","def random_num(lower_bound, upper_bound):
	import random
	return random.randint(lower_bound, upper_bound)

lower_bound = 10
upper_bound = 20

print(random_num(lower_bound, upper_bound))

# Output
# [random number between 10 and 20]"
"Write a Python function that prints the first n even numbers.
","def print_even_numbers(n):
    for i in range(2, n*2, 2): 
        print(i)"
"Write a Python function that prints out a staircase pattern.
","def staircase(n): 
    for i in range(1, n + 1): 
        for j in range(1, n + 1): 
            if (j <= (n - i)):   
                print(end=""\t"") 
            else: 
                print(""#\t"", end="""") 
        print()"
"How do you insert a given element in a balanced AVL tree?
","The process of insertion in a balanced AVL tree is similar to the process in a binary search tree, with two additional steps. First, the tree is checked to see if it needs to be rebalanced. If it does, the tree is rebalanced according to the AVL rules. Second, any newly inserted node is checked against its siblings to see if it is in balance or not. If it's not, the tree is rotated to balance it. In order to insert an element in a balanced AVL tree, the following steps must be taken:

1. Start by searching the tree to see if the node to be inserted already exists in the tree.
2. If the node does not exist, insert it in the same fashion as in a binary search tree.
3. Perform post-insertion balancing. This involves checking the newly inserted node's balance factors and rotation if either one is unequal.
4. Update the current node's balance factor as well as the ancestors' balance factors until the root is reached.
5. Once all nodes that need to be balanced have been updated, the insertion is complete."
"Write a code for creating multiple variables with a single statement in Python.
","x, y, z = 1, 2, 3"
"Write a function to find the number of occurrences of an element in a list.
arr = [10, 20, 10, 40, 40, 40, 50]","def count_occurrences(arr, element):
    count = 0
    for e in arr:
        if e == element:
            count += 1
    return count

print(count_occurrences(arr, 40)) # Outputs: 3"
"Design a program to compute the median of 3 integers.
","def median(a,b,c):
    if a >= b:
        if c >= a:
            return a
        elif b >= c:
            return b
        else:
            return c
    else:
        if c >= b:
            return b
        elif a >= c:
            return a
        else:
            return c"
"What should this function take as input and return?
def find_longest_word(words):","def find_longest_word(words):
    '''This function takes a list of words as input and returns a string containing the longest word'''
    longest_word = ''
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    return longest_word"
"Given a string s and a list of words words, write a program to find all occurrences of words in the string s.
s = 'The quick brown fox jumps over the lazy dog.'
words = ['quick', 'fox', 'dog']","def find_words(s, words):
    occurrence_indices = []
    for word in words:
        start = 0
        while True:
            index = s.find(word, start)
            if index == -1:
                break
            else:
                occurrence_indices.append(index)
                start = index + 1
    return occurrence_indices"
"Create a class named Person with two properties: name and age.
","class Person {
    private: 
        string name;
        int age;

    public:
        Person(string name, int age) {
            this->name = name;
            this->age = age;
        }
        void setName(string name) {
            this->name = name;
        }
        void setAge(int age) {
            this->age = age;
        }
        string getName() {
            return name;
        }
        int getAge() {
            return age;
        }
};"
"Using an OOP approach, create an Animal class with properties of name and a virtual property age that gets calculated based on the creation date.
","class Animal {
  constructor(name) {
    this.name = name;
    this.age = Date.now() - this.creationDate;
  }
}"
"Describe the process of web scraping.
","Web scraping is the process of extracting data from websites using automated software. It involves sending a request to the web server, processing the HTML, locating the relevant data, and saving it. The process usually involves using web crawlers and parsing data using regular expressions or custom logic."
"Generate a C++ program that sorts the elements in an array using the quick sort algorithm.
","#include<iostream>
using namespace std;
 
int partition (int arr[], int low, int high)
{
    int pivot = arr[high];    // pivot
    int i = (low - 1);  // Index of smaller element
 
    for (int j = low; j <= high- 1; j++)
    {
        if (arr[j] <= pivot)
        {
            i++;    // increment index of smaller element
            swap(arr[i], arr[j]);
        }
    }
    swap(arr[i + 1], arr[high]);
    return (i + 1);
}
 
 
void quickSort(int arr[], int low, int high)
{
    if (low < high)
    {
        int pi = partition(arr, low, high);
 
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}
 
void printArray(int arr[], int n)
{
    for (int i=0; i < n; i++)
        cout << arr[i] << "" "";
}"
"Show an example of using the Python module, os.
","import os

directory = os.getcwd() 
print(""The current working directory is"", directory)

files = os.listdir(directory) 
print(""The files in the current directory are"", files)

for file in files:
    if file.endswith("".py""):
        print(""The Python script"", file, ""is in the current directory"")"
"Generate a random password that is at least 8 characters and contains numbers, uppercase letters, and symbols.
","""""""
Generate a random password that is at least 8 characters and contains numbers, uppercase letters, and symbols.
""""""

import random

def generate_password():
    charset = ""01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()?""
    password = """"
    for _ in range(8):
        password += random.choice(charset)
    return password
    
if __name__ == '__main__':
    print(generate_password())"
"Convert the following while loop into a for loop.
i = 0
while i < 10:
  print(i)
  i += 1","for i in range(10):
  print(i)"
"What is the syntax for creating an array in JavaScript?
","let myArray = [element1, element2, ...elementN];"
"Generate a Fibonacci number sequence with n numbers
10","[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"
"Create a subclass 'Manager' of Employee and add the field 'experience'.
","class Manager(Employee):
    def __init__(self, name, address, salary, experience):
        super().__init__(name, address, salary)
        self.experience = experience"
"Print out the first 10 elements in the sequence interpreted by the rule F(n) = F(n-1) + F(n-2).
","def fibonacci(n): 
    
    # Creating an array to store the sequence 
    f = [0] * (n + 2) 
      
    # Initial values   
    f[1] = 1
      
    # Calculating the terms 
    for i in range(2, n + 2): 
        f[i] = f[i - 1] + f[i - 2] 
    return f[1:n+1]
  
n = 10
print(fibonacci(n))"
"Derive the Hamming distance between two strings using the edit distance algorithm.
s1 = 'saturday', s2 = 'sunday'","The Hamming distance between the two strings 'saturday' and 'sunday' is 3. The edit distance algorithm is used to calculate the minimum number of substitution, deletion, and insertion operations required to make two strings identical. In this example, 3 substitution operations are required, making the Hamming distance 3."
"Use dictionaries in Python to merge the data from two given dictionaries.
dictA = {
  'keyA': 1,
  'keyB': 2
}
dictB = {
  'keyC': 3,
  'keyD': 4
}","dictC = {**dictA, **dictB}"
"Calculate the square root of a number without using any built-in function.
num = 25","def calculate_sqrt(num):
   # Babylonian method
   x = num
   y = 1
 
   while x > y:
       x = (x + y) / 2
       y = num / x
 
   return x

calculate_sqrt(num)"
"Create a query in SQL that will display the first name, last name and department of all employees in the table.
Employee Table:
|first_name | last_name | department |
--------------------------------------
| John      | Doe       | Marketing  |","SELECT first_name, last_name, department
FROM Employee;"
"Rewrite the given code so that it prints the value of `a` 5 times.
a = 10

print (a)","a = 10

for i in range(5):
    print (a)"
"Find the number of negative numbers in a given list.
List: [-2, -7, -11, 1, 4, 8, 10]","function countNegatives(list) {
    let count = 0;
    for (let i=0; i<list.length; i++) {
        if (list[i] < 0) {
            count++;
        }
    }
    return count;
}

countNegatives([-2, -7, -11, 1, 4, 8, 10]); // returns 3"
"Create a Mastermind game in any language of your choice.
","#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>
 
using namespace std;
 
int main() {
 
srand(time(0));
 
//define random numbers to be guessed
int max_limit = 6;
vector<int> ans;
for (int i = 0; i < 4; i++) {
 ans.push_back((rand() % max_limit) + 1);
}
 
int attempts = 0;
while (true) {
 //Take input from user
 int num;
 int i = 0;
 cout << ""Guess a 4 digit number: "";
 while (i < 4) {
  cin >> num;
  ans[i] = num;
  i++;
 }
 
 //Check input against random answer
 int correctplace = 0;
 int wrongplace = 0;
 for (i = 0; i < 4; i++) {
  int j = 0;
  while (j < 4) {
   if (ans[i] == ans[j] && i == j)
    correctplace++;
   else if (ans[i] == ans[j])
    wrongplace++;
   j++;
  }
 }
 
 attempts++;
 
 if (correctplace == 4) {
  cout << ""You win in "" << attempts << "" attempts."";
  break;
 }
 else
  cout << ""Wrong place: "" << wrongplace << ""    Correct place: "" << correctplace << endl;
}
return 0;
}"
"Estimate the storage space of the given data type.
Integer",4 bytes
"Using the given code, construct a json request payload.
data = {
    ""name"": ""John Doe"",
    ""age"": 30
}","import json

request_payload = json.dumps(data)"
"Grant access to content by creating a function that takes in an age and returns a boolean.
Age: 20","def check_age(age):
  if age < 18:
    return False
  else:
    return True"
"Write a MySQL query to display the name, job and salary of all employees.
","SELECT name, job, salary 
FROM employees;"
"Write a SQL statement to select the top 10 highest revenue products.
Table: products
Columns: product_id, product_name, revenue","SELECT product_id, product_name, revenue 
FROM products 
ORDER BY revenue DESC 
LIMIT 10;"
"Make a code to determine whether a given number is prime or not.
","def is_prime(x):
    for i in range(2,int(x**0.5)+1):
        if x % i == 0:
            return False
    return True"
"Describe the basic structure of an XML document
","An XML document has a basic structure of a root element, which may contain other elements. Elements in an XML document are defined by start tags and end tags and can have attributes, text and other kinds of content. In addition, there are rules regarding the order of nested elements, the type of elements and their content, as well as the use of whitespace. XML documents are self-describing because all their elements are labeled."
"Convert an array of 12 integers which are between 0 to 255 into a string.
[105, 152, 85, 248, 0, 248, 88, 88, 105, 133, 233, 240]","String.fromCharCode(105, 152, 85, 248, 0, 248, 88, 88, 105, 133, 233, 240);"
"Name three popular programming languages.
","Java, Python and JavaScript."
"Develop an HTML/CSS layout with 2 columns and a 2-row header.
","<div class=""container"">
  <div class=""header"">
    <div class=""row1"">Row1</div>
    <div class=""row2"">Row2</div>
  </div>

  <div class=""main"">
    <div class=""column1"">Column1</div>
    <div class=""column2"">Column2</div>
  </div>
</div>"
"Create a code to check if a number is an Armstrong number or not
","def isArmstrongNumber(num):  
    # initialize
    sum_times_powers = 0
    temp = num  
  
    while (temp != 0):  
        # find remainder and get it
        remainder = temp % 10 
        sum_times_powers += remainder ** 3 
        temp //= 10
  
    if (sum_times_powers == num):  
        return True
    else: 
        return False"
"Write a SQL query to find the average age of people living in the UK.
","SELECT AVG(TIMESTAMPDIFF(YEAR, date_of_birth, CURRENT_DATE)) as average_age FROM people WHERE country = 'UK';"
"Write a function in Python to return the first n digits of the Fibonacci sequence.
n = 5","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 

fibonacci(n)"
"Use the OpenGL API to create a vertex buffer object (VBO).
","GLuint vbo;
glGenBuffers(1, &vbo);
glBindBuffer(GL_ARRAY_BUFFER, vbo);"
"How can you create a copy of a list?
","You can create a copy of a list by using the ""list"" method. For example, to create a copy of a list called ""my_list"", you can simply write ""my_list_copy = list(my_list)""."
"Edit the following HTML to create a 2-column form layout with labels.
<form>
  <input type=""text"" name=""name"" placeholder=""Name..."" />
  <input type=""email"" name=""email"" placeholder=""Email..."" />
  <textarea name=""message"" placeholder=""Message..."" rows=""4"" cols=""50""></textarea>
  <input type=""submit"" value=""Submit"" />
</form>","<form>
  <div style=""display: flex;"">
      <div style=""flex: 1;"">
        <label>Name:</label>
        <input type=""text"" name=""name"" placeholder=""Name..."" />
      </div>

      <div style=""flex: 1;"">
        <label>Email:</label>
        <input type=""email"" name=""email"" placeholder=""Email..."" /> 
      </div>
  </div>

  <div style=""display: flex;"">
      <div style=""flex: 1;"">
        <label>Message:</label>
        <textarea name=""message"" placeholder=""Message..."" rows=""4"" cols=""50""></textarea>
      </div>
  </div>

  <input type=""submit"" value=""Submit"" />
</form>"
"Create a regular expression to match a valid phone number (ex. 123-456-7890).
",\d{3}-\d{3}-\d{4}
"Create a function in R to get the last seven characters of a string.
","substr_last7 <- function(string) {
  return (substr(string, nchar(string)-6, nchar(string)))
}"
"Write a function that returns 'true' if the number is an even number, and 'false' otherwise.
","def is_even(num): 
    if(num % 2 == 0): 
        return True
    else: 
        return False"
"Write an HTML code snippet to create an email link for ""support@example.com""
","<a href=""mailto:support@example.com"">support@example.com</a>"
"Given a dataframe, remove any rows containing missing values.
DataFrame:
col1    col2    col3
1       a       3
2       b       4
3       NaN     5
4       c       NaN","DataFrame:
col1    col2    col3
1       a       3
2       b       4"
"Write a code to print the power of 2 up to the given limit.
8","def power_of_two(n):
    for i in range(0,n):
        print(2**i,end="" "")

if __name__ == '__main__':
    power_of_two(8)"
"Given two lists, create a list that contains the difference.
list1 = [1, 2, 3, 4, 5]
list2 = [3, 4, 5, 6]","difference_list = [1, 2, 6]"
"Generate a function ""capitalize"" in JavaScript to capitalize the first letter of every word
","function capitalize(str) {
  return str.replace(/\b\w/g, l => l.toUpperCase());
}"
"Parse the JSON data stored in a variable 'data' and print out the value of the key 'name'.
data = {
 ""name"": ""John"", 
 ""age"": 30,
 ""status"": ""single""
}","import json

data = {
 ""name"": ""John"", 
 ""age"": 30,
 ""status"": ""single""
}

data =json.loads(data)
print(data['name'])"
"Classify the given animals into two categories: mammal or reptile
[dog, snake, turtle, elephant]","Mammal: dog, elephant 
Reptile: snake, turtle"
"Transform the following JSON object into a Python dictionary.
{ ""name"": ""John Doe"", ""age"": 25, ""address"": { ""street"": ""123 Main Street"", ""city"": ""Los Angeles"", ""state"": ""CA"", ""zip"": 90001}}","import json

def json_to_dict(json_str):
   
    return json.loads(json_str)

if __name__ == ""__main__"":
    json_str = """"""
    {
        ""name"": ""John Doe"",
        ""age"": 25,
        ""address"": {
            ""street"": ""123 Main Street"",
            ""city"": ""Los Angeles"",
            ""state"": ""CA"",
            ""zip"": 90001
        }
    }
    """"""
    
    print(json_to_dict(json_str))"
"Given a sentence, write the code to extract the third word from the sentence.
sentence = ""I am a coder""","sentence = ""I am a coder""

words = sentence.split(' ')
third_word = words[2]
print(third_word)
#output: 'a'"
"Create an SQL query to calculate the average age of people living in a given city.
Table name: People
Columns: Name, Age, City","SELECT AVG(Age) 
FROM People 
WHERE City = {city}"
"Generate five lines of code that will calculate the area of the following regular triangle.
base = 5
height = 4","base_square = base * base
height_square = height * height
base_times_height = base * height
area_numerator = base_square + height_square + base_times_height
area_denominator = 2
area = area_numerator / area_denominator"
"Generate a list in Python that contains the numbers from 0 to 50 that are divisible by 7.
","numbers = []
for i in range(51):
  if i % 7 == 0:
    numbers.append(i)
print(numbers)
# output: [0, 7, 14, 21, 28, 35, 42, 49]"
"Write an SQL query to retrieve the names of all the people in the Users table who are over the age of 25.
","SELECT Name
FROM Users
WHERE age > 25"
"Write a Python function to calculate the factorial of a number (a non-negative integer).
","def factorial(num):
    """"""
    Calculates factorial of a given number.
    """"""
    # Base case
    if num == 0:
        return 1
    # Recursion
    else:
        return num * factorial(num-1)"
"Generate a code that creates a dictionary from two different lists with equal length.
list1 = ['a', 'b', 'c']
list2 = [1, 2, 3]","def create_dictionary(list1, list2):
    if len(list1) != len(list2):
        return ""lists have different lengths""
    else:
        my_dict = dict(zip(list1, list2))
        return my_dict

list1 = ['a', 'b', 'c']
list2 = [1, 2, 3]
print(create_dictionary(list1, list2)) #output: {'a': 1, 'b': 2, 'c': 3}"
"Write an SQL query to find the second highest salary of an employee.
","SELECT MAX(Salary) 
FROM Employee 
WHERE Salary NOT IN (SELECT MAX(Salary) FROM Employee);"
"Compose an R expression to determine the median of a vector
",median(x)
"Construct an array of size 10 to store integers in Java.
",int[] array = new int[10];
"Write a Python class for a Rectangle object with two instance attributes, length and width.
","class Rectangle:
    def __init__(self, length, width):
        self.length = length 
        self.width = width"
"Read the code and determine if it will cause a memory leak.
int* numbers = new int[10];
delete[] numbers",false
"Create a program to find the largest common factor in two numbers.
24 and 48","def hcf(x, y): 
  
    if x > y: 
        smaller = y 
    else: 
        smaller = x 
    
    for i in range(1, smaller+1): 
        if((x % i == 0) and (y % i == 0)): 
            hcf = i 
            
    return hcf 

x = 24
y = 48

print (""The H.C.F. of 24 and 48 is"", hcf(x, y))"
"Form a regex expression which determines if a binary number is valid.
","import re

binary_regex = r'^[01]+$'"
"Parse the following JSON string and extract all the keys into a list.
jsonString = '{""name"": ""John"", ""age"": 20, ""location"": ""New York""}'","import json

jsonString = '{""name"": ""John"", ""age"": 20, ""location"": ""New York""}'

# Use json.loads to parse the string
data = json.loads(jsonString)

# initializing a list
list = []

# extract the keys 
for key in data:
    list.append(key)
    
print(list)

# Output: ['name', 'age', 'location']"
"Create a MongoDB query to get all the documents from the collection where the state is 'CA'.
","db.collection.find( { state: ""CA"" } )"
"Write a function that calculates the average of all the numbers in a given array.
arr = [2, 6, 21, 14, 8]","public double calculateAverage(int[] arr) {
    double sum = 0;
    for (int i : arr) {
        sum += i;
    }
    return sum/arr.length;
}"
"Code a solution to remove any element from given list if it appears more than 3 times.
[1,2,3,1,1,1,2]","def remove_excess_lst(lst): 
    # Count the frequency of each element in the list 
    cnt = Counter(lst)

    # Return the list with elements appearing more than 3 times removed 
    return list(filter(lambda x: cnt[x] <= 3, lst))"
"Generate HTML code to display an interactive button.
","<button onclick=""alert('Button was clicked!');"">Click Me!</button>"
"Using SQL, write a query to identify the student ID and the name of the student who scored the highest marks in a given subject.
","SELECT students.id AS student_id, students.name AS student_name 
FROM students
INNER JOIN marks
ON students.id = marks.student_id
WHERE marks.subject = ‘Subject1’
ORDER BY marks.mark DESC
LIMIT 1;"
"Code a function that prints out the characters of a string one by one.
str = ""Hello World!""","function printCharByChar(str) {
    for (let i=0; i<str.length; i++) { 
        console.log(str.charAt(i)); 
    } 
} 
printCharByChar(str);"
"You are presented with a string which contains a code snippet. Extract the variable types from this string.
let myVariable1 = 5; 
let myVariable2 = true; 
let myVariable3 = ""Hello"";","let myVariable1: number, myVariable2: boolean, myVariable3: string"
"Write JavaScript code to output a square pattern of 5 stars.
","for (let i = 0; i < 5; i++) { 
  let line = ''; 
  
  for (let j = 0; j < 5; j++) { 
    line += '*'; 
  } 
  
  console.log(line); 
}"
"Write a function to find the longest substring without repetition.
str = ""pwwkew""","def longest_substring(str):
    start = 0
    max_length = 0
    used_char = {}

    for i, char in enumerate(str):
        if char in used_char and start <= used_char[char]:
            start = used_char[char] + 1
        else:
            max_length = max(max_length, i - start + 1)

        used_char[char] = i

    return max_length"
"Initialize a new array to 0 of size 10.
",arr = [0] * 10
"Show the memory size of a list using Java.
List<Integer> list = new ArrayList<Integer>();
list.add(3);
list.add(4);
list.add(5);","// Show the memory size of the list
int memorySize = list.size() * Integer.SIZE / 8;
System.out.println(memorySize);"
"Write a Python function that takes in one argument and prints out the Fibonacci number for that argument.
","def Fibonacci(x): 
    if x == 0: 
        return 0
    elif x == 1: 
        return 1
    else: 
        return Fibonacci(x-1)+Fibonacci(x-2) 

if __name__ == '__main__':
    print(Fibonacci(5))  # Output: 5"
"Input a two-dimensional array and calculate the sum of each row.
arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def row_sum(arr): 
    row_sum = [] 
    for row in arr:
        sum = 0 
        for ele in row: 
            sum += ele 
        row_sum.append(sum) 
    return row_sum"
"Describe the purpose of an iterator class in Java.
",An iterator class in Java is used to traverse through a collection to access its elements. It allows for the convenient looping and retrieval of elements from the collection in an orderly fashion.
"Edit the following code to make the function return the value of n mod m.
int modulo(int n, int m)
{
    return n / m;
}","int modulo(int n, int m)
{
    return n % m;
}"
"Convert the following code from Swift to Java.
let age = 25",int age = 25;
"In JavaScript, write a function to calculate the nth term in the Fibonacci series.
","function fibonacci(n){
 if (n <= 1) 
  return n;
 return fibonacci(n - 1) + fibonacci(n - 2);
}"
"Create a KMP algorithm in Python to find a pattern in a given text.
Text: abcabdababd
Pattern:abd","def KMPSearch(pat, txt): 
    M = len(pat) 
    N = len(txt) 
  
    # create lps[] that will hold the longest prefix suffix  
    # values for pattern 
    lps = [0]*M 
    j = 0 # index for pat[] 
  
    # Preprocess the pattern (calculate lps[] array) 
    computeLPSArray(pat, M, lps) 
  
    i = 0 # index for txt[] 
    while i < N: 
        if pat[j] == txt[i]: 
            i += 1
            j += 1
  
        if j == M: 
            print(""Found pattern at index "" + str(i-j)) 
            j = lps[j-1] 
  
        # mismatch after j matches 
        elif i < N and pat[j] != txt[i]: 
            # Do not match lps[0..lps[j-1]] characters, 
            # they will match anyway 
            if j != 0: 
                j = lps[j-1] 
            else: 
                i += 1
        
def computeLPSArray(pat, M, lps): 
    len = 0 # length of the previous longest prefix suffix 
  
    lps[0] # lps[0] is always 0 
    i = 1
  
    # the loop calculates lps[i] for i = 1 to M-1 
    while i < M: 
        if pat[i]== pat[len]: 
            len += 1
            lps[i] = len
            i += 1
        else: 
            # This is tricky. Consider the example. 
            # AAACAAAA and i = 7. The idea is similar  
            # to search step. 
            if len != 0: 
                len = lps[len-1] 
  
                # Also, note that we do not increment i here 
            else: 
                lps[i] = 0
                i += 1"
"Write a class in Java that contains two method to add and subtract two numbers.
","public class Calculator
{
    public int add(int a, int b)
    {
        return a + b;
    }
 
    public int subtract(int a, int b)
    {
        return a - b;
    }
}"
"Create a function to generate Pythagorean Triples up to a given limit.
Limit: 20","# Create a function to generate pythagorean triples
def generator(limit):
	# Create an empty list to store the result
	result = []
    # Iterate over limit
	for n in range(1, limit + 1):
		for m in range(n + 1, limit +1):
			a = m*m - n*n
			b = 2*m*n
			c = m*m + n*n
			if c > limit:
				break
			if a > b:
				result.append([a, b, c])
			if a < b:
				result.append([b, a, c])
	return result

# Driver code
limit = 20
pythagorean_triples = generator(limit)
print(pythagorean_triples)"
"Write a code to check if two rectangles overlap with each other.
rect1 = (0,0,10,10)
rect2 = (8,8,12,12)","def check_overlap(rect1, rect2):
    x1, y1, w1, h1 = rect1
    x2, y2, w2, h2 = rect2
    
    x_overlap = max(0, min(x1 + w1, x2 + w2) - max(x1, x2))
    y_overlap = max(0, min(y1 + h1, y2 + h2) - max(y1, y2))
    overlap_area = x_overlap * y_overlap
    
    return (overlap_area > 0)"
"Create a function which takes two strings as parameters and return the concatenating of the two strings.
string_1 = ""hello""
string_2 = ""world""","def concatenate_strings(s1, s2):
    """"""
    This function takes two strings as parameters and returns the concatenation of the two strings.
    """"""
    return s1 + s2

print(concatenate_strings(string_1, string_2)) # prints ""helloworld"""
"Concatenate the elements of the list into a string.
list_of_strings = ['I', 'am', 'a', 'string']","list_of_strings = ['I', 'am', 'a', 'string']

concat = ' '.join(list_of_strings)
print(concat)"
"Extract the strings that match the following regex pattern from a text block
text block = “hotel #9888, school #9876, airport #987”
regex pattern = #[0-9]{4}","['#9888', '#9876', '#987']"
"To an integer array, apply a modulo operation.
arr = [3, 4, 5, 6]
m = 2","[1, 0, 1, 0]"
"Write a HTML page to display a bar chart representing the total sales of a company in different months.
Months: Jan, Feb, Mar, Apr, May 
Total sales in each month: 2500, 4000, 4500, 6000, 5500","<html>
<head>
    <title>Bar Chart Representing Total Sales</title>
    <script src=""https://cdn.jsdelivr.net/npm/chart.js@2.8.0""></script>
    <style>
    canvas{
        -moz-user-select: none;
        -webkit-user-select: none;
        -ms-user-select: none;
    }
    </style>
</head>
<body>
<div style=""width:75%;"">
    <canvas id=""myBarChart""></canvas>
</div>
<script>
    var ctx = document.getElementById('myBarChart').getContext('2d');
    var myBarChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May""],
            datasets: [{
                label: ""Total sales"",
                data: [2500, 4000, 4500, 6000, 5500],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)'
                ],
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>
</body>
</html>"
"Create a Kendo-UI application to display an interactive grid with the following options: sorting, pagination, and search filter.
<no-input>","<div id=""grid""></div>
<script>
$(""#grid"").kendoGrid({
    dataSource: {
        sort: {
            field: ""firstName"",
            dir: ""asc""
        },
        pageSize: 10,
        serverPaging: true,
        serverFiltering: true
    },
    columns: [
        { 
            field: ""firstName"", 
            title: ""First Name"" 
        },
        { 
            field: ""lastName"", 
            title: ""Last Name"" 
        },
        { 
            field: ""age"", 
            title: ""Age"" 
        }
    ],
    sortable: true,
    pageable: {
        refresh: true,
        pageSizes: true
    },
    filterable: {
        mode: ""row""
    },
    height: 550
});
</script>"
"Create a PHP function that takes two strings and returns the first string repeated the number of times specified by the length of the second string.
String x = ""Hi"";
String y = ""World!"";","<?php
function repeatString($x, $y) {
    $result = """";
    for ($i = 0; $i < strlen($y); $i++) {
        $result .= $x;
    }
    return $result;
}
echo repeatString(""Hi "", ""World!"");
?>"
"Implement a stack data structure using linked lists.
","class Node:
	def __init__(self, data):
		self.data = data
		self.next = None

class Stack:
	def __init__(self):
		self.head = None
		self.num_elements = 0

	def push(self, element):
		new_node = Node(element)
		if self.head == None:
			self.head = new_node
		else:
			new_node.next = self.head
			self.head = new_node
		self.num_elements += 1
		
	def pop(self):
		if self.is_empty():
			return None
		temp = self.head
		self.head = self.head.next
		self.num_elements -= 1
		return temp.data

	def is_empty(self):
		if self.num_elements == 0:
			return True
		return False

	def top(self):
		if self.head:
			return self.head.data
		return None"
"Print the duplicated items in an array of integers.
array: [1, 2, 3, 2, 5, 1]","""""""
Print the duplicated items in an array of integers
""""""

public class DuplicateItems 
{
    public static void main(String[] args) 
    {
        int [] array = {1, 2, 3, 2, 5, 1};
        List<Integer> duplicates = new ArrayList<Integer>();
        
        for(int i = 0; i < array.length-1; i++){
            for(int j = i+1; j < array.length; j++){
                if(array[i] == array[j] && !duplicates.contains(array[i])) {
                    duplicates.add(array[i]);
                }
            }
        }
        System.out.println(""Duplicate items: "" + duplicates);
    }
}"
"Using the data provided below, create an SQL query to find the first name, last name and age of all employees over the age of 40.
Table: employees
Columns: first_name, last_name, age","SELECT first_name, last_name, age
FROM employees
WHERE age > 40"
"Modify the code to convert the string ""12345678"" to an integer.
let str = ""12345678"";","let num = parseInt(str);
console.log(num);"
"Generate an XML format to store the contact information of a customer
Name: John Smith
Phone: 123456789
Email: john@example.com","<contact>
 <name>John Smith</name>
 <phone>123456789</phone>
 <email>john@example.com</email>
</contact>"
"Write a code to generate a random password consisting of 8 characters with atleast one lowercase letter, one uppercase letter and one number.
","import string
import random 

def generate_password():
    password_characters = string.ascii_letters + string.digits
    password = ''.join(random.choice(password_characters) for i in range(8))
    if not any(char.islower() for char in password):
        password = password[:7] + random.choice(string.ascii_lowercase)
    if not any(char.isupper() for char in password):
        password = password[:7] + random.choice(string.ascii_uppercase)
    if not any(char.isdigit() for char in password):
        password = password[:7] + random.choice(string.digits)
    return password"
"Create a class in Java to build a singly linked list.
","public class SinglyLinkedList { 
     
    Node head; // head of list 
     
    // Linked list Node. 
    // This inner class is made static 
    // so that main() can access it 
    static class Node { 
        int data; 
        Node next; 
        Node(int d) 
        { 
            data = d; 
            next = null; 
        } // Constructor 
    } 
     public void printList() 
    { 
        Node n = head; 
        while (n != null) { 
            System.out.print(n.data + "" ""); 
            n = n.next; 
        } 
    } 
 
    public void push(int new_data) 
    { 
        
        Node new_node = new Node(new_data); 
  
       
        new_node.next = head; 
 
        head = new_node; 
    } 
}"
"Use the reduce() method to sum the values of an array of numbers in JavaScript.
const numbers = [1, 2, 3, 4, 5];","let sum = numbers.reduce((total, num) => total + num);

console.log(sum); // 15"
"Update the SQL table with the following data.
id 	name     	age
1	    John        26","UPDATE Table
SET name = 'John', age = 26
WHERE id = 1;"
"Create a code block that calculates the root of a given number
Find the square root of 16","#calculate the square root of a given number
def get_square_root(num):
    root = num ** 0.5
    return root
if __name__ == '__main__':
    number = 16
    root = get_square_root(number)
    print(""Square root of {} is {}"".format(number, root))"
"Suggest a MySQL query that retrieves all students from the ""Idaho"" state.
","SELECT * FROM students
WHERE state = 'Idaho';"
"Construct an HTML form with five input fields: Name, Username, Password, Email, and Phone number.
","<html> 
  <body> 
    <form> 
      <label for=""name"">Name:</label> 
      <input type=""text"" id=""name"" name=""name""> 
      <br> 
      <label for=""username"">Username:</label> 
      <input type=""text"" id=""username"" name=""username""> 
      <br> 
      <label for=""password"">Password:</label> 
      <input type=""password"" id=""password"" name=""password""> 
      <br> 
      <label for=""email"">Email:</label> 
      <input type=""text"" id=""email"" name=""email""> 
      <br> 
      <label for=""phone"">Phone number:</label> 
      <input type=""number"" id=""phone"" name=""phone""> 
      <br> 
    </form> 
  </body> 
</html>"
"Implement a function that calculates the greatest common divisor of two integers.
n1 = 15
n2 = 10","def cal_gcd(n1, n2): 
   if n2 == 0: 
       return n1 
   else: 
       return cal_gcd(n2, n1 % n2) 
 
gcd = cal_gcd(n1, n2) 
print (""GCD of "" + str(n1) + "" and "" + str(n2) + "" is "" + str(gcd))"
"Given an array of objects, write a function that sorts the array in ascending order of its ""price"" property.
[
  {'name': 'Laptop', 'price': 1200},
  {'name': 'Monitor', 'price': 500},
  {'name': 'Mouse', 'price': 50}
]","def sort_by_price(arr):
    arr.sort(key=lambda item: item['price'])
    return arr

# Output: [{'name': 'Mouse', 'price': 50}, {'name': 'Monitor', 'price': 500}, {'name': 'Laptop', 'price': 1200}]"
"Take the following array and add up all of the numbers
numbers = [4,15,7,10,45]","def sum_numbers(numbers):
    total = 0
    for num in numbers:
        total += num
    return total

print(sum_numbers(numbers))"
"List the different access modifiers in Java
","The access modifiers in Java are public, private, protected, and default. Public members are accessible everywhere and can be inherited. Private members can only be accessed within the same class. Protected members are accessible within the same package but can be inherited to a subclass in a different package. Default, or package-private, members are accessible within the same package but cannot be inherited."
"Generate a data structure that can efficiently store an array of words
","""""""
Generate a data structure that can efficiently store an array of words
""""""

# create a trie (a node with 26 references to other nodes)
class TrieNode:
    def __init__(self):
        self.children = dict()
        self.end = False

class Trie:
    def __init__(self):
        self.root = TrieNode()

    def insert(self, word):
        node = self.root
        for c in word:
            if c not in node.children:
                node.children[c] = TrieNode()
            node = node.children[c]
        node.end = True

# create an empty array
word_array = []

# create a new trie
trie = Trie()

# iterate over the array and insert the words into the trie
for word in word_array:
    trie.insert(word)"
"How would you remove all punctuation marks in a given string?
","We can remove all punctuation marks in a given string by using the regular expression library in Python. We can create a pattern and use the re.sub() function to replace a matched pattern and remove the punctuation marks from the given string. This can be done with the following code:

import re 

string = ""This is a test string! With [special] ^characters.""

remove_punct = re.sub(r'[^\w\s]','',string) 

print(remove_punct) # Output = This is a test string With special characters"
"Create a switch statement that evaluates an integer from 0 to 5 and outputs a description of the number.
num = 4","// program to create a switch statement that evaluates an integer
switch(num) {
    case 0: 
        console.log(""num is 0"")
        break;
    case 1: 
        console.log(""num is 1"")
        break;
    case 2: 
        console.log(""num is 2"")
        break;
    case 3: 
        console.log(""num is 3"")
        break;
    case 4: 
        console.log(""num is 4"")
        break;
    case 5: 
        console.log(""num is 5"")
        break;
    default:
        console.log(""num is not between 0 and 5"")
        break;
}"
"Write a Python function to convert a dictionary into a list of tuples.
dictionary = {
  ""name"": ""John"",
  ""age"": 36
}","def dict_to_tuple(dictionary): 
  return [(key, value) for key, value in dictionary.items()]"
"Create a new branch in Git with the name ""feature-X"" and switch to it.
","git branch feature-X
git checkout feature-X"
"Write a Python script to find the area of a triangle with sides 18, 24, and 30.
","def triangle_area(a, b, c):
    '''This function computes the area of a triangle given its side lengths.'''
    # Calculate semi-perimeter
    s = (a + b + c) / 2
    # Calculate the area
    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
    return area

print(""The area of the triangle is:"", triangle_area(18, 24, 30))"
"Construct a code that takes in an object and checks whether each property includes a certain value
my_dict = {
    'name': 'John',
    'age': 23,
    'pet_name': 'Maggy'
}
value = 'John'","def check_value(obj, value):
    for key, val in obj.items():
        if val == value:
            return True
    return False"
"Create a SQL query to find all the flights departing from city X that are operated by carrier Y.
","SELECT * FROM flights
WHERE origin_city='X' AND carrier='Y';"
"Construct a Linked List class.
","""""""
Construct a Linked List class
""""""

class Node: 
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None
    
    def add_node(self, data):
        temp = Node(data) 
        temp.next = self.head
        self.head = temp
    
    def print_list(self):
        current = self.head
        while current:
            print(current.data)
            current = current.next

if __name__ == '__main__':
    llist = LinkedList()
    llist.add_node(1)
    llist.add_node(3)
    llist.add_node(5)
    llist.add_node(7)
    llist.print_list() # prints 7 5 3 1"
"Write some code in JavaScript to generate an array with 3 positive random integers.
","function getRandomIntegers(size) {
  return [...Array(size)].map(
      () => Math.floor(Math.random() * Math.floor(20))
    ).filter(randomNumber => randomNumber > 0);
}

getRandomIntegers(3); //Returns an array with 3 random positive integers"
"Write a code to filter and print all lines that end in the given character.
string = ‘Hello world\nMy name is John\nHello again\nToday is Monday’
character = ‘n’","lines = string.split(""\n"") 
for line in lines: 
    if line.endswith(character): 
        print(line)"
"Create a customer management system using Python and the Django web framework.
","Steps for creating a customer management system using Python and the Django web framework:
1. Create a Django project
2. Add customers app to the project 
3. Create a model for customers in the customers app
4. Update the customers app's views function to include the logic for adding, deleting, and updating customers
5. Add customers app the the project's urls.py file to map requests to the views functions
6. Create and update templates in the customers app to provide the UI
7. Run the Django project to launch the web application"
"Describe the steps of creating an application using the Flask framework.
","Steps to creating a Flask application include importing the Flask module, creating an instance of Flask, creating an HTML template file, and creating a route for the app that renders the HTML template. The next step is to create a file containing the code to execute on each route; this could include performing a database query, calling a web API, running functions, etc. Once the application has been built, it can be run using a Flask client, such as the flask command line interface."
"Create an HTML page using JavaScript that generates a table with the following data.
const data = [
  {
    name: ""John Doe"",
    age: 30,
    city: ""New York""
  },
  {
    name: ""Jane Smith"",
    age: 25,
    city: ""San Francisco""
  },
  {
    name: ""Adam Johnson"",
    age: 27,
    city: ""Los Angeles""
  }
];","<html>
  <head>
    <script>
      function generateTable() {
        const data = [
          {
            name: ""John Doe"",
            age: 30,
            city: ""New York""
          },
          {
            name: ""Jane Smith"",
            age: 25,
            city: ""San Francisco""
          },
          {
            name: ""Adam Johnson"",
            age: 27,
            city: ""Los Angeles""
          }
        ];

        let table = document.createElement('table');

        // Add Table Headers
        let tableHeaders = ""<tr>"";
        [""Name"",""Age"",""City""].forEach(header => {
          tableHeaders += `<th>${header}</th>`;
        });
        tableHeaders += ""</tr>"";
        table.innerHTML = tableHeaders;

        //Add Table Rows
        data.forEach(datum => {
          let tableRow = document.createElement('tr');
          for (let key in datum) {
            let tableData = document.createElement('td');
            tableData.innerText = datum[key];
            tableRow.appendChild(tableData);
          }
          table.appendChild(tableRow);
        });

        document.getElementById('table-container').appendChild(table);
      }
    </script>
  </head>
  <body>
    <div id=""table-container""></div>
    <script> generateTable(); </script>
  </body>
</html>"
"Find the longest palindromic substring of this string.
string = ""carrace""","def longest_palindrome_substring(string):
    n = len(string)
    t = [[False for _ in range(n)] for _ in range(n)]  
    max_length = 1
    i = 0
    while (i < n): 
        t[i][i] = True
        i = i + 1
    start = 0
    i = 0
    while i < n - 1: 
        if (string[i] == string[i + 1]): 
            t[i][i + 1] = True
            start = i 
            max_length = 2
        i = i + 1
    k = 3
    while k <= n: 
        i = 0
        while i < (n - k + 1): 
            j = i + k - 1
            if (t[i + 1][j - 1] and 
                    string[i] == string[j]): 
                t[i][j] = True
                if (k > max_length): 
                    start = i 
                    max_length = k 
            i = i + 1
        k = k + 1
    longest_palindrome = string[start:start+max_length]
    return longest_palindrome
  
print(longest_palindrome_substring(string))
# Output: carrac"
"Given a string and an integer, write a code to find the index of first occurrence of the integer in the string.
my_string = ""abcdef""
my_int = 2","def find_index(str, num):
    for i in range(len(str)):
        if str[i] == num:
            return i
    return -1
 
my_string = ""abcdef""
my_int = 2
print(find_index(my_string,my_int))"
"Write a function in PHP that takes in two arrays, and returns a new array that contains only elements present in both arrays.
[1, 3, 4], [2, 4, 6]","function intersect_arrays($arr1, $arr2)
{
  return array_intersect($arr1, $arr2);
}"
"Write a code that inverts the case for the given string.
String: wElCOme","def invert_case(input_string):
    result = """"
    for x in input_string: 
        if x.isupper():
            result += x.lower() 
        else: 
            result += x.upper() 
    return result"
"Create a CSS style for a <p> tag to make it bold, italic and center-aligned.
","p {
  font-weight: bold;
  font-style: italic;
  text-align: center;
}"
"Create an SQL table with three columns called id (int type), name (text type), and age (int type).
","CREATE TABLE people (
    id INT PRIMARY KEY, 
    name TEXT,
    age INT
);"
"Write a code to sort a list of integers from smallest to largest
[19, 5, 96, 36]","def sort_list(lst):
    lst.sort()
    return lst"
"What data structure can be used to convert the following list into a dictionary?
[""apple"", ""pear"", ""mango"", 100, 0.25, False]","The data structure that can be used to convert the given list into a dictionary is a list of tuples. The tuples will comprise of the key and the value in the dictionary, e.g. (""apple"", ""pear""), (100, 0.25), (False, True). This can then be converted into a dictionary by using the dict() constructor."
"Generate C++ code that compares two strings and returns 1 if they are equal, 0 if they are not.
","bool compareStrings(string str1, string str2)
{
    if(str1.compare(str2) == 0)
        return 1;
    else
        return 0;
}"
"Parse an HTML table and extract all the rows.
<table>
    <tr>
        <td>Row 1 - Column 1</td> 
        <td>Row 1 - Column 2</td>
    </tr>
    <tr>
        <td>Row 2 - Column 1</td>
        <td>Row 2 - Column 2</td>
    </tr>
</table>","""""""
Parse an HTML table and extract all the rows.
""""""

import re

def get_table_rows(html):
    pattern = re.compile('<tr>(.*?)</tr>', re.DOTALL)
    rows = re.findall(pattern, html)
    return rows

if __name__ == '__main__':
    html = """"""
    <table>
        <tr>
            <td>Row 1 - Column 1</td> 
            <td>Row 1 - Column 2</td>
        </tr>
        <tr>
            <td>Row 2 - Column 1</td>
            <td>Row 2 - Column 2</td>
        </tr>
    </table>
    """"""
    rows = get_table_rows(html)
    print(rows)"
"Explain how to use the built-in bubble sort function for sorting a given list of numbers.
[4, 9, 0, 3, 5, 7]","The built-in bubble sort function can be used to sort the given list of numbers. The algorithm starts from the beginning of the list and compares two adjacent elements. If the first number is larger than the second number, they are swapped. This process is repeated until the end of the list is reached. After one iteration, the largest element is placed at the end of the list. This process is then repeated for the remaining elements until the list is completely sorted. To use the Python built-in bubble sort function, simply call the bubble sort on the list, and it will return the sorted list."
"Write code to create a list of length 10 with random integers.
","import random 

myList = [] 
for i in range(10): 
     myList.append(random.randint(0,10)) 

print(myList)"
"Write a MySQL query to find the names of all customers who have placed an order for more than $100.
","SELECT customers.name
FROM orders
JOIN customers ON customers.id = orders.customer_id 
WHERE orders.amount > 100;"
"Find the index of the number 23 in the given array.
[78, 82, 6, 23, 77, 57, 88]",3
"Create a Python script to find the greatest common divisor (GCD) of a pair of integers.
Number 1: 10
Number 2: 12","def findGCD(x, y): 
  
    # This function implements the Euclidian algorithm 
    # to find GCD of two numbers 
    while(y): 
        x, y = y, x % y 
  
    return x 
  
# Driver program 
gcd = findGCD(10, 12) 
print(gcd)"
"Modify the given program to print ""Hello, foo"" where ""foo"" is user input.
System.out.println(""Hello, World!"");","import java.util.Scanner;
public class Test {
    public static void main(String args[]){
        Scanner scanner = new Scanner(System.in);
        System.out.print(""Enter in a name: "");
        String name = scanner.nextLine(); 
        System.out.println(""Hello, "" + name + ""!"");
    }
}"
"Change the following code so that it accepts a list as an argument and prints each element of the list.
def print_list(arr):
	i = 0
	while (i < len(arr)):
		print arr[i]
		i +=1","def print_list(arr):
	for ele in arr:
		print(ele)"
"Generate a Java program to sort an array of n elements in ascending order
","public static void sort(int arr[]) 
{ 
    int n = arr.length; 
  
    // Build heap (rearrange array) 
    for (int i = n / 2 - 1; i >= 0; i--) 
        heapify(arr, n, i); 
  
    // One by one extract an element from heap 
    for (int i=n-1; i>=0; i--) 
    { 
        // Move current root to end 
        int temp = arr[0]; 
        arr[0] = arr[i]; 
        arr[i] = temp; 
  
        // call max heapify on the reduced heap 
        heapify(arr, i, 0); 
    } 
} 
  
// To heapify a subtree rooted with node i which is 
// an index in arr[]. n is size of heap 
static void heapify(int arr[], int n, int i) 
{ 
    int largest = i; // Initialize largest as root 
    int l = 2*i + 1; // left = 2*i + 1 
    int r = 2*i + 2; // right = 2*i + 2 
  
    // If left child is larger than root 
    if (l < n && arr[l] > arr[largest]) 
        largest = l; 
  
    // If right child is larger than largest so far 
    if (r < n && arr[r] > arr[largest]) 
        largest = r; 
  
    // If largest is not root 
    if (largest != i) 
    { 
        int swap = arr[i]; 
        arr[i] = arr[largest]; 
        arr[largest] = swap; 
  
        // Recursively heapify the affected sub-tree 
        heapify(arr, n, largest); 
    } 
}"
"Complete the code to slice the list up to index 4.
my_list = [1, 2, 3, 4, 5, 6, 7]","my_list = my_list[:4] # my_list is now [1, 2, 3, 4]"
"How do you add an element to the end of an array in Python?
","To add an element to the end of an array in Python, use the append() method. For example, to add the element ""apple"" to the end of the array [""orange"", ""banana""], use the following code:

my_array = [""orange"", ""banana""]
my_array.append(""apple"")"
"Write a PHP program to print a Christmas tree on the console.
","<?php 
    //Printing the christmas tree
    $height = 5; 
  
    // Looping through rows 
    for ($i = 1; $i <= $height; $i++) 
    { 
        // Print Spaces 
        for ($k = $height; $k > $i; $k--) 
        { 
            echo "" ""; 
        } 
  
        // Print Stars 
        for ($j = 1; $j <= (2 * $i - 1); $j++) 
        { 
            echo ""*""; 
        } 
          
        // Move to the next row 
        echo ""\n""; 
    } 
    // Printing the stand
    // Print Spaces 
    for ($i = 1; $i <= $height - 1; $i++) 
    { 
        echo "" "";
    } 
  
    // Printing the stand 
    echo ""*\n""; 
?>"
"Write a SQL query to select the first name and last name of all employees whose salary is greater than $50,000.
","SELECT first_name, last_name
FROM employees
WHERE salary > 50000;"
"Write a shell script to list the contents of a given folder.
/path/to/folder","#!/bin/sh

ls -al /path/to/folder"
"Create a css class to center the text in a given div.
",".text-center {
    text-align: center;
    margin-left: auto;
    margin-right: auto;
}"
"Remove all duplicates from this list using Python
list=[5,5,5,7,8,8,9]","list=[5,7,8,9]

list = list(dict.fromkeys(list))"
"Develop a function in C++ to find the roots of a quadratic equation ax^2 + bx + c = 0.
","double findRoots(double a, double b, double c) 
{
    double result;

    if ((b*b - 4*a*c) < 0) {
        return INT_MIN;
    } else {
        result = (-b + sqrt(b*b - 4*a*c)) / (2*a);
        return result;
    }
}"
"Write an HTML snippet that contains two input field.
","<form>
    Name: <input type=""text"" name=""name""><br>
    Age:  <input type=""text"" name=""age""><br>
</form>"
"Replace the placeholder with actual API calls to execute the following code.
string search_term = ""coffee shop""; 
list results = API_call(search_term)
print(results)","string search_term = ""coffee shop""; 
list results = requests.get(""https://api.example.com/search?term=""+search_term).json()
print(results)"
"Create a MongoDB query to find all documents that have a field called 'city' with a value of 'New York'
",db.collection.find({city: 'New York'});
"Replace the placeholder in the given HTML document with the corresponding table.
<html>
  <body>
    <!-- replace placeholder with table -->
  </body>
</html>

<table style=""width:100%"">
  <tr>
    <th>Firstname</th>
    <th>Lastname</th> 
    <th>Age</th>
  </tr>
  <tr>
    <td>Jill</td>
    <td>Smith</td> 
    <td>50</td>
  </tr>
  <tr>
    <td>Eve</td>
    <td>Jackson</td> 
    <td>94</td>
  </tr>
</table>","<html>
  <body>
    <table style=""width:100%"">
  <tr>
    <th>Firstname</th>
    <th>Lastname</th> 
    <th>Age</th>
  </tr>
  <tr>
    <td>Jill</td>
    <td>Smith</td> 
    <td>50</td>
  </tr>
  <tr>
    <td>Eve</td>
    <td>Jackson</td> 
    <td>94</td>
  </tr>
</table>
  </body>
</html>"
"Given a dataframe, write a function to add a new column that contains the results of a calculation between two columns.
dataframe = Pandas DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9]], columns=['A', 'B', 'C'])","def add_calculation_column(dataframe, calculation, column_name):
    dataframe[column_name] = dataframe.eval(calculation)
    return dataframe"
"Categorize the following sentence into either positive or negative
This game is way too difficult",negative
"Rewrite the following sentence so that it has a different meaning: We should try and solve this problem.
",Let's attempt to solve this problem.
"Read the following string in PHP and print it in the browser.
String: ""PHP scripting language""","<?php 
  $str = ""PHP scripting language""; 
  echo $str; 
?>"
"Write a JavaScript code to create a function that checks if a given number is divisible by 2.
","function isDivisibleBy2(num) {
  return num % 2 === 0;
}"
"Create a list comprehension to generate a new list of composed strings.
names = [""John"", ""Steve"", ""Bob""]
blanks = [""__'s cat"", ""__'s dog"", ""__'s parrot""]",[name + blank for name in names for blank in blanks]
"Fix this indentation error in the following Python code
def double(number):
 return number * 2","def double(number):
    return number * 2"
"Propose an algorithm in Python for sorting a given list of numbers in descending order.
","One possible solution would be to use a variation of the bubble sort algorithm, where the elements are being swapped from the last element to the first element.

def sort_numbers_descending(elements):
  n = len(elements)
  # Traverse through all elements
  for i in range(n-1):
    # Last i elements are already in place
    for j in range(n-1-i):
      # Swap if the element found is greater
      # than the next element
      if elements[j] < elements[j+1]:
        temp = elements[j]
        elements[j] = elements[j+1]
        elements[j+1] = temp
  return elements"
"Write an HTML page which takes in user input and makes an AJAX request to a web server.
","<html>
  <head>
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js""></script>
    <script>
      $(document).ready(function(){
        $(""button"").click(function(){
          $.ajax({
            url: 'https://example.com',
            type: 'POST',
            data: $('#user-input').val(),
            success: function(response) {
              // Display response from server
            }
          });
        });
      });
    </script>
  </head>
  <body>
    <input type=""text"" id=""user-input"" />
    <button>Send</button>
  </body>
</html>"
"Write a query in elasticsearch that returns documents that contain matching content.
Find all documents in the ""products"" index that contains the phrase ""Black Friday""","GET products/_search
{
  ""query"": { 
    ""multi_match"": { 
      ""query"": ""Black Friday"", 
      ""fields"": [""*""] 
    }
  }
}"
"Search for the given element in the given list and return true if it is found otherwise return false.
List: [4, 7, 8, 9], elem: 9",true
"Create a function to calculate the sum of all the values in the given array.
[2, 4, 6, 8]","def sum_of_array(arr):
  total = 0
  for num in arr:
    total += num
  return total

# Output:"
"Create a function "" avg_grade"" that would take a list of grades and return the average of the grades
list = [84, 89, 94, 81]","def avg_grade(list):
    total = 0
    for num in list:
        total += num
    return total / len(list)"
"Change the following code to reduce its running time
for i in range(0, len(nums)):
    if nums[i] == target:
        return i","def find_target(nums, target): 
    for i, num in enumerate(nums):
        if num == target:
            return i
    return -1

if __name__ == '__main__':
    nums = [2, 3, 5, 7]
    target = 5
    index = -1
    for i in range(0, len(nums)):
        if nums[i] == target:
            index = i
            break
    if (index == -1):
        print(""Target not found!"")
    else:
        print(""Target found at index:"", index)"
"Create a text box containing the given text
Textbox Text: Welcome","<input type=""text"" value=""Welcome"" />"
"Write a CSS code to add a 1px red border to a paragraph element.
","p {
  border: 1px solid red;
}"
"Write a piece of code to store 3 values in a single variable.
","let data = [val1, val2, val3];"
"Construct an SQL query to select all students who have a grade of 90 or greater from the 'Student' table.
",SELECT * FROM Student WHERE Grade >= 90;
"Describe what an abstract class is used for.
","An abstract class is a class that contains abstract methods and variables. Abstract classes are meant to be inherited and customized by their subclasses. They are used to provide basic implementations of commonly used methods, as well as impose a common interface between different subclasses."
"Create a JSON object that stores the following employee information.
name: John Smith
age: 28
department: Engineering","{""name"": ""John Smith"", ""age"": 28, ""department"": ""Engineering""}"
"Convert the given list of integers to a string of comma separated values.
[1, 2, 3, 4, 5]","""1,2,3,4,5"""
"Use Django to create a basic website for a restaurant.
","We can use Django to create a basic website for a restaurant by following the steps below: 

1. Design a template for the website using HTML and CSS
2. Create a Django project with the basic layout as given by the template
3. Create views that will be used to render different pages (eg. home page, menu page, contact page, etc.)
4. Create models in the Django project which will store information related to the restaurant, such as menu items, pricing, opening times, etc.
5. Create URLs for each of the views
6. Add the necessary code to link the models and views together
7. Create a form for customers to submit their queries
8. Add necessary functionality to the website, such as a search feature and ordering system"
"Write a function to tokenize a string into its characters.
sentence = ""Hello world!""","def tokenize(sentence):
    tokens = []
    # loop through the characters in the sentence
    for letter in sentence:
        # append each character to the tokens list
        tokens.append(letter)
    return tokens"
"Create a SQL query to return the names of all customers sorted in descending order by their balance?
","SELECT name 
FROM customers 
ORDER BY balance DESC;"
"Create a HTML web page with a header, a body and a footer section.
","<html>
  <head>
    <title>My Web Page</title>
  </head>
  <body>
    <!-- content goes here -->
  </body>
  <footer>
    <!-- footer content goes here -->
  </footer>
</html>"
"Develop a Python script to count the number of characters, words, and sentences present in a given string.
This is a sample sentence to test the program.","string = 'This is a sample sentence to test the program.'
character_count = len(string)
word_count = len(string.split())
sentence_count = len(string.split('.'))

print('Number of characters: ', character_count)
print('Number of words: ', word_count)
print('Number of sentences: ', sentence_count)

Output:
Number of characters: 45
Number of words: 8
Number of sentences: 1"
"Write a MySQL query to insert values into a table called 'users' with three columns: 'name', 'email', and 'age'.
name: John, email: john@example.com, age: 28","INSERT INTO users (name, email, age) VALUES ('John', 'john@example.com', 28);"
"Generate the syntax to declare a variable called 'result' as an integer in Javascript.
",let result = 0;
"Suggest a technique to detect plagiarism in programming assignments.
","One technique to detect plagiarism in programming assignments is to compute the similarity between submissions and reference solutions. This can be done by extracting the key pieces of code from submissions, such as functions and loops, and then comparing them against the reference solution. If the extracted pieces of code are more similar than would be expected by chance, it could be an indication of plagiarism."
"Use a nested loop to print the output.
","for i in range(3):
    for j in range(3):
        print('*', end=' ')
    print()"
"Create a Java program to print out Armstrong numbers in a given range.
","public static void armstrongInRange(int lower, int upper) 
{ 
    int num, originalNum, remainder, n = 0;
  
    // Calculates the number of digits a number has 
    for(originalNum = lower + 1; originalNum < upper; originalNum++) 
    { 
        num = originalNum; 
        while(num != 0) 
        { 
            num /= 10; 
            n++; 
        }  
          
        num = originalNum; 
        int sum = 0; 
          
        // Calculates the sum of the nth power of the digits 
        while(num != 0) 
        { 
            remainder = num % 10; 
            sum += Math.pow(remainder, n); 
            num /= 10; 
        } 
  
        // Checks if the sum is equal to the original number 
        if(sum == originalNum) 
            System.out.print(originalNum +  "" ""); 
    } 
}"
"Write a Python program to iterate the given list and print the square or each element.
my_list = [1, 2, 3, 4]","my_list = [1, 2, 3, 4]

for i in my_list:
    print(i**2)

# Output: 1, 4, 9, 16"
"Implement an iterator in Python for the following string.
string = 'Hello World!'","class Iterator:
    def __init__(self, data):
        self.data = data
        self.index = 0

    def __iter__(self):
        return self

    def __next__(self):
        if self.index >= len(self.data):
            raise StopIteration
        char = self.data[self.index]
        self.index += 1
        return char

iterator = Iterator(string)
for char in iterator:
    print(char)"
"Suggest an approach to debug a function written in Javascript that is not returning the expected result.
",One approach to debug the function would be to use console.log statements to print out the values of the variables inside the function. This would help identify where the problem is and what needs to be changed in order to get the expected result.
"Parse data from a given JSON object.
data:
{
  ""data"": [
    {
      ""name"": ""John"",
      ""age"": 24
    },
    {
      ""name"": ""Bob"",
      ""age"": 26
    }
  ]
}","import json

data = '{""data"":[{""name"":""John"",""age"":24},{""name"":""Bob"",""age"":26}]}'

parsed_data = json.loads(data)

for item in parsed_data['data']:
  print(item['name'] + "" is "" + str(item['age']) + ""years old."")"
"Create a HTML form with two input fields called 'name' and 'age'.
","<form>
  <label for=""name"">Name:</label>
  <input type=""text"" name=""name"" id=""name"">
  <label for=""age"">Age:</label>
  <input type=""number"" name=""age"" id=""age"">
  <input type=""submit"" value=""Submit"">
</form>"
"Code a function in R which concatenates two strings of a given length and returns the resulting string.
let string1 = ""Hello"";
let string2 = ""World"";
let length = 10;","concat_strings <- function(string1, string2, length) {
  return( substr(paste0(string1,string2), 1, length) )
}"
"You are given a string array. Code a JavaScript function to remove duplicate strings from the array.
let arrStrings = [""apple"", ""orange"", ""apple"", ""banana""]","function removeduplicates(arr){
    let arrDupRemoved = [];
    for (let i = 0; i < arr.length; i++){
      if(arrDupRemoved.indexOf(arr[i]) === -1){
        arrDupRemoved.push(arr[i]);
      }
    }
    return arrDupRemoved;
  }

console.log(removeduplicates(arrStrings)) // prints [""apple"", ""orange"", ""banana""]"
"How would you create a class in Java and add a field, constructor and method?
","public class MyClass {
    private String field;
    
    public MyClass(String field) {
        this.field = field;
    }
    
    public void sayHello() {
        System.out.println(""Hello, "" + field + ""!"");
    }
}"
"Filter the provided array by returning only even numbers.
numbers = [1, 2, 3, 4, 5]","numbers = [2, 4]"
"Write a function 'play_game' that plays a simple game of rock paper scissors.
","def play_game():
    options = ['rock', 'paper', 'scissors']
    computer_choice = random.choice(options)
    user_choice = input('Choose ""rock"", ""paper"", or ""scissors"": ')

    if user_choice == computer_choice:
        print('It is a tie!')
    elif user_choice == 'rock':
        if computer_choice == 'paper':
            print('Computer wins!')
        else:
            print('You win!')
    elif user_choice == 'paper':
        if computer_choice == 'scissors':
            print('Computer wins!')
        else:
            print('You win!')
    elif user_choice == 'scissors':
        if computer_choice == 'rock':
            print('Computer wins!')
        else:
            print('You win!')"
"How do you import the math module in a Python program?
",import math
"Create a program to tokenize a given string into a list of strings.
'Hello! My name is Bob.'","import nltk

def tokenize(string):
    tokens = nltk.word_tokenize(string)
    return tokens

print(tokenize('Hello! My name is Bob.')) # prints [""Hello"", ""!"", ""My"", ""name"", ""is"", ""Bob"", "".""]"
"Specify the platform and the environment variables needed to run a Java program.
","The platform dependent environment variables needed to run a Java program on any platform are:

1. JAVA_HOME: This variable stores the location of JDK.
2. PATH: This variable stores the path to the executables.
3. CLASSPATH: This variable contains the path to the Java classes.
4. JRE_HOME: This variable stores the location of the JRE."
"Design a class to hold calendar date-related information.
","class CalendarDate:
    def __init__(self, day, month, year):
        self.day = day
        self.month = month
        self.year = year

    def get_date(self):
        return self.day, self.month, self.year"
"Write a function 'divideList' which takes a list and an integer, and divides the list into n groups.
list = [1, 2, 3, 4, 5]
n = 2","def divideList(list, n):
    nList = [[] for _ in range(n)]
    for item in list:
        nList[item % n].append(item)
    return nList

print(divideList([1, 2, 3, 4, 5], 2))

OUTPUT:
[[1, 3, 5], [2, 4]]"
"Construct a while loop in the code to print the integers from 0 to 9.
","i = 0
while i < 10:
    print(i)
    i += 1"
"Suggest a way to convert a decimal number to binary.
int number = 15","string decimalToBinary(int number) {
    string binaryNum = """";
    while(number > 0) {
        binaryNum = (number % 2 == 0 ? ""0"" : ""1"") + binaryNum;
        number = Math.trunc(number / 2);
    }
    return binaryNum;
}"
"Create a wrapper class for a given API that takes string input and returns JSON output.
url = ""http://example.com/api""","class APIWrapper:
    '''This class wraps a given API and provides a convenient way to use it'''
    def __init__(self,url):
        self.url = url

    def call_api(self, input):
        params = {""input"": input}
        response = requests.get(self.url, params=params).json()
        return response"
"Write a query in SQL that returns all customers with the name ""John"".
No input","SELECT * 
FROM customer 
WHERE customer_name = 'John';"
"Explain what a while loop is.
","A while loop is a control flow statement that repeats a set of instructions while a certain condition is true. It consists of a loop condition and a set of instructions that are to be executed as long as the condition remains true. The loop condition is evaluated first, and if it returns true then the instruction set is executed, after which the condition is evaluated again. This process is repeated until the condition returns false, at which point the loop terminates and execution continues at the statement after the loop."
"Write a for loop in Java to print all the numbers in a given list.
int[] list = {21, 34, 54, 77, 92};","for (int i = 0; i < list.length; i++) {
 System.out.println(list[i]);
}"
"Update the strings stored in a dictionary, so that all strings have the same length.
d = {
  'apple': 'small',
  'orange': 'medium size'
}","d = {
  'apple': 'small  ',
  'orange': 'medium size'
  }"
"What is the difference between compile-time and run-time errors?
","Compile-time errors occur when code does not conform to the syntax specified by the programming language, and usually prevent the code from being executed. Run-time errors occur when code is syntactically correct, but there are still problems executing the code. Run-time errors typically occur at the point where code is executed, as opposed to compile-time errors which occur at the point of compilation. The types of errors usually depend on the type of language used for programming. For example, compiling Java code with a C++ compiler would cause a compile-time error since the two languages have different syntaxes."
"Define a function in R which takes two arguments and finds their average.
","find_average <- function(x, y){
    avg <- (x + y) / 2
    return(avg)
}"
"Construct a pre-order traversal code to traverse a binary tree.
","def preOrder(root):
  if root:
    print(root.data)
    preOrder(root.left)
    preOrder(root.right)"
"Create a program that prints out an Egyptian multiplication table up to twelve
","def print_egyptian_table():
    print(""Egyptian Multiplication Table"")
    print(""----------------------------"")

    for i in range(1,13):
        for j in range(1,13):
            product = i * j
            print(f""{i} x {j} = {product}"")
        print(""----------------------------"")

if __name__ == ""__main__"":
    print_egyptian_table()"
"Write a Haskell function to check if two numbers are evenly divisible.
","isEvenDivisible :: Integer -> Integer -> Bool
isEvenDivisible x y = (x `mod` y) == 0"
"Add some markup to the following text
Hello World!",<p>Hello <strong>World</strong>!</p>
"Implement an R program to calculate the median of an integer array.
[2, 3, 4, 5]","calculate median <- function(arr){
    sorted <- sort(arr)
    n <- length(arr)
    if(n%%2 == 0){
        mid <- n/2
        median <- (sorted[mid] + sorted[mid + 1] ) / 2
    } else {
        mid <- (n + 1) / 2
        median <- sorted[mid]
    }
    return(median)
}

calculate_median(c(2, 3, 4, 5))"
"Construct the following JSON object.
","{
  ""Name"": ""John"",
  ""Age"": 23,
  ""Gender"": ""Male"",
  ""Height"": 168
}"
"Create an algorithm to search for a substring in a given string.
`<code>'Hello World!', substring = 'll'</code>`","""""""
Create an algorithm to search for a substring in a given string
""""""
def search(string, substring):
    for i in range(len(string)):
        if string[i: i + len(substring)] == substring:
            return True
    return False

if __name__ == '__main__':
    print(search('Hello World!', 'll'))"
"What is the Python equivalent of the C++ code snippet?
#include <iostream>

int main() {
 std::cout << ""Hello, World!"" << std::endl;
 return 0;
}","print(""Hello, World!"")"
"Create a function to check the validity of an email address.
","def validate_email(email):
    regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
    if re.search(regex,email):
        return True
    else:
        return False"
"Given a list of numbers, write a Python function to count how many numbers in the list are greater than 10.
","def count_greater_than_ten(nums):
    return len([n for n in nums if n > 10])"
"Name the components of a typical machine learning pipeline.
","A typical machine learning pipeline consists of data pre-processing, model training, model evaluation and model deployment. Data pre-processing involves cleaning, formatting, and transforming the data, while model training involves selecting an appropriate model and using it to learn from the data. Model evaluation evaluates the models and assists in model selection. The final step is deployment of the model, to enable inference from and prediction on new data points."
"Categorize the words from the list [""Apple"", ""Carrot"", ""Banana"", ""Tomato"", ""Lemon""]
","Fruits: Apple, Banana, Lemon
Vegetables: Carrot, Tomato"
"Create a while loop in JavaScript to print out all the numbers between 20 and 30.
","let i = 20;
while (i <= 30) {
  console.log(i);
  i++;
}"
"Explain how inheritance works in programming.
","Inheritance is a feature of object-oriented programming (OOP) that allows one class, known as the ""parent class"" or ""base class"", to pass its properties and methods to another class, known as the ""child class"" or ""inherited class"". This relationship between the classes allows for code reuse, as the child class can access the data and functionality of the parent class. Additionally, the child class is allowed to modify and add onto the parent class's features, allowing for even more code reuse between classes and creating more efficient developer workflows."
"Create a code that edits a list by adding two to each element
[1, 2, 3]","def add_two(input_list):
    new_list = []
    for num in input_list:
        new_list.append(num + 2)
    return new_list"
"Create a JavaScript object literal with two properties: a key of name with a value of 'Bob' and a key of age with a value of 30.
","let bob = {
    name: 'Bob',
    age: 30
};"
"Write a SQL query to get all the users who have registered in the last 7 days.
","SELECT *
FROM Users
WHERE registration_date > DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
"Construct a HTML template using Bootstrap.
","<!DOCTYPE html>
<html lang=""en"">
<head>
  <title>Bootstrap Example</title>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
  <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"">
  <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>
  <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js""></script>
  <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js""></script>
</head>
<body>

<div class=""container"">
  <h2>Template</h2>
  <p>This is a template for a Bootstrap page.</p>
  <p>It uses bootstrap's grid system for the layout.</p>  
</div>

</body>
</html>"
"Create a regex statement to search for any 8-digit numbers in a string.
",\d{8}
"Create a code to validate an email address using Regular Expressions.
","```
import re

#Function to validate an email
def is_valid_email(email):
    regex = '^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$'
    if (re.search(regex, email)):  
        return True  
    else:  
        return False

#Test the function
if(is_valid_email(""abc@gmail.com"")): 
    print(""Valid Email"")  
else : 
    print(""Invalid Email"") 
#Output: Valid Email
```"
"Display the dice sum of two random numbers from 1 to 6.
","// Generating two random numbers from 1 to 6
let rand1 = Math.floor(Math.random() * 6) + 1; 
let rand2 = Math.floor(Math.random() * 6) + 1; 

// Calculating and displaying the dice sum 
let diceSum = rand1 + rand2; 
console.log(""Dice sum: "" + diceSum);"
"Create a Ruby method for calculating the mean of the given array of numbers.
","def calculate_mean(numbers)
  sum = 0
  numbers.each { |number| sum += number }
  return (sum.to_f / numbers.length)
end"
"You need to edit the wrong sentence appropriately.
I likes ice cream.",I like ice cream.
"You need to compute the sum of all odd elements in a given matrix.
[[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9],]","def sum_odd_matrix(matrix):
 sum = 0
 for row in matrix:
  for value in row:
   if value % 2 != 0:
    sum += value
 return sum"
"Parse a list of numbers from a string in Python.
s = ""1, 2, 3, 4, 5, 6""","import re
list = re.findall(r'\d+', s)"
"Create a function to collect all the alphabets from a given string.
The string is ""My name is John!""","//Function to collect all the alphabets
function getAlphabets(str) {
  const result = [];
  for(let i=0; i < str.length; i++) {
    if(str[i].match(/[a-z]/i)) {
      result.push(str[i]);
    }
  }
  return result;
}

//Call function and pass the string as parameter
let alphabets = getAlphabets(""My name is John!""); 
console.log(alphabets); // Output: [""M"", ""y"", ""n"", ""a"", ""m"", ""e"", ""i"", ""s"", ""J"", ""o"", ""h""]"
"Generate 10 random strings of 5 characters in length with JavaScript.
","let randomString = [];
 
for (let i = 0; i < 10; i++) {
    let randomChars = Math.random().toString(36).slice(-5);
    randomString.push(randomChars);
}

console.log(randomString);"
"Write a function in SQL to calculate the total number of students by course.
TABLE student
    ( 
    id INT AUTO_INCREMENT PRIMARY KEY, 
    name VARCHAR(255), 
    age INT
    );

TABLE course
    ( 
    id INT AUTO_INCREMENT PRIMARY KEY, 
    name VARCHAR(255), 
    student_id INT
    );","SELECT course.name, COUNT(student.id) AS ""Total Students"" 
FROM course 
INNER JOIN student ON course.student_id = student.id
GROUP BY course.name;"
"Change the value of the second element of this list to 'cricket'.
sports_list = ['soccer', 'rugby', 'hockey']","""""""
Change the value of the second element of this list to 'cricket'
""""""

sports_list = ['soccer', 'rugby', 'hockey']

# Change the value of the second element of this list to 'cricket'
sports_list[1] = 'cricket'
print(sports_list)"
"You are given a string s, output the longest substring with no repeating characters.
s = ""abcabcbb""","def longest_substring(s):
    length = len(s)
    current_length = 1
    last_occur= {s[0]:0 }
    max_length = 0
    i = 0 
    while i < length:
        if(s[i] in last_occur):
            current_length = i - last_occur[s[i]]
            if(current_length > max_length):
                max_length = current_length
            last_occur[s[i]] = i
        else:
            last_occur[s[i]] = i
            current_length += 1
            if(current_length > max_length):
                max_length = current_length
        i += 1
    return max_length

longest_substring(s)
3"
"Construct a sorting algorithm to sort an array in increasing order.
array = [4,7,1,3,9]","def bubble_sort(arr): 
    arr_length = len(arr)
    # Iterate through entire array 
    for i in range(arr_length): 
        # Iterate through unsorted subarray 
        for j in range(0, arr_length-i-1): 
            # Swap items if needed
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
  
# Test our Bubble sort implementation
arr = [4,7,1,3,9] 
bubble_sort(arr) 
  
print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])"
"Write a Java program to sort the elements of an int array in the descending order.
[1, 10, 4, 2, 5, 3, 9]","public class ArraySort { 
    public static void main(String[] args) 
    { 
        int array[] = {1, 10, 4, 2, 5, 3, 9}; 

        int n = array.length; 

        for (int i = 0; i < n-1; i++) 
            for (int j = 0; j < n-i-1; j++) 
                if (array[j] < array[j+1]) { 
                    int temp = array[j]; 
                    array[j] = array[j+1]; 
                    array[j+1] = temp; 
                } 

        for (int i=0; i<n; ++i) 
            System.out.println(array[i] + "" ""); 
    } 
}"
"Create an in-place version of selection sort in Python.
arr = [5, 2, 4, 6, 8, 1]","def selection_sort(arr): 

    # Traverse through all array elements 
    for i in range(len(arr)): 
  
        # Find the minimum element in remaining unsorted array 
        min_idx = i 
        for j in range(i+1, len(arr)): 
            if arr[min_idx] > arr[j]: 
                min_idx = j 
                
        # Swap the found minimum element with the first element         
        arr[i], arr[min_idx] = arr[min_idx], arr[i]"
"Create a table in the given MySQL database with 4 columns.
Database Name: my_db
Table Name: my_table
Fields: column_1 (string), column_2 ( integer), column_3 (string), column_4 (integer).","CREATE TABLE my_table (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
	column_1 VARCHAR(150) NOT NULL,
    column_2 INT NOT NULL,
    column_3 VARCHAR(150) NOT NULL,
    column_4 INT NOT NULL
);"
"Using the below HTML code, replace the ""TODO"" comment with the appropriate code to add a hover effect on the div element.
<div>hello</div>

<style>
  div {
    padding: 10px;
    //TODO
  }
</style>","<div>hello</div>

<style>
  div {
    padding: 10px;
    transition: all 0.5s ease-in;
  }
  div:hover {
    box-shadow: 2px 2px 2px #000;
  }
</style>"
"Create a one-click web button with the following properties: font size of 20px; font color rgb(255, 0, 128); background-color #6790FF
","<button style=""font-size: 20px; color: rgb(255, 0, 128); background-color: #6790FF;"">Click Here</button>"
"Create a SQL query to get the top 10 salaries from a given table.
","SELECT TOP 10 salary 
FROM TableName 
ORDER BY salary DESC;"
"Create an array of five integers with any values.
","int[] nums = {12, 24, 49, 37, 54};"
"Edit the existing Python code to convert Fahrenheit (F) degrees to Celsius (C) degrees.
def convert(F):
 return F + 32","def convert(F):
 return (F-32)*5/9"
"Write a Python program that adds two numbers and multiplies them.
4, 6","num1 = 4
num2 = 6

result = (num1 + num2) * num2

print(result)"
"How many islands of Scotland are there?
","There are over 700 islands in Scotland, with approximately 150 of them being inhabited."
"Define a function which takes two strings as arguments and returns a list containing all characters that appear in either string.
string_1 = 'Apple'
string_2 = 'Banana'","def common_chars(string_1, string_2):
    char_list = [] 
    for char in string_1:
        if char in string_2 and char not in char_list:
            char_list.append(char)
    for char in string_2:
        if char in string_1 and char not in char_list:
            char_list.append(char)
    return char_list"
"Build a class in Python with three methods.
","class MyClass:
  def __init__(self):
   # initialization code 
   self.data = []
   self.count = 0
 
  def add_data(self, data_element):
   # add data to a list
   self.data.append(data_element)
   self.count += 1 
 
  def get_data_count(self):
   # return number of data elements
   return self.count"
"Write a function in JavaScript to perform the following operation:
Add two numbers a and b","function sum(a, b) {
 return a + b;
}"
"Write a SQL statement to query the names of all employees from the Employees table whose salary is less than 3000.
",SELECT name FROM Employees WHERE salary < 3000;
"Write HTML code to set the font size of a page to 18px.
","<html>
    <head>
    <style>
    body {
        font-size: 18px;
    }
    </style>
    </head>
</html>"
"Write Javascript code to create a timeout to set a message after 5 seconds.
","setTimeout(() => {
    console.log('This is the message after 5 seconds');
  }, 5000);"
"Describe how to add an element in a linked list in Python.
","// To add an element in a linked list in Python:
// 1. Create a new node containing the value to be added
// 2. Set the ""next"" attribute of the new node to point to the current head node
// 3. Set the head node to be the newly created node
// 4. Increase the size of the linked list by 1"
"How would you find the frequency of each character in a string using JavaScript?
string = ""Hello World""","function getCharacterFrequencies(string) {
    let charMap = {};
    for (let char of string) { 
        charMap[char] = charMap[char] + 1 || 1; 
    }
    return charMap;
}"
"Suggest a sorting algorithm to sort the following array in descending order.
arr = [17, 21, 4, 7, 29, 34, 11]",A Bubble Sort algorithm could be used to sort the given array in descending order. This algorithm compares adjacent elements in the array and swaps them if the element on the left is larger than the element on the right. This process is continued until the array is sorted.
"Provide a function to implement a Binary Tree traversal.
","def printTree(root): 
    
    # Check if tree is empty
    if root == None: 
        return
    
    # First print the root data
    print(root.data, end="" "")
    
    # First recur on left child
    printTree(root.left)
    
    # the recur on right child
    printTree(root.right)"
"Create a SQL query to select users born before 1989-02-17.
",SELECT * FROM users WHERE date_of_birth < '1989-02-17';
"Write a code in Python to find the subsequence of a given sequence.
sequence = [1, 6, 2, 4, 3, 7]","def findSubsequence(sequence): 
    subSeq = [] 
    maxLen = 1
  
    # looping through the sequence 
    for i in range(len(sequence)): 
        j = i + 1
        while j < len(sequence): 
            # checking for non decreasing sequence 
            if sequence[j] >= sequence[i]: 
                subSeq.append(sequence[j]) 
                i = j 
                j += 1
  
            # checking for the subsequence with the max length 
            if len(subSeq) > maxLen: 
                maxLen = len(subSeq) 
  
            # reset subSeq for the next subsequence if current element is starting of new subsequence 
            else: 
                subSeq = [] 
  
    # return-1 when there is no subsequence  
    if maxLen == 1: 
        return -1
    else: 
        return maxLen 
  
# Driver Code 
sequence = [1, 6, 2, 4, 3, 7] 
print(""LCS is "", findSubsequence(sequence))"
"Create a CSS class that aligns its content left.
",".left-align {
  text-align: left;
}"
"Propose a fast sorting algorithm for a list of integers
","The QuickSort algorithm is a fast sorting algorithm for a list of integers. QuickSort is a divide and conquer algorithm, meaning it divides a list into smaller lists and then sorts and combines the lists. It starts by partitioning the input list around a pivot element, then recursively sorts the two partitions and recombines them. Its average time complexity is O(n log n) with a space complexity of O(n)."
"Given the following matrix, output the corresponding vector form.
[[1,2,3],
[4,5,6],
[7,8,9]]","[1,2,3,4,5,6,7,8,9]"
"Modify the following code to handle an input which is a negative number.
def power_func(number):
    if number >= 0:
        return number**2","def power_func(number):
    if number < 0:
        return ""Invalid input!""
    else:
        return number**2"
"Write a Bash script to check if the number of arguments supplied is equal to 3 or not.
","#!/bin/bash

if [ ""$#"" -eq 3 ]
then 
   echo ""Number of Arguments provided is 3""
else
   echo ""Number of Arguments provided is not 3""
fi"
"Create a python class ""Car"" with fields ""make"" and ""model"".
","class Car:
    def __init__(self, make, model):
        self.make = make
        self.model = model"
"Write an SQL query to retrieve a student's grade from a student table.
SELECT grade FROM student_table","SELECT grade 
FROM student_table;"
"Produce a SQL query to find the names and ages of all students who have a score greater than 95.
","SELECT Name, Age
FROM Student 
WHERE Score > 95;"
"Train a recursive neural network to classify whether a sentence is positive or negative.
","import tensorflow as tf

# Setup the RNN
model = tf.keras.Sequential([
    tf.keras.layers.Embedding(input_dim=vocab_size, output_dim=embedding_dim),
    tf.keras.layers.GRU(32, return_sequences=True),
    tf.keras.layers.Dense(2, activation='softmax')
])

# Compile and fit
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
              
model.fit(x_train, y_train, epochs=5)"
"Reverse a given array without using a loop.
arr = [1,2,3,4]","[4, 3, 2, 1]"
"Edit the following function so that it counts the even numbers in the given array.
arr = [1, 2, 3, 4]","def countEvens(arr):
 count = 0
 for num in arr:
  if num % 2 == 0:
   count += 1
 return count"
"Create an anonymous function that takes two numbers, x and y and returns their product.
","product = lambda x, y: x * y"
"Write a Bash command that outputs the system's date as ""DD-MM-YYYY"".
","date +""%d-%m-%Y"""
"Using the following input and code, edit the code so the output returns a list with only the unique elements from the list.
list1 = [1,2,2,4,4,4,5]","def unique_list(list1):
    unique_list = []
    for x in list1:  
        if x not in unique_list: 
            unique_list.append(x) 
      
    return unique_list

# testing
list1 = [1,2,2,4,4,4,5]
print(unique_list(list1)) # Output: [1, 2, 4, 5]"
"Write a C++ code to generate the Fibonacci sequence from 0 to 100.
","#include <iostream> 
using namespace std; 

int main() 
{ 
    int n = 100; 
  
    int a = 0, b = 1, c; 
  
    cout << a << "" "" << b << "" ""; 
  
    for (int i = 2; i < n; i++) 
    { 
        c = a + b; 
        cout << c << "" ""; 
        a = b; 
        b = c; 
    } 
    return 0; 
}"
"Edit the following HTML code snippet to give the <body> tag the class 'main'.
<html>
    <head>
        <title>Page Title</title>
    </head>
</html>","<html>
    <head>
        <title>Page Title</title>
    </head>
    <body class=""main"">
    </body>
</html>"
"Extract all characters from the following text and store them in a new string.
Hello world!","characters = ""Helloworld!"""
"Describe a method to solve an equation of the form ax + b = 0.
",The equation ax + b = 0 can be solved by subtracting b from both sides and then dividing both sides by a. This will yield the solution x = -b/a.
"Explain the use of semicolon in the following python code.
a = 5; b = 6; c = 7;","The semicolon is used here to separate multiple statements on the same line. In this case, the code is assigning values to variables; by separating these assignments with semicolons, they are all evaluated in a single statement as opposed to writing three separate statements."
"Find the most frequent word from the given list.
['apple', 'mango', 'banana', 'apple', 'orange']","from collections import Counter

words = ['apple', 'mango', 'banana', 'apple', 'orange']
word_counts = Counter(words)
most_frequent = word_counts.most_common(1)
print(most_frequent[0][0]) # prints 'apple'"
"Change the following string to an upper case.
str = 'this is an example of a string'","str_upper = str.upper()
print(str_upper)

# Output:
THIS IS AN EXAMPLE OF A STRING"
"Create a function that takes a 2D array of numerical values and returns the number of times the maximum value appears.
my_array = [[1, 2, 4, 1],
            [2, 3, 3, 2],
            [3, 4, 3, 3]]","def count_max(arr):
    max_val = 0
    count = 0
    for row in arr:
        max_val = max(max_val, max(row))

    for row in arr:
        if max(row) == max_val:
            count += 1
    
    return count"
"Find the sum of the elements in a given list of numbers.
[1, 2, 3, 4, 5]",sum(list_of_numbers)
"Parse the given string and return a dictionary with the keys and corresponding values.
s = ""name seth age 30 occupation manager""","d = {'name': 'seth', 'age': '30', 'occupation': 'manager'}"
"What is the most popular software development language?
","The most popular software development language is currently JavaScript, according to Stack Overflow's 2020 Developer Survey. JavaScript is used by 69.8% of software developers, followed by HTML/CSS at 63.1% and SQL at 54.2%."
"Modify this string in such a way that it should start with ""Hello "" and must end with "" World"".
str = ""World, say hello""","str = ""Hello World"""
"Create a code to print each word of a sentence on a new line
This is a sentence.","def print_sentence(s):
    words = s.split(' ')
    for word in words:
        print(word)
        
s = ""This is a sentence.""
print_sentence(s)

# Output:
# This
# is
# a
# sentence."
"Write a function in Python that takes in two strings and concatenates them together with a space in between.
","def my_concat(string1, string2)
    return string1 + ' ' + string2"
"Usage of Global Variable
",A global variable is a variable that can accessed by any part of a program. It is created outside any function body and can be used without passing it as an argument or declaring it in the function.
"What are lambda expressions in Python?
","Lambda expressions in Python are anonymous functions that can take in arguments and return a value. They are commonly used for performing operations on collections of data, or for making code more concise."
"Name the outlier value in the following array of integer values
arr = [121, 124, 127, 130, 135]",135
"Given an array of integers and an integer target, find all unique combinations of elements from the array that sum up to the target.
arr = [1,2,3,4], target = 7","List<List<Integer>> result = new ArrayList<>();
combinations(arr, target, 0, new ArrayList<Integer>(), result);

private static void combinations(int[] arr, int target, int start_index, ArrayList<Integer> curr, List<List<Integer>> result) {
    if (target < 0 || start_index >= arr.length)
        return;

    if (target == 0) {
        result.add(new ArrayList<>(curr));
        return;
    }

    for (int i = start_index; i < arr.length; i++) {
        curr.add(arr[i]);
        combinations(arr, target - arr[i], i+1, curr, result);
        curr.remove(curr.size() - 1);
    }
}"
"Create a CSS code that demonstrates a nice hover effect for a button.
",".button {
  background: #3498db;
  color: #fff;
  font-size: 1.2em;
  padding: 10px;
  transition: 0.2s;
}

 .button:hover {
  background: #4578ba;
  box-shadow: 0px 0px 5px #ccc;
  transform: scale(1.1);
}"
"Parse a JSON document and display its contents.
","import json

with open('filename.json', 'r') as json_file:
    data = json.load(json_file)

for key, value in data.items():
    print(key, ':', value)"
"Create a function to reverse a string.
s = ""hello world""","""""""
Reverse string
""""""

def reverse_string(s):
    """"""Reverse a given string.
    
    Args:
        s (str): The string to reverse.
        
    Returns:
        str: The reversed string.
    """"""
    return s[::-1]
    
if __name__ == '__main__':
    s = ""hello world""
    print(reverse_string(s))"
"Create a JavaScript function to get the highest value from a given array.
","function getMax(arr) { 
    let max = 0; 
    for(let i = 0; i < arr.length; i++) { 
        if(arr[i] > max) 
            max = arr[i]; 
    } 
    return max; 
}"
"Create a function to calculate the sum of squares x^2 + y^2
","def sum_squares(x, y):
    return x**2 + y**2"
"Using the JavaScript language, write a code snippet to display the current date.
","var today = new Date() 
var date = today.getDate() + ""/"" + (today.getMonth()+1) + ""/"" + today.getFullYear() 
console.log(date)"
"Create a class in Java that assigns a value to a given variable.
String variable = ""Hello world""","public class VariableAssignment {
  private String variable;
  
  public VariableAssignment(String variable) {
    this.variable = variable;
  }
  
  public String getVariable() {
    return variable;
  }
  
  public void setVariable(String variable) {
    this.variable = variable;
  }
}"
"Create a function that given two strings, returns a new string with the characters of the two strings alternating.
('abcd', 'efgh')","def alternating_strings(str1, str2):
    result = """"
    
    for i in range(min(len(str1), len(str2))):
        result += str1[i] + str2[i]
    
    # take care of the rest of the elements
    if len(str1) > len(str2):
        result += str1[len(str1)-1]
    else:
        result += str2[len(str2)-1]
    
    return result"
"Generate a Ruby code to find the reverse of a given string.
","def reverse_string(string)
    return string.reverse
end"
"Create an object in JavaScript that has four properties and four associated values.
","let obj = {
    key1: ""value1"",
    key2: ""value2"",
    key3: ""value3"",
    key4: ""value4""
};"
"Generate a list of all the prime numbers in the range from 0 to the given number n.
","def is_prime(n):
    """"""
    This function will check if a given number is prime or not.
    """"""
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

def generate_list_of_primes(n):
    """"""
    This function will generate a list of all the prime numbers in the range from 0 to the given number n.
    """"""
    primes = []
    for i in range(2, n + 1):
        if is_prime(i):
            primes.append(i)
    return primes"
"Replace NaN values in the given dataframe with a string.
Stored in the form of a Pandas dataframe.
0    1    2    3
a    NaN  b    NaN
4    NaN  5    6","Stored in the form of a Pandas dataframe.
0    1    2    3
a    'NA'  b   'NA'
4    'NA'  5    6"
"Implement a quick-sort algorithm in Python to sort a given array in ascending order.
","def quick_sort(arr): 
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[len(arr) // 2]
        left = [x for x in arr if x < pivot]
        middle = [x for x in arr if x == pivot]
        right = [x for x in arr if x > pivot]
        return quick_sort(left) + middle + quick_sort(right)"
"Given a value, x, write a line of code that converts it from a float to an integer.
x = 25.32",int(x) # result: 25
"Given a set of points and an origin point, calculate the distance between the origin point and each point in the set.
[(1,1),(4,4),(3,3)] (0,0)","""""""
Given a set of points and an origin point, calculate the distance between the origin point and each point in the set
""""""
import math 

def points_distance(points, origin):
    distances = []
    for point in points:
        distances.append(math.sqrt((point[0]-origin[0])**2 + (point[1]-origin[1])**2))
    return distances

if __name__ == '__main__':
    print(points_distance([(1,1),(4,4),(3,3)], (0,0))) # [1.4142135623730951, 5.65685424949238, 4.242640687119285]"
"Generate a code that concatenates a reversed copy of a given string to itself.
Python","def concatenate_reversed(s):
    """"""This function takes a string as input and concatenates a reversed copy of it to itself""""""
    return s + s[::-1]"
"Write an SQL query to fetch the top 5 products with the highest sale prices from a table named 'products'.
",SELECT * FROM products ORDER BY sale_price desc LIMIT 5;
"Optimize the following C code with a faster algorithm.
// C Program to find the minimum element in an array
#include <stdio.h>
int main()
{
   int array[100], minimum, size, c, location = 1;
 
   printf(""Enter the number of elements in array\n"");
   scanf(""%d"",&size);
 
   printf(""Enter %d integers\n"", size);
 
   for ( c = 0 ; c < size ; c++ )
      scanf(""%d"", &array[c]);
 
   minimum = array[0];
 
   for ( c = 1 ; c < size ; c++ )
   {
      if ( array[c] < minimum )
      {
         minimum = array[c];
         location = c+1;
      }
   }
 
   printf(""Minimum element is present at location %d and it's value is %d.\n"", location, minimum);;
   return 0;
}","#include <stdio.h>
int main()
{
   int array[100], minimum, size, c;
 
   printf(""Enter the number of elements in array\n"");
   scanf(""%d"",&size);
 
   printf(""Enter %d integers\n"", size);
 
   for ( c = 0 ; c < size ; c++ )
      scanf(""%d"", &array[c]);
 
   minimum = array[0];
 
   // Optimization
   int start  = 1;
   int end  = size-1;
   while(start <= end){
     int mid = (start + end)/2;
     if(array[mid] < minimum){
       minimum = array[mid];
       end = mid - 1;
     } else {
       start = mid + 1;
     }
   } 
 
   printf(""Minimum element is %d.\n"", minimum);
   return 0;
}"
"Name a built-in function that rounds off a given number to the nearest whole number.
",The built-in function to round off a given number to the nearest whole number is the round() function.
"Write an SQL query to find the products which have not been ordered by any customers.
TABLE products 
Columns: 
* product_id
* name 
* description 
* price 

TABLE order_items 
Columns: 
* order_item_id 
* order_id 
* product_id","SELECT p.product_id, 
       p.name, 
       p.description, 
       p.price 
FROM products p 
LEFT JOIN order_items oi
ON p.product_id = oi.product_id
WHERE oi.product_id IS NULL"
"Replace the ""TODO"" comment in the following Python statement with an appropriate value.
count = 0
# TODO: add 1 to count","count = 0
count += 1"
"Write a C# program to interchange the elements of the first and last columns of a given matrix.
int[,] matrix = { { 11, 21, 31, 41 }, { 12, 22, 32, 42 }, { 13, 23, 33, 43 } };","for (int i = 0; i < matrix.GetLength(0); i++)
{
    int temp = matrix[i, 0];
    matrix[i, 0] = matrix[i, matrix.GetLength(1)-1];
    matrix[i, matrix.GetLength(1)-1] = temp;
}"
"Develop a code to sort a list in ascending or descending order.
givenList: [5, -3, 2, 4, 0], sortOrder: ""ascending""","def sort_list(givenList, sortOrder): 
    for i in range(len(givenList)): 
        for j in range(i + 1, len(givenList)):
            if sortOrder == ""ascending"":    
                if givenList[i] > givenList[j]:
                    givenList[i], givenList[j] = givenList[j], givenList[i] 
            elif sortOrder == ""descending"":    
                if givenList[i] < givenList[j]:
                    givenList[i], givenList[j] = givenList[j], givenList[i]
    return givenList"
"Parse a string containing the date in the format: ""YYYY-MM-DD""
date = ""2021-10-15""","def parse_date(date):
    year, month, day = date.split('-')
    return (year, month, day)

date_tuple = parse_date(date)
print(date_tuple) # output = ('2021', '10', '15')"
"How does a hash table work?
",A hash table is a data structure that stores data items in an associative array where the key is used to quickly search for the data item. It is based on the concept of hashing which converts a key into an address in the array. Each address points to the data item associated with that key. The hash table offers fast lookup times by using hashing functions which are designed to spread data evenly over the table.
"Write a Python loop to find the number of elements in a given list that are between 0 and 10 (inclusive).
array = [3, 7, 11, 15]","def count_elements(array):
 count = 0 
 for item in array:
 if 0 <= item <= 10:
 count += 1
 return count"
"Classify the following collection of HTML tags into four categories.
<ul>, <div>, <span>, <h1>","Block level elements: <div>, <h1>
Inline level elements: <ul>,<span>
Grouping elements: <ul> 
Text level elements: <span>"
"Compare the features of Mercurial and Git.
","Mercurial and Git are both distributed version control systems, meaning that all users have a complete copy of the repository. Both are extremely fast, with Git being slightly faster than Mercurial. Mercurial has a few advantages over Git, such as better merging capabilities, sophisticated branch management, and better backwards compatibility. Git, on the other hand, has some advantages over Mercurial in terms of speed and lightweight branching, as well as a larger user base. 

Ultimately, the choice depends on the specific needs of the user or organisation."
"Create a PHP class called ""Car"" with public member variables.
","class Car {
 public $make;
 public $model;
 public $color;
 public $year;

 public function __construct($make, $model, $color, $year)
 {
  $this->make = $make;
  $this->model = $model;
  $this->color = $color;
  $this->year = $year;
 }
}"
"Create a PHP function to print the first 1000 prime numbers.
","<?php 
   function printPrimes() 
   { 
       $n = 2; 
       while (1000--) 
       { 
           $isPrime = 1;  
           for ($i = 2 ; $i <= sqrt($n); $i++) 
           {  
               if ($n % $i == 0) 
               { 
                   $isPrime = 0;  
                   break; 
               } 
           } 
           if ($isPrime) 
               echo ""$n "";  
           $n++;   
       } 
   } 
   printPrimes(); 
?>"
"Create a program that reads a string input and replaces all instances of a word with a given replacement
Original string = ""Merry Christmas everyone, what a lovely day!"" Replacement word = ""Happy""","def replace_word(originalString, replacementWord): 
    return originalString.replace('Christmas', replacementWord)
# Output: ""Merry Happy everyone, what a lovely day!"""
"Transform the following array into a string of comma-separated values in Python.
[1, 2, 3, 4]","','.join([str(i) for i in [1, 2, 3, 4]]) # returns ""1,2,3,4"""
"Construct a for loop in Java which will iterate through an array and print each item in a new line.
int[] arr = {1, 2, 3, 4, 5};","for (int i = 0; i < arr.length; i++) {
    System.out.println(arr[i]);
}"
"Create a regex expression to extract names from the following sentence: ""John, Jessica and David went to the store.""
","\b[A-Z][a-z]+(?:,[\sA-Z][a-z]+)*"
"Print all the permutations of a given list
[1, 2, 3]","def permute(lis):
    if len(lis) == 0:
        return [] 
    if len(lis) == 1:
        return [lis] 
  
    l = [] 
    for i in range(len(lis)):
        m = lis[i] 
  
        remLis = lis[:i] + lis[i+1:] 
  
        for p in permute(remLis): 
            l.append([m] + p) 
    return l 

list1 = [1, 2, 3]
result = permute(list1) 
for i in result: 
    print(i)"
"Write a SQL statement that selects the name, age and gender of every student in the database with age greater than 18.
","SELECT name, age, gender FROM students WHERE age > 18;"
"Construct a class that can be used to check if the braces in an expression are balanced.
expression = ""[(}{)]""","class BalancedBraces: 
    
    def checkBalanced(self, expression):
        s = []
        for i in expression:
            if i == '(' or i == '[' or i == '{': 
                s.append(i)
            elif i == ')' or i == ']' or i == '}':
                if len(s) > 0 and (
                (i == ')' and s[len(s)-1] == '(')or 
                (i == ']' and s[len(s)-1] == '[')or 
                (i == '}' and s[len(s)-1] == '{')):
                    s.pop()
                else:
                    return False
        return len(s) == 0"
"Compile a C program to check for memory leaks.
#include <stdio.h>

int main() {
  int* a = (int*)malloc(sizeof(int));
  return 0;
}",g++ -g -o program program.c -lm -lstdc++ && valgrind --leak-check=yes ./program
"Create a web service for sending a daily email reminder.
","import smtplib
from email.mime.text import MIMEText

# write your code here
def send_email(recipient, message):
 sender_email = ""<your@email.com>""
 sender_name = ""Daily Reminder""

 # create the message
 msg = MIMEText(message)
 msg['Subject'] = 'Daily Reminder'
 msg['From'] = sender_name + ' <' + sender_email + '>'
 msg['To'] = recipient

 # send the message
 server = smtplib.SMTP('<smtp_server_address>')
 server.starttls()
 server.login(sender_email, '<sender_password>')
 server.send_message(msg)
 server.quit()"
"Create a function to remove the second largest element in a given array.
arr = [5, 4, 2, 1, 3]","def remove_second_largest(arr): 
    max_arr = max(arr) 
    arr.remove(max_arr) 
    return max(arr)"
"Write a Java program that prints all integers between 30 & 50 (inclusive).
","public class PrintIntegers 
{
    public static void main(String[] args)
    {
        for(int i=30; i<=50; i++)
        {
            System.out.println(i);    
        }
    }
}"
"Create a function that will take a string as an input and returns the number of upper case letters in it.
","def countUpperCase(string):
    # Initialize counter variable
    count = 0

    # Loop through characters in string
    for c in string:
        # If character is upper case increment counter
        if c.isupper():
            count += 1

    return count"
"Write a Python code to initialize a 10 x 10 matrix with random values.
","import random

def init_matrix():
    matrix = [[0 for _ in range(10)] for _ in range(10)]
    for i in range(len(matrix)):
        for j in range(len(matrix[0])):
            matrix[i][j] = random.randint(0,100)
    return matrix"
"Read the following text and use a regular expression to extract email addresses.
Please contact john@example.com and lisa@mail.com for more information.","/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|""(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/"
"Write a lambda expression to find the maximum value of two numbers.
","maximum = lambda num1, num2: num1 if num1 > num2 else num2"
"Construct a SQL query to group students by the grade they got, and calculate the average score.
","SELECT grade, AVG(score) 
FROM students 
GROUP BY grade"
"Compute the sum of two numbers, 5 and 7, using Scala
","val sum = 5 + 7
println(sum)"
"Write a function to produce a copy of an array
[1, 2, 3, 4]","def copy_array(arr): 
    new_arr = list(arr) 
    return new_arr"
"Suggest an appropriate way to select the last element of a given list in Python.
",list[-1]
"Write code to output the sum of the numbers 1-100.
","def sum_nums(n):
    total = 0
    for i in range(1,n+1):
        total += i
    return total

print(sum_nums(100))"
"Write a code snippet in Python for converting Unix timestamp to date and time.
1594102055","import datetime
 
# Unix timestamp
unix = 1594102055
 
# Convert Unix timestamp to Date
date_time = datetime.datetime.fromtimestamp(unix).strftime('%Y-%m-%d %H:%M:%S')
 
print(""Date & Time (UTC):"", date_time)"
"Create a hash function that assigns a unique number to each character of the input string.
Hello World","// Create a Hash Table 
let hashTable = {};
 
// Create a hash function 
function createHash(str) {
 
    for (let i = 0; i < str.length; i++) {
        // Assign a unique number to each character present in the string 
        hashTable[str.charAt(i)] = i; 
    }
    // Return the hash table 
    return hashTable; 
}"
"What is the command to print all the characters in a given string?
","for c in string:
    print(c)"
"Generate a new list with all the even numbers from the given list
my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","# Generating a new list with all the even numbers from the given list

def get_even_numbers(input_list):
  even_numbers = []
  for num in input_list:
    if num % 2 == 0:
      even_numbers.append(num)
  return even_numbers

my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(get_even_numbers(my_list))

# Output: [2, 4, 6, 8, 10]"
"Write an R script to compute the sum of all the elements of a given list.
list = c(1, 2, 3, 4, 5)","sum <- 0

for(i in list){
  sum <- sum + i
}

print(sum)

# Output: 15"
"Create a SQL query to retrieve the first name of each customer.
Table name = Customer",SELECT first_name FROM Customer;
"Design a class in Java to represent a student, with their name and grade fields.
","public class Student {

    String name;
    String grade;

    public Student(String name, String grade) {
        this.name = name;
        this.grade = grade;
    }

    public String getName() {
        return this.name;
    }

    public String getGrade() {
        return this.grade;
    }

}"
"Write a C++ program to create a linked list of length 5.
","#include <iostream>

using namespace std;

struct Node{
    int data;
    Node *next;
};

Node *head = NULL;

void createList(int n)
{
    Node *newNode, *temp;
    int data, i;

    head = new Node;

    if(head == NULL)
    {
        cout<<""Memory allocation failed\n"";
    }
    else
    {
        cout<<""Enter the value of node 1: "";
        cin>>data;

        head->data = data;
        head->next = NULL;

        temp = head;

        for(i=2; i<=n; i++)
        {
            newNode  = new Node;

            if(newNode == NULL)
            {
                cout<<""Memory allocation failed\n"";
                break;
            }
            else
            {
                cout<<""Enter the data of node ""<<i<<"": "";
                cin>>data;

                newNode->data = data;
                newNode->next = NULL;

                temp->next = newNode;
                temp = temp->next;
            }
        }
    }
}"
"Explain what the following line of code does.
a %= b","This line of code assigns the remainder of a divided by b to a, so that the resulting value of a is the remainder of a divided by b. For example, if a is 10 and b is 3, the value of a after executing this line of code would be 1 (the remainder of 10 divided by 3)."
"Extract all values from the following dictionary:
{'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9] }","myDict = {'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9]}
values = [val for vals in myDict.values() for val in vals]
print(values)"
"Write a HTML form to take in two user inputs and display their sum.
","<html>
  <body>
    <form>
      Enter Number 1: <input type=""text"" name=""num1"" /> <br />
      Enter Number 2: <input type=""text"" name=""num2"" /> <br />
      <input type=""submit"" value=""Submit"" />
    </form>
    <script>
      function calculateSum() {
        let num1 = document.forms[""form""][""num1""].value;
        let num2 = document.forms[""form""][""num2""].value;
        document.write(""Sum of the two numbers is: "" + (num1 + num2));
      }
    </script>
  </body>
</html>"
"Modify the following code to compute the sum of squares of the numbers from k to n.
def sum(k, n):
    sum = 0
    for i in range(k, n+1):
        sum += i
    return sum","def sum_squares(k, n):
    sum = 0
    for i in range(k, n+1):
        sum += i**2
    return sum"
"Generate a code to make all the elements of a list positive.
","def make_positive(lst): 
    return [abs(x) for x in lst]"
"Determine the average of 3 numbers.
30, 20, 60",The average of the 3 numbers is 36.
"Write a Python script that takes a string as input and outputs a string with the same characters in reverse order.
hello","def reverse_string(str):
  return str[::-1]

print(reverse_string('hello'))"
"Update the following code to fix a syntax error.
def add_two_number(a,b):
    return a + b;","def add_two_numbers(a, b):
    return a + b"
"In C++, write a function to allocate memory for an array of integers.
size = 5","// C++ program to allocate memory for an array of integers 

#include<iostream> 
using namespace std; 
  
int* allocatearray(int size) 
{ 
    // Allocate memory for given number of integers 
    int *ptr = new int[size]; 
  
    // Initialize the array 
    for (int i = 0; i < size; i++) 
        ptr[i] = i+10; 
  
    return ptr; 
} 
  
// Main function 
int main() 
{ 
    int size = 5; 
    int *ptr = allocatearray(size); 
  
    cout << ""Array elements are ""; 
    for (int i = 0; i < size; i++) 
        cout << ptr[i] << "" ""; 
  
    cout << endl; 
  
    delete[] ptr; 
  
    return 0; 
}"
"What is the syntax of creating a variable in Java?
","The syntax for creating a variable in Java is:
<data_type> <variable_name> = <variable_value>;

For example:

int myVar = 5;"
"Write a Java code snippet to swap two given values.
int a = 10;
int b = 20;","int temp = a;
a = b;
b = temp;"
"Merge two dictionaries into another dictionary
dict1 = {'a':1, 'b':2}
dict2 = {'c':3, 'd':4}","def merge(dict1, dict2):
    """"""
    Function to merge two dictionaries
    """"""
    return {**dict1, **dict2}

if __name__ == '__main__':
    dict1 = {'a':1, 'b':2}
    dict2 = {'c':3, 'd':4}
    print(merge(dict1, dict2))
    # should print {'a': 1, 'b': 2, 'c': 3, 'd': 4}"
"Write a permutation function which takes a given string and returns all the possible permutations.
""abc""","function permutate(str){
  if (str.length <= 1) {
    return str;
  } 
  let permutations = []; 
  for (let i = 0; i < str.length; i++) {
    let char = str[i];
    // excluding the character from the string
    let remainingString = str.slice(0, i) + str.slice(i + 1, str.length);
    // recursively call the function
    for (let subPermutation of permutate(remainingString)) {
      permutations.push(char + subPermutation);
    }
  }
  return permutations;
}

const possiblePermutations = permutate(""abc"");

// Output: [""abc"", ""acb"", ""bac"", ""bca"", ""cab"", ""cba""]"
"Create a virtual environment with Python version 2.7.
","pip install virtualenv
virtualenv -p python2.7 venv
source venv/bin/activate"
"Generate a random 8 character password using the following conditions:
","import random
import string

def generatePassword():
    chars = string.ascii_letters + string.digits + '!@#$%^&*/.:?|'
    size = 8
    random_string = """".join(random.choice(chars) for _ in range(size))
    return random_string

random_password = generatePassword()
print(random_password) # qr6.h^37"
"Create a MySQL query to find all users whose first name is 'John' and last name is 'Doe'.
",SELECT * FROM users WHERE first_name = 'John' AND last_name = 'Doe';
"Create a SQL query to get all the information about the employees with salary between $50,000 and $75,000.
",SELECT * FROM employee WHERE salary BETWEEN 50000 and 75000;
"Create a linked list with the following elements: 5, 6, 7, 8.
","class Node: 
    def __init__(self, data): 
        self.data = data
        self.next = None

class LinkedList:

    def __init__(self):  
        self.head = None

    def append(self, data):
        new_node = Node(data)

        if self.head == None:
            self.head = new_node
        else:
            curr = self.head
            while curr.next != None:
                curr = curr.next
            curr.next = new_node

list = LinkedList() 
list.append(5) 
list.append(6) 
list.append(7) 
list.append(8)"
"Create a program to calculate the total marks of a student.
Marks of 5 Subjects:
English: 35
Maths: 88
Chemistry: 70
Physics: 45
Computer: 80","def calculate_total(marks):
    total = 0
    for mark in marks:
        total += mark
    return total

scores = {
    ""English"": 35,
    ""Maths"": 88,
    ""Chemistry"": 70,
    ""Physics"": 45,
    ""Computer"": 80
}

total_marks = calculate_total(scores.values())
print(total_marks) # Output: 328"
"Create a function in C++ that capitalizes the first letter of every word in a given string.
","#include <iostream>
#include <string>

std::string capitalize(std::string s)
{
 std::string result;
 for (int i = 0; i < s.length(); i++) {
 if (i == 0 || s[i - 1] == ' ')
 result += toupper(s[i]);
 else
 result += s[i];
 }
 return result;
}"
"Create a two-dimensional array in Java with values corresponding to the given output.
Output: [4, 6, 10]","int[][] arr = {{4, 6, 10}};"
"Visit the API documentation and create code to make a POST request using Python.
","import requests 
  
data = {'name': 'John Doe', 'age': '25'} 
  
headers = {'Content-type': 'application/x-www-form-urlencoded', 'Accept': 'text/plain'} 
  
response = requests.post('https://example.com/api/v1/data', data=data, headers=headers)"
"Identify the type of input that is required for this Python function.
def get_sum(a, b):
    # return the sum of two numbers","The type of input required for this Python function is two numerical values (for example, integers or floats)."
"Modify the function to return the least common multiple instead.
","def lcm(a, b): 
    return (a*b) // gcd(a, b)"
"Write a JavaScript code snippet to highlight the text 'Welcome' in the following string.
const string = ""Welcome to my website!""","const string = ""Welcome to my website!"";

const highlightString = (str, highlight) => {
  const startStringIndex = str.indexOf(highlight);
  return (
    str.slice(0, startStringIndex) +
    ""<span class='highlight'>"" +
    str.slice(startStringIndex, startStringIndex + highlight.length) +
    ""</span>"" +
    str.slice(startStringIndex + highlight.length)
  );
};

document.body.innerHTML = highlightString(string, ""Welcome"");"
"Create a JSON string containing the data below
user_id: 12345, name: John Doe, age: 41","{""user_id"": 12345, ""name"": ""John Doe"", ""age"": 41}"
"Construct a RegEx pattern to identify a number followed by three uppercase letters.
",^[0-9][A-Z]{3}$
"Given an array of strings, sort the strings alphabetically.
array = [""Banana"", ""Apple"", ""Orange""]","def sort_strings(array):
    return sorted(array)"
"Create a bash script that asks a user to type in their name and prints out ""Hello <name>""
","#!/bin/bash

echo ""Please enter your name:""
read name
echo ""Hello $name!"""
"Write a shell script to detect the internet speed and display it in the terminal.
","#!/bin/bash
 
# This script shows the internet speed
 
# Get deivce interface
interface=$(ip route list | grep default | cut -d' ' -f5)
 
# Get download speed
download=$(curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -  | grep Download | cut -d':' -f2 | cut -d' ' -f2)
 
# Get upload speed
upload=$(curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -  | grep Upload | cut -d':' -f2 | cut -d' ' -f2)
 
# Echo the results
echo ""Device: $interface""
echo ""Download speed: $download""
echo ""Upload speed: $upload"""
"Create a Swift class named ""MyClass"" that contains two int properties and one function. The function should return the sum of the two properties.
","class MyClass {
  var num1: Int
  var num2: Int
  
  func sum() -> Int {
    return num1 + num2
  }
}"
"Create a SQLite query to find the sum of the column ""price"" in a table called ""orders"".
","SELECT SUM(price) AS total_sum
FROM orders;"
"Swap the elements at index 2 and 4.
arr = [1, 3, 5, 6, 8]","arr = [1, 3, 5, 6, 8]

arr[2], arr[4] = arr[4], arr[2]
print(arr)"
"Offer a solution for converting a bank of binary strings, represented as an array, to Decimal numbers.
","def binaryToDecimal(binary): 
    # to store decimal number 
    decimal, i = 0, 0
    while(binary != 0): 
        dec = binary % 10
        decimal = decimal + dec * pow(2, i) 
        binary = binary//10
        i = i + 1
    return decimal"
"Create an HTML page that has a table and populates the table with the given data.
Country  |  Capital

India    |  New Delhi
United States | Washington DC
Canada   |  Ottawa","<!DOCTYPE html>
<html>
 <head>
  <title>Country and Capital Table</title>
 </head>
<body>
 <h1>Country and Capital Table</h1>
 <table>
  <tr>
   <th>Country</th>
   <th>Capital</th>
  </tr>
  <tr>
   <td>India</td>
   <td>New Delhi</td>
  </tr>
  <tr>
   <td>United States</td>
   <td>Washington DC</td>
  </tr>
  <tr>
   <td>Canada</td>
   <td>Ottawa</td>
  </tr>
 </table>
</body>
</html>"
"Implemet a JavaScript function to print all the leap year between 2014 and 2050.
","function leapYears() {
	for (let year = 2014; year <= 2050; year++) {
		if (year % 4 == 0) {
			console.log(year);
		}
	}
}

leapYears();"
"Generate pseudocode to solve the Fibonacci sequence.
","Function Fibonacci(n)
  Declare f0, f1, fn
  f0 = 0
  f1 = 1

  if n = 0
    fn = f0
  else if n = 1
    fn = f1
  else
    for i = 2 to n
      fn = f0 + f1
      f0 = f1
      f1 = fn
    end for

    return fn
End Function"
"Create a C++ program to create a triangle with an area of 10.
","#include <iostream>
#include <math.h>
using namespace std;
 
int main()
{
    float area, s, a, b, c;
  
    // caluculate the semi-perimeter
    s = (a + b + c) / 2;
  
    // calculate the area 
    area = sqrt(s * (s - a) * (s - b) * (s - c));
  
    // check whether triangle is possible or not
    if (area > 0)
    {
    cout << ""Area of triangle is "" << area;
    }
    else
    cout << ""Triangle is not possible."";
      
    return 0;
}"
"Write an assembly language program to print ""Hello, World!""
","section .data
msg	 db 'Hello, World!', 10
len	 equ $ - msg
	
section .text
global _start ;must be declared for linker (ld)

_start:		;tells linker entry point

	mov edx,len ;message length
	mov ecx,msg ;message to write
	mov ebx,1	;file descriptor (stdout)
	mov eax,4	;system call number (sys_write)
	int 0x80	;call kernel

	mov eax,1	;system call number (sys_exit)
	int 0x80	;call kernel"
"Create a HTML page to display the top 5 scores from a given array.
An array with 10 elements [7, 8, 10, 3, 2, 9, 5, 1, 6, 4]","<html>
  <head>
    <title>Top 5 scores</title>
  </head>
  <body>
    <h1>Top 5 scores</h1>
    <ul>
      <li>10</li>
      <li>9</li>
      <li>8</li>
      <li>7</li>
      <li>6</li>
    </ul>
  </body>
</html>"
"Add a parameter to the function to calculate the area of a triangle.
def calculate_area(length, width):
 return length * width","def calculate_area(length, width, height):
 return 0.5 * (length * width + length * height + width * height)"
"Create an array with 10 integers from 0 to 9, where each number appears only once.
","let arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];"
"Transform the following piece of code into a shorter version
if (x > 0 && x < 10) {
  return true;
} else {
  return false;
}",return (x > 0 && x < 10);
"Design a GUI app to welcome the user and output a message
","import tkinter as tk 

window = tk.Tk()
window.title(""Welcome App"") 

frame = tk.Frame(window) 
frame.grid(row=0, column=0) 

label = tk.Label(frame, text=""Welcome"", font=(""Arial"", 40))
label.grid(row=0, column=0) 

message = tk.Message(frame, text=""Hello user!"", width=1000)
message.grid(row=2, column=0)  

window.mainloop()"
"Write a style rule to apply a border on the first and last elements of the document.
","*:first-child, *:last-child {
   border: 1px solid black;
}"
"Write a code to convert a given list of strings to uppercase.
mylist = [""hello"",""world""]","""""""
Write a code to convert a given list of strings to uppercase
""""""

# List containing the strings
mylist = [""hello"",""world""]

# Converting the list of strings to uppercase
upper_list = [string.upper() for string in mylist]
 
# Printing the new list
print(""List with strings in uppercase is"", upper_list)"
"Write Pseudocode for a simple sorting algorithm that sorts an input array.
[3, 5, 8, 2, 7]","FUNCTION Sort(input)
  SET i to 0
  WHILE i < LENGTH OF input
    SET max to i
    SET j to i + 1
    WHILE j < LENGTH OF input
      IF input[j] > input[max] THEN
        SET max to j
      END IF
      SET j to j + 1
    END WHILE
    IF max != i THEN
      SWAP input[i] with input[max]
    END IF
    SET i to i + 1
  END WHILE 
RETURN input
END FUNCTION"
"Explain the role of the ""break"" keyword in a switch statement in Java.
","The ""break"" keyword is used in a switch statement to terminate the switch block. When it is encountered, the code execution jumps to the line immediately after the switch block. It is also used to exit out of a loop if a certain specified condition is met."
"Construct a query in SQL to find out how many users have the same name.
","SELECT name, COUNT(*) 
FROM users 
GROUP BY name 
HAVING COUNT(*) > 1;"
"Create an HTML table with a header row and two columns.
","<table>
 <tr>
    <th>Column 1</th>
    <th>Column 2</th> 
 </tr>
</table>"
"Compare and contrast SQL and NoSQL databases.
","SQL databases store data in predefined tables and use structured query language (SQL) for querying the data. In contrast, NoSQL databases are designed to store large amounts of unstructured data and are commonly used for distributed data processing. Unlike SQL, NoSQL databases are known for their flexibility and scalability, since they do not require a fixed schema. They also offer a cost-effective alternative to traditional relational databases when large amounts of data must be processed."
"Make the following SQL query return at least one row.
SELECT * FROM Student WHERE Name=""John""","SELECT * FROM Student WHERE Name=""John"" OR Name=""john"""
"Using the given NumPy array, print out all the elements that are greater than 5.
import numpy as np

arr = np.array([4, 6, 2, 8, 0, 7, 5])","import numpy as np

arr = np.array([4, 6, 2, 8, 0, 7, 5])

print(""Elements greater than 5:"")
for element in arr:
 if element > 5:
 print(element)"
"How would you use the ternary operator for comparing two values in JavaScript?
",The ternary operator can be used to compare two values in the following way: (condition) ? (value if condition is true) : (value if condition is false);
"Organize the following array of objects in ascending order by the 'name' field.
[ 
  { name: 'Jill', lastname: 'Smith' }, 
  { name: 'Bob', lastname: 'Jones' },
  { name: 'Jack', lastname: 'Bauer' }
]","let arr = [ 
  { name: 'Jill', lastname: 'Smith' }, 
  { name: 'Bob', lastname: 'Jones' },
  { name: 'Jack', lastname: 'Bauer' }
];

arr.sort((a, b) => (a.name > b.name) ? 1 : -1);
  
console.log(arr);"
"Write a JavaScript code snippet to filter an array to retain only the strings in the array that start with ""A"".
Array: [""Apple"", ""Banana"", ""Orange"", ""Apple Pie""]",const result = array.filter(s => s.startsWith('A'));
"How many lines of code are required to generate a Fibonacci sequence up to the n-th number?
","The number of lines of code required to generate a Fibonacci sequence up to the n-th number is 3: one line to set the conditions, one line for the base case, and one line of the recursive loop. This does not include any lines for printing the result."
"Write a JavaScript program to find the greatest common divisor (GCD) of two given positive numbers.
x = 18
y = 12","function gcd(x, y)  { 
	if (y == 0)  
		return x; 
	else
		return gcd(y, x % y); 
}	 

console.log(gcd(18, 12));"
"Generate a code to capitalize the first letter of each word of a given sentence.
text = ""This is a sample sentence.""","def capitalize_first_letter(text):
    words = text.split(' ')
    capitalized_words = [word[0].upper() + word[1:] for word in words]
    return ' '.join(capitalized_words)

text = ""This is a sample sentence.""
capitalized_text = capitalize_first_letter(text)
print(capitalized_text) # Output: This Is A Sample Sentence."
"Create a program in python to find the longest common contiguous subarray between two integers.
int arr1[7] = {1,2,4,4,4,4,7}
int arr2[5] = {1,4,4,5,5}","def long_com_subarr(arr1, arr2):
    len1 = len(arr1)
    len2 = len(arr2)
    res = 0
    count = 0 
    
    for i in range(len1):
        for j in range(len2):
            if arr1[i] == arr2[j]:
                count += 1
            else: 
                if result < count:
                    res = count
                count = 0
    
    return res"
"Construct a machine learning model to classify a given dataset into two class labels.
Dataset","Using a dataset with two class labels (e.g., yes/no, 0/1, etc.), a machine learning model can be constructed, for example, by using a Support Vector Machine (SVM) method with a suitable kernel. The inputs to the model would be the features from the dataset and the output would be the predicted class labels. The SVM algorithm would be trained with the input dataset and the class labels, and then tested with a test dataset to measure the accuracy of the model."
"Write an SQL query to select one row from a table where two conditions are met.
Table: ‘products’ 
Condition 1: category is ‘clothing’ 
Condition 2: rating is greater than 3","SELECT * FROM products
WHERE category = 'clothing'
AND rating > 3
LIMIT 1;"
"Create a program that can calculate the distance between two points in three-dimensional space.
point1 = (1, 5, 9)
point2 = (4, 2, 8)","def dist_points_3d(point1, point2):
    """"""Calculate the distance between two points in three-dimensional space.""""""
    distance = ((point1[0] - point2[0]) ** 2 + 
                (point1[1] - point2[1]) ** 2 + 
                (point1[2] - point2[2]) ** 2) ** 0.5
    return distance"
"Suggest an optimisation algorithm for a minimisation problem
",A suitable optimisation algorithm for a minimisation problem is Gradient Descent. Gradient Descent works by calculating the gradient of the cost function with respect to the input variables. This gradient is then used to update the input variables in order to reduce the cost. The process is repeated until an optimum value is reached.
"Write a code to delete the 4th element from the list.
mylist = [1, 2, 3, 4, 5]","mylist = [1, 2, 3, 4, 5]
del mylist[3]
print(mylist)"
"Edit the following code to make it run without errors.
def squared(num):
    return num * num
 
num = 5
print(squared(5)","def squared(num):
    return num * num
 
num = 5
print(squared(5))"
"Write a Python snippet to print from 1 to 10 (inclusive) using a for loop
","for i in range(1, 11):
  print(i)"
"Construct a regular expression to detect a valid IP address in a user input.
",^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
"Find all local maxima in the given list.
list_vals = [1, 2, 3, 4, 5, 2, 1]","[3, 4, 5]"
"Write a Rust program to take an array of integers and print the sum of the elements in the array.
","fn main() {
    let numbers = [1, 4, 6, 8];

    let sum = 0;
    for num in numbers.iter() {
        sum += num;
    }

    println!(""The sum of the elements in the array is {}"", sum);
}"
"Modify the given code to multiply each element in the list by 5.
lista = [3, 4, 6, 7]","lista = [x * 5 for x in [3, 4, 6, 7]]"
"Create a new Python dictionary with numbers 1-10 as keys and their corresponding squares as values.
","squares = {1:1, 2:4, 3:9, 4:16, 5:25, 6:36, 7:49, 8:64, 9:81, 10:100}"
"Modify the below code so that it swaps two variables without the use of a temporary variable.
int a = 10, b = 20; 
int temp; 
temp = a; 
a = b; 
b = temp;","int a = 10, b = 20; 
a = a + b; 
b = a - b;
a = a - b;"
"Write Python code to fill missing values in a Pandas dataframe with a given value.
import pandas as pd

df = pd.DataFrame([
    [8, 'B', 'G'],
    [28, 'B', np.nan],
    [22, np.nan, 'G'],
    [2, 'A', np.nan] 
])","import pandas as pd

df = pd.DataFrame([
    [8, 'B', 'G'],
    [28, 'B', np.nan],
    [22, np.nan, 'G'],
    [2, 'A', np.nan] 
])

df.fillna(value='NA', inplace=True)"
"Create a web server in Node.js.
","const http = require('http');

const hostname = '127.0.0.1';
const port = 3000;

const server = http.createServer((req, res) => {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/plain');
  res.end('Hello World\n');
});

server.listen(port, hostname, () => {
  console.log(`Server running at http://${hostname}:${port}/`);
});"
"Generate an HTML page with the following data fields: title, author, and content.
title: Generating HTML page
author: GPT
content: This is an example of how you can generate an HTML page.","<html>
<head>
    <title>Generating HTML Page</title>
    <meta name=""author"" content=""GPT"" />
</head>
<body>
<p>This is an example of how you can generate an HTML page.</p>
</body>
</html>"
"Write a regular expression to match all valid UK postcodes.
","^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9]?[A-Za-z]))))[0-9][A-Za-z]{2})$"
"Construct code to compute the average height from a list of heights.
heights = [170, 140, 160, 180, 160]","sum_heights = 0
for height in heights:
    sum_heights += height
avg_height = sum_heights/len(heights)"
"Create an array variable in JavaScript for storing song names.
",let songNames = [];
"Create a MySQL query to get the name corresponding to the highest id.
","SELECT name
FROM table
ORDER BY id DESC
LIMIT 1"
"Write a Bash script for creating a directory and its subdirectories.
","#!/bin/bash
 
DIR=""example""
mkDIR -p ""$DIR/subdir1/subdir2"""
"Write a CSS rule to set font-size of an element to 20px
","CSS Rule: 
{
  font-size: 20px;
}"
"Modify the code to perform the mathematical expression “x to the power of y”.
# Calculate x to the power of y
# TODO","# Calculate x to the power of y
x_pow_y = x**y"
"Write a code snippet using Python to pop an element from a list.
some_list = [1, 2, 3]",some_list.pop() # pops 3
"Name four different types of sorting algorithms.
","The four different types of sorting algorithms are Selection sort, Bubble sort, Insertion sort and Merge sort."
"Check if the input string contains both number and alphabets and return true if it does.
str = ""hello123""","if re.search('[a-zA-Z]', str) and re.search('[0-9]', str): 
    print(True) 
else: 
    print(False)"
"Write a Python program to calculate the number of bits needed to represent an integer in binary form.
","def num_of_bits(num):
    return len(bin(num)[2:])

if __name__ == '__main__':
    print(num_of_bits(50))"
"Write a Python function to count the letters in a given sentence and return a dictionary of letter counts.
sentence = ""Hello World!""","def letter_counts(sentence):
  count_dict = {}
  for char in sentence:
    if char.isalpha():
      if char in count_dict:
        count_dict[char] += 1
      else:
        count_dict[char] = 1
  return count_dict"
"Write a SQL query to find the names of the top 10earning authors.
SELECT Name
FROM Authors
ORDER BY earnings DESC
LIMIT 10",The top ten earning authors are: [Names]
"Create a program to detect if an array contains duplicate values
","def is_duplicate_array(arr): 
    return len(arr) != len(set(arr))"
"Generate a sequence of strings according to the following pattern:
","my_list = []
for i in range(1, 10):
    my_list.append(str(i) + ""abc"")

print(my_list)"
"Implement a search algorithm to search a node in a binary search tree.
","def search(node, key):
   if node is None or node.key == key:
        return node
 
   if node.key < key:
        return search(node.right, key)
 
    return search(node.left, key)"
"Write a SQL query to select customers who have an email address ending with "".com"".
","SELECT *
FROM customers
WHERE email LIKE '%.com'"
"Create a calculator program using Python to do the following calculations.
A = 30;
B = 15;
C = 4;","def calculator(A, B, C):
    add = A + B
    subtract = A - B
    multiply = A * C
    divide = A / B
    remainder = A % B
    return add, subtract, multiply, divide, remainder"
"Output the numbers which are divisible by both 10 and 15 from a list of numbers.
number_list = [10, 15, 20, 25, 30, 35, 40]","def divisible_by_10_15(number_list):
    divisible_numbers = []
    for num in number_list:
        if num % 10 == 0 and num % 15 == 0:
            divisible_numbers.append(num)
    return divisible_numbers
    
if __name__ == '__main__':
    number_list = [10, 15, 20, 25, 30, 35, 40]
    print(divisible_by_10_15(number_list))"
"Create a function that takes a list and removes duplicates of the same element.
myList4 = [1,2,2,3,3,3]","def removeDuplicate(myList4):
    result = []
    for x in myList4:
        if x not in result:
            result.append(x)
    return result

removeDuplicate = removeDuplicate(myList4)
print(removeDuplicate)"
"Create a SQL query to select customers who have spent more than $1000 in the last month.
","SELECT customerId 
FROM orders 
WHERE orderDate > DATE_SUB(CURDATE(), INTERVAL 1 MONTH) 
    AND total > 1000"
"Can you parse a given URL and extract the domain name?
","def get_domain(url):
    parsed_url = urllib.parse.urlparse(url)
    return parsed_url.netloc"
"Write a loop to iterate through the following array and prints each element.
arr = [1, 2, 3, 4, 5]","arr = [1, 2, 3, 4, 5];

for (let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
}"
"How can you use a HTML Id attribute?
","The HTML id attribute is used to assign an identifier to an element. This identifier can then be used to reference the element in a style sheet or in JavaScript code. It is also used to link a document fragment to an element, such as a table of contents item to the corresponding section."
"Create a function in Java that takes two strings as input and output boolean true if they are the same and false if they are different.
","public boolean is_same(String str1, String str2) { 
 
    if (str1 == null || str2 == null) { 
        return false; 
    } 
    return str1.equals(str2); 
}"
"A website has a form with a textarea field of length 3 rows and 20 columns. Write code to check that the user doesn't exceed the character limit of the textarea.
","def check_char_limit(text, rows, cols):
    lines = text.splitlines()
    if len(lines) > rows:
        return False 
    for line in lines:
        if len(line) > cols:
            return False
    return True"
"Write a basic CSS style to apply color red to all links.
","a {
  color: red;
}"
"Given a dictionary with keys as strings and values as numbers, calculate the sum of the values
myDict = {'x': 12, 'y': 23, 'z': 8}","def sum_of_dict(myDict):
    result = 0
    for key in myDict:
        result += myDict[key]
    return result

print(sum_of_dict(myDict))"
"Implement a function in Python to determine if a string is a palindrome.
","def is_palindrome(str): 
    rev = ''.join(reversed(str)) 

    if (str == rev): 
        return True
    return False"
"Write a code to find the first non-duplicate character in a given string.
var s = ""apple"";","function findFirstNonDuplicateChar(s) {
  var character = '';
  var checker = {};
  for (var i = 0; i < s.length; i++) {
    var char = s[i];
    if (checker[char]) {
      checker[char]++;
    } else {
      checker[char] = 1;
    }
  }
  for (var i = 0; i < s.length; i++) {
    var char = s[i];
    if (checker[char] === 1) {
      character = char;
      break;
    }
  }
  return character;
}

console.log(findFirstNonDuplicateChar(s)); // p"
"Create an algorithm that will return all numbers in the given array that are greater than 10.
[5, 8, 10, 12, 15, 17, 20]","def get_over_10(arr):
    output = []
    for num in arr:
        if num > 10:
            output.append(num)
    return output"
"Create a Python loop that iterates for 10 times.
","for i in range(10):
    ..."
"Design a Django web application to store user profiles.
","# models.py 
from django.db import models

class Profile(models.Model):
    user = models.OneToOneField(""auth.User"", on_delete=models.CASCADE)
    first_name = models.CharField(max_length=100)
    last_name = models.CharField(max_length=100)
    birth_date = models.DateField()

# views.py 
from django.shortcuts import render
from .models import Profile

def profile(request):
    profile = Profile.objects.get(user=request.user)
    return render(request, 'profile.html', {'profile': profile})

# urls.py 
from django.urls import path
from .views import profile

urlpatterns = [
    path('profile/', profile, name='profile'),
]"
"Edit the code to make sure that the sum is printed in the console.
function add(a, b) {
  let result = a+b;
  return result;
}","function add(a, b) {
    let result = a+b;
    console.log('The sum is: ', result);
    return result;
  }"
"Rewrite the following expression using an if-else statement.
x = 5
if x > 4: 
    print('x is greater than 4')","x = 5
if x > 4:
    print('x is greater than 4')
else:
    print('x is not greater than 4')"
"Generate a correct C# code to randomly generate a 5 letter string
","string chs = ""abcdefghijklmnopqrstuvwxyz"";
string RandomString = """";
Random rd = new Random();
for (int i = 0; i < 5; i++)
{
RandomString += chs[rd.Next(0,26)];
}
Console.WriteLine(RandomString);"
"Using the given array of numbers, write a JavaScript code to print the sum of all the numbers.
numbers = [5, 10, 15, 20, 25]","let result = 0;

for (let number of numbers){
 result += number;
}

console.log(result);"
"Create a function to calculate the binomial coefficient for two integers.
n = 5
r = 3","def binomial_coefficient(n, r):
    fact = 1 
    if r > n - r:
        r = n - r 
    for i in range(r):
        fact *= (n) - i 
        fact /= (i+1) 
    return int(fact)

print(binomial_coefficient(n, r))"
"Using this list, write a Python program to print out all the duplicate elements
my_list = [1, 2, 3, 2, 4, 3]","duplicate = []

for value in my_list:
    if my_list.count(value) > 1:
        if value not in duplicate:
            duplicate.append(value)

print(duplicate)"
"How do functions help with code organization?
","Functions help with code organization by breaking the program up into smaller logical blocks. This makes the code easier to read and maintain. Separating the code into functions also makes it easier to debug and test, as it allows for individual parts of the code to be tested and debugged. Having code organized into functions also makes it easier to reuse code as the functions can be called multiple times."
"Rewrite this code to make it shorter.
int x=10;
int result=0;
while(x>0){
result+=x;
x--;
}","int x = 10, result = 0;
while (x > 0) result += x--;"
"Create a C# program that creates a List of five strings and prints out each one.
","List<string> myList = new List<string>();
myList.Add(""hello"");
myList.Add(""world"");
myList.Add(""testing"");
myList.Add(""123"");
myList.Add(""goodbye"");

foreach (string s in myList)
{
 Console.WriteLine(s);
}"
"Define a class named 'Employee' that stores the ID, name, and age of a person.
","class Employee:
    def __init__(self, ID, name, age):
        self.ID = ID
        self.name = name
        self.age = age
 
    def get_info(self):
        return (self.ID, self.name, self.age)"
"Veriyif if a given string is a valid email address.
email = ""email@example.com""","import re

def is_valid_email(email):
    regex = r""^[a-zA-Z0-9.!#$%&amp;'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$""
    return re.match(regex, email)"
"Create a route for a REST API to retrieve a list of all books.
","app.get('/books', (req, res) => {
  // retrieve list of books from database
  res.json(books);
});"
"Convert the following regular expression to match strings of 3 or 4 digits: ""(\d{3,4})"".
","^\d{3,4}$"
"Write a bash script that prints the given input string.
String to be printed='Hello World'","#!/bin/bash 
echo ""Hello World"""
"Construct a JSON object which contains the elements ""name"", ""age"", and ""occupation"".
","{
    ""name"": ""John Doe"", 
    ""age"": 24, 
    ""occupation"": ""Software Engineer""
}"
"Given a string, change the spaces between words to underscores
String: ""This is a string""","String str = ""This is a string"";
String newStr = str.replaceAll(""\\s"", ""_"");
System.out.println(newStr);  // This_is_a_string"
"Rewrite the following C# program to use a for loop instead of a while loop.
int i = 0;
while (i < 10)
{
 Console.WriteLine(i);
 i++;
}","for (int i = 0; i < 10; i++) 
{ 
 Console.WriteLine(i); 
}"
"Write a function to remove all duplicate elements in an array.
data = [1, 2, 3, 2, 4, 5]","def remove_duplicates(data):
    """"""Remove all duplicate elements in an array""""""
    
    # Initialize an empty list
    unique_data = []

    # Iterate over the data
    for i in data:
        # Check if element is not already in list
        if i not in unique_data:
            # If not, then add to list
            unique_data.append(i)
    
    return unique_data

print(remove_duplicates(data)) # prints [1, 2, 3, 4, 5]"
"Write a code to count repeated words in a given sentence.
""This is a sentence. This is a test sentence.""","def count_words(sentence):
    words = sentence.split()
    counts = dict()
    for word in words:
        if word in counts:
            counts[word] += 1
        else:
            counts[word] = 1
    return counts

if __name__ == '__main__':
    sentence = ""This is a sentence. This is a test sentence.""
    word_counts = count_words(sentence)
    print(word_counts)"
"Create an HTML page that prints ""Hello World!"" and displays the examples using a font size of 8px.
","<html>
  <head>
    <title>Hello World!</title>
  </head>
  <body>
    <p style=""font-size: 8px;"">Hello World!</p>
  </body>
</html>"
"Create a function that takes a list of numbers and identifies the sublists of numbers that add up to a given sum.
","def sublist_sum(nums, target):
    result = []
    current_sum = 0
    start = 0
    for end in range(len(nums)):
        current_sum += nums[end]
        while current_sum > target and start < end:
            current_sum -= nums[start]
            start += 1
        if current_sum == target:
            result.append(nums[start:end+1])
    return result"
"Produce the Java equivalent of the following PHP code block.
$arr = array(1, 2, 3, 4);
foreach ($arr as $element) {
  echo $element;
}","int[] arr = {1, 2, 3, 4};
for (int element : arr) {
  System.out.println(element);
}"
"Given an array and a target, write a program to search the target in the array and return the index.
arr = [5, 10, 20, 25, 30]
target = 20","def search_target_in_array(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1  # element not found"
"Create a web page with two text fields for username and password.
","<html>
  <head>
    <title>Login</title>
  </head>
  <body>
    <h1>Login</h1>
    <form action="""">
      <label for=""username"">Username:</label>
      <input type=""text"" name=""username"" id=""username"" />
      <label for=""password"">Password:</label>
      <input type=""password"" name=""password"" id=""password"" />
      <input type=""submit"" value=""Login"" />
    </form>
  </body>
</html>"
"Create a table using JavaScript with three columns, ""Name"", ""Age"", and ""Country"".
","<table id=""exampleTable"">
  <tr>
    <th>Name</th>
    <th>Age</th>
    <th>Country</th>
  </tr>
</table>

<script>
  const exampleTable = document.getElementById('exampleTable');
  const rows = [];
  const columns = [""Name"", ""Age"", ""Country""];

  columns.forEach((columnName) => {  
  const newRow = document.createElement('tr'); 
  newRow.innerHTML = `<td>${columnName}</td>`;
  rows.push(newRow);
 });

 exampleTable.append(...rows);
</script>"
"Create a Java program to read in a number n, and print out the first n lines of Pascal's triangle.
n = 5","import java.util.Scanner;

public class PascalTriangle {

	public static void main(String[] args) {

		// Read in the number of lines
		System.out.println(""Enter the number of lines: "");
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt();
		
		// Print out pascal triangle
		for(int line = 0; line < n; line++) {
			
			// Print out white spaces
			for(int i = 0; i < (n - (line+1)); i++) {
				System.out.print("" "");
			}
			
			// Create row for pascal triangle
			long num = 1;
			for(int i = 0; i <= line ; i++) {
				System.out.print(num + "" "");
				num = num * (line - i) / (i + 1);
			}
			System.out.println();
		}
	}

}"
"Create a Swift method to sort a dictionary alphabetically.
Dictionary - key1: value1, key2: value2, key3: value3","func sort(dict: [String: String]) -> [String: String] {
    let sortedKeys = dict.keys.sorted { $0 < $1 }
    var sortedDict = [String: String]()
    for key in sortedKeys {
        sortedDict[key] = dict[key]
    }
    return sortedDict
}"
"Design a class in Java to represent a rectangle and include methods to calculate and return its perimeter and area.
","public class Rectangle {
    private int width;
    private int height;

    public Rectangle(int width, int height) {
        this.width = width;
        this.height = height;
    }

    public int getPerimeter() {
        return 2 * (width + height);
    }

    public int getArea() {
        return width * height;
    }
}"
"Create a CSS rule to make all the links in a document to be underlined.
","a {
    text-decoration: underline;
}"
"Create a class that contains two methods: one to generate a random number between a given range, and one to create a list of ""n"" random numbers.
n = 10, min = 0, max = 100","class RandomNumberList:
    def __init__(self):
        self.numbers = []
    
    def generate_random(self, min, max):
        return random.randint(min, max) 
    
    def create_list(self, n, min, max):
    # Generate a list of n random numbers between min and max
        self.numbers = [self.generate_random(min, max) for _ in range(n)]
        return self.numbers"
"Sum every second element in an array.
arr = [1, 5, 4, 8, 10, 12]","def sum_second_elements(arr):
    sum_num = 0
    for i in range(1, len(arr), 2):
        sum_num += arr[i]
    return sum_num"
"Modify the following code to print the keys of a dictionary.
d = {'a':1, 'b':2, 'c':3}","d = {'a':1, 'b':2, 'c':3}

for key in d:
    print(key)"
"Build a regular expression to match only strings that start with one specific character and end with another specific character.
",/^X.*Y$/
"Create a regex pattern to identify alphanumeric characters.
",[A-Za-z0-9]
"Generate a loop that prints odd numbers between 0 to 10.
","for(int i = 0; i <= 10; i++){
    if(i % 2 != 0)
        System.out.println(i);
}"
"Create a simple program to capitalize the first letter of every sentence
","def capitalize_sentences(text): 
   sent_list = text.split(""."")
   cap_sent_list = [sentence.capitalize() for sentence in sent_list]
   output = '.'.join(cap_sent_list)
   return output"
"Why should you use functions in programming?
","Using functions in programming helps to break down complex tasks into more manageable pieces, which makes code easier to read and maintain. Functions also allow for the reuse of code, which can help to reduce overall development time and resources. Additionally, functions improve code organization and enable functions to be tested independently, making debugging easier."
"How can we check the type of a variable in JavaScript?
","We can check the type of a variable in JavaScript using the typeof operator. For example, to check the type of the variable x, we can use the following code:

var x = 10;
console.log(typeof x); // outputs ""number"""
"Rewrite the following code snippet to improve readability.
def f(x):
  return [x * i for i in range(1, x + 1)]","def f(x):
  numbers = []
  for i in range(1, x + 1):
    numbers.append(x * i)
  return numbers"
"Use the given array to construct the appropriate loop structure to replace the ""TODO"" comment in the code.
const array = [1, 2, 3, 4, 5];","for (let i = 0; i < array.length; i++) {
  // TODO
}"
"Modify the following Java program to print ""Hello world!"" without using a System.out.print statement.
class HelloWorld {

   public static void main(String args[]) {
      System.out.print(""Hello world!"");
   }
}","class HelloWorld {

   public static void main(String args[]) {
      System.out.println(""Hello world!"");
   }
}"
"Given a list of integers, write a program to check if there exist any pairs of numbers that sum to a given number.
v = [2, 3, 4, 9], sum = 8","def findSumPairs(v, sum):  
    v.sort()
    l = 0
    r = len(v) - 1
    while l < r: 
        if v[l] + v[r] == sum:
            return True
        elif v[l] + v[r] > sum:
            r -= 1
        else:
            l += 1
    return False
  
v = [2, 3, 4, 9]
sum = 8
print(findSumPairs(v, sum))"
"Generate an Objective-C code to check if a given string is palindrome or not.
""racecar""","#import<Foundation/Foundation.h>

@implementation CheckString

-(BOOL)isStringPalindrome:(NSString*)inputString {
    BOOL isPalindrome = true;
    int lastIndex = [inputString length] - 1;  
 
    for (int i = 0; i < [inputString length]/2; i++) {
        //compare character one by one
        if ([inputString characterAtIndex:i] != [inputString characterAtIndex:lastIndex]) {
            isPalindrome = false;
            break;
        }
        // decrement lastIndex for next iteration
        lastIndex--;
    }
    return isPalindrome;
}

@end

CheckString *cs = [[CheckString alloc]init];
NSString *sampleString = @""racecar"";

if ([cs isStringPalindrome:sampleString]) {
    NSLog(@""String is Palindrome"");
}else{
    NSLog(@""String is not a Palindrome"");
}"
"Write a React component that accepts an array of strings and renders a bulleted list.
const data = [""dog"", ""cat"", ""bird""]","class BulletList extends React.Component {
  render() {
    const {data} = this.props
    return (
      <ul>
        {data.map(item => <li>{item}</li>)}
      </ul>
    );
  }
}"
"Convert the HTML code below to its corresponding DOM elements.
<div>
  <p>Hello, World!</p>
</div>","// Create a `div` element 
let divElement = document.createElement('div');

// Create a `p` element
let pElement = document.createElement('p');

// Add the content to the `p` element
pElement.textContent = 'Hello, World!';

// Append the `p` element to the `div` element
divElement.appendChild(pElement);"
"Rewrite this SQL query to select the top three records from a table named 'sales'.
SELECT * FROM sales",SELECT * FROM sales ORDER BY id DESC LIMIT 3
"Write Python code to reverse the letters in the string ""hello"".
","def reverseString(s): 
    return s[::-1]

print(reverseString('hello'))"
"Create a Java method which takes a String and an integer as inputs and concatenates the integer to the beginning of the string.
inputString: ""This is a test""
num: 38","public static String prependIntToString(String inputString, int num) {
    String outputString = num + """" + inputString;
    return outputString;
}"
"Create a program to accept a string and display its length.
","def getLength(string): 
    length = len(string) 
    return length 
  
result = getLength(""GPT"")
print(result)"
"Create a for loop which iterates through the given list and prints the value of each item.
let myList = [3, 5, 7, 9];","for (let item of myList) {
    console.log(item);
}"
"Write a C# function which takes 2 strings as parameters and returns a new string which is a concatenation of the two parameters.
'Hello', 'World!'","string ConcatenateStrings(string str1, string str2)
{
   return str1 + str2;
}"
"Create a HTML page with a table which contains data about the student population.
","<html>
<body>

<table>
<tr>
  <th>Student Name</th>
  <th>Class</th>
  <th>Age</th>
</tr>
<tr>
  <td>John</td>
  <td>8th</td>
  <td>14</td>
</tr>
<tr>
  <td>Ann</td>
  <td>9th</td>
  <td>15</td>
</tr>
<tr>
  <td>James</td>
  <td>10th</td>
  <td>16</td>
</tr>
</table>

</body>
</html>"
"Write a JavaScript code to create a timer that counts down from 10.
","let countDown = 10;
let interval = setInterval(() => {
  countDown--;
  if (countDown == 0) {
    clearInterval(interval);
  }
}, 1000);"
"Write an SQL query to delete all the records in a table named ""users"".
",DELETE FROM users;
"Write an algorithm that prints the first 10 Fibonacci numbers in descending order.
","# Initialize the first two numbers
a = 0
b = 1

# Print the first 10 Fibonacci numbers
for i in range(10):
    # Swap the values
    a, b = b, a + b
    # Print the current Fibonacci number
    print(b)
# Reverse the list
for _ in range(9, 0, -1):
    print(_)"
"Write a SQL statement that returns the average age of people in the table.
",SELECT AVG(age) FROM people;
"Create a C++ function that finds the frequency of each character in a string and stores in a hashtable.
","#include <iostream>
#include <unordered_map>

std::unordered_map<char, int> character_frequency(std::string str)
{ 
    std::unordered_map<char, int> frequency; 
    for (char c : str) 
        frequency[c]++; 
    return frequency; 
}"
"Rewrite the given code in a different language.
// code written in C++
#include<iostream>
using namespace std;

int main(){
    cout << ""Hello World!"";
    return 0;
}","// code written in Java
public class Main {
    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}"
"Replace all vowels in a string with a specified letter
string = 'hello world'","def replaceVowels(string, ch): 
    vowels = ""aeiouAEIOU""
    for x in string:
        if x in vowels:
            string = string.replace(x, ch) 
    return string"
"Write a Java program to implement Matrix multiplication
","public class MatrixMultiplication {    
    public static void main(String []args) { 
        int[][] matrix1 = { {1, 1}, 
                            {2, 2} }; 
  
        int[][] matrix2 = { {1, 1}, 
                            {2, 2} 
                        }; 
  
        int rows1 = matrix1.length; 
        int cols1 = matrix1[0].length; 
        int rows2 = matrix2.length; 
        int cols2 = matrix2[0].length; 
  
        int[][] result = new int[rows1][cols2]; 
  
        // multiplying matrix1 and matrix2 
        for(int i = 0; i < rows1; i++) { 
            for(int j = 0; j < cols2; j++) { 
                for(int k = 0; k < rows2; k++) { 
                    result[i][j] += matrix1[i][k]  
                                * matrix2[k][j]; 
                } 
            } 
        } 
  
        // printing the result matrix 
        for(int[] row : result) { 
            for (int element : row){ 
                System.out.print(element + ""\t"" ); 
            } 
            System.out.println(); 
        } 
    } 
}"
"Using the input, create a function to calculate the average of the set.
nums = [1, 2, 3, 4, 5]","def avg_nums(nums):
  total = 0
  for num in nums:
    total += num
  avg = total / len(nums)
  return avg

print(avg_nums([1, 2, 3, 4, 5]))

# Output: 3.0"
"Create a script that extracts the page titles from the given HTML page.
<html>
<head><title>HTML Example</title></head>
<body>
<h1>Example Page</h1>
<p>This is an example of a HTML page.</p>
</body>
</html>","from bs4 import BeautifulSoup

html_content = '''
<html>
<head><title>HTML Example</title></head>
<body>
<h1>Example Page</h1>
<p>This is an example of a HTML page.</p>
</body>
</html>
'''

soup = BeautifulSoup(html_content, 'html.parser')
page_title = soup.title.string
print(page_title)"
"Build a HTML page with a section containing two buttons
","<html>
  <head>
    <title>Button Section</title>
  </head>
  <body>
    <div>
      <button>First button</button>
      <button>Second button</button>
    </div>
  </body>
</html>"
"Parse a JSON string and print its value.
data = '{""name"":""John"", ""age"":30}'","import json

data_dict = json.loads(data)
name = data_dict[""name""]
age = data_dict[""age""]
print(name)
print(age)"
"Create a function to transform all strings to capital letters.
my_string = 'Hello World!'","def to_upper(string):
 return string.upper()"
"Find the string between two substrings.
String: This is a string
Start substring: is 
End substring: a",""" is """
"Edit the code to create a class for a profile.
class Profile {

}","class Profile {
  constructor(name, email, avatar_url) {
    this.name = name;
    this.email = email;
    this.avatar_url = avatar_url;
  }

  updateName(name) {
    // update the profile's name
    this.name = name;
  }
  
  updateEmail(email) {
    // update the profile's email address
    this.email = email;
  }
  
  updateAvatar(url) {
    // update the profile's avatar url
    this.avatar_url = url;
  }
  
  getName() {
    // return the profile's name
    return this.name;
  }
  
  getEmail() {
    // return the profile's email
    return this.email;
  }
  
  getAvatarUrl() {
    // return the profile's avatar url
    return this.avatar_url;
  }
}"
"Edit this SQL query to include an order by clause:
SELECT * FROM Employees",SELECT * FROM Employees ORDER BY Salary ASC;
"Write a short JavaScript code snippet to detect a browser language and display a response message in that particular language.
","// get the current browser language
var language = navigator.language || navigator.userLanguage;

if (language === ""en"") {
    console.log(""Hello, welcome to the website!"");
} 
else if (language === ""de"") {
    console.log(""Hallo, willkommen auf der Webseite!"");
}
else if (language === ""fr"") {
    console.log(""Bonjour, bienvenue sur le site Web!"");
}
else {
    console.log(""Welcome to the website!"");
}"
"Create a CSS rule to make all titles on a page bold.
","h1, h2, h3 {
    font-weight: bold; 
}"
"Create a query in MySQL to list the number of male and female employees in a given department.
Table: employees
Columns: name, gender, department","SELECT department, COUNT(*) AS count, gender
FROM employees
GROUP BY department, gender;"
"How do you print the first parameter passed to a bash script?
",echo $1
"Define the term ""polymorphism"" in programming.
",Polymorphism is a feature in object-oriented programming that allows objects to behave differently depending on the context. It is used to reduce the amount of code needed for different operations and to increase the code's maintainability. Polymorphism allows objects to be defined from a common class in which each instance can be used in a different way based on its particular context. This enables a code to work in multiple forms depending on the data input. It simplifies the coding process by allowing for a single interface to access multiple objects at the same time.
"Select a random element from a given list.
list = [1, 5, 8, 10]","import random

def select_random_element(list):
    index = random.randint(0, len(list)-1)
    return list[index]

if __name__ == ""__main__"":
    list = [1, 5, 8, 10]
    print(select_random_element(list))"
"Write a JavaScript method to toggle font size on a webpage.
","function toggleFontSize(){
  let fontSize = document.body.style.fontSize;
  if(fontSize === """") {
    document.body.style.fontSize = ""2rem"";
  } else{
    document.body.style.fontSize = """"
  }
}"
"Create a regular expression to match a string that contains only a-z and 0-9 characters.
",^[a-z0-9]+$
"Create a Python script to generate random numbers from 1 to 10 in a given range.
","import random

def random_num_gen(start, end):
  
  random_nums = []
  
  for _ in range(start, end + 1):
    random_nums.append(random.randint(1, 10))
  
  return random_nums"
"Read the given JSON data and display the value of the ""Name"" field.
{
  ""Name"": ""Text Analyzer"",
  ""Version"": ""1.0.0"",
  ""Author"": ""John Doe""
}","import json

# Reading data
data = {
  ""Name"": ""Text Analyzer"",
  ""Version"": ""1.0.0"",
  ""Author"": ""John Doe""
}

# Printing the value of the ""Name"" field
print(json.dumps(data['Name']))

# Output
Text Analyzer"
"Explain what this code does
def biggest_number(*args):
    return max(args)",This code is a function that takes in any number of arguments and returns the maximum of them. It will compare the arguments and return the biggest one.
"How would you check if two strings are anagrams in JavaScript?
","function isAnagram(str1, str2) { 
  // Compare the length of the two string
  if (str1.length !== str2.length) { 
    return false; 
  } 
 
  // Convert both strings to lowercase
  str1 = str1.toLowerCase(); 
  str2 = str2.toLowerCase(); 
 
  // Store the frequency of characters
  // in the first string
  const frequencyCounter1 = {}; 
  for (let char of str1) { 
    frequencyCounter1[char] = (frequencyCounter1[char] || 0) + 1; 
  } 
 
  // Store the frequency of characters
  // in the second string
  const frequencyCounter2 = {}; 
  for (let char of str2) { 
    frequencyCounter2[char] = (frequencyCounter2[char] || 0) + 1; 
  }
 
  // Compare the frequency of characters 
  for (let key in frequencyCounter1) { 
    if (!(key in frequencyCounter2)) { 
      return false; 
    } 
   
    if (frequencyCounter2[key] !== frequencyCounter1[key]) { 
      return false; 
    } 
  }  
  return true; 
}"
"Find the most frequent word in the following paragraph.
The quick brown fox jumps over the lazy dog.",the
"Given a list of integers, write a function to compute their average.
List of integers: [1, 2, 3, 4, 5]","def compute_average(lst): 
    total = 0
    for num in lst: 
        total += num 
        
    # calculate the average 
    avg = total / len(lst) 
    
    return avg

# Driver Code 
lst = [1, 2, 3, 4, 5] 
print(""Average of the list ="", round(compute_average(lst), 2))"
"Write a regular expression that validates email addresses.
","^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$"
"How can you use recurrent neural networks for sequence prediction?
","Recurrent neural networks (RNNs) can be used for sequence prediction tasks. RNNs are powerful models that are able to capture patterns from sequences of data and can remember information from previous inputs. The network is comprised of layers and nodes, and each layer contains nodes that are connected to the previous layer. When a sequence is fed into the network, the nodes of the first layer are activated based on the input. The output of the first layer serves as the input for the next layer, and so on. As the sequence progresses, the internal state of the network is updated and used to make predictions. The output of the RNN is then a prediction of the next element in the sequence."
"Create a processing sketch that can randomly generate 500 circles.
","// Setup a canvas of 500x500
void setup() {
  size(500, 500);
}

// Randomly draw 500 circles in the canvas
void draw() {
  for (int i=0; i<500; i++) {
    float x = random(0, 500);
   	float y = random(0,500);
   	float rand = random(0, 100);
   	fill(rand, rand, rand);
	ellipse(x, y, 20, 20);
  }
}"
"Design a MongoDB database with a customers collection which contains the following fields: name, city, phone, and address.
","{
  ""_id"": ObjectID( 0000000001 ),
  ""name"": ""John Doe"",
  ""city"": ""New York"",
  ""phone"": ""123-456-7890"",
  ""address"": ""123 Main Street""
  }"
"Using a for loop, print the characters of a string.
string = ""Programming""","for ch in string:
    print(ch)"
"Calculate the distance between two points (x1, y1) and (x2, y2).
x1 = 5, x2 = 8
y1 = 3, y2 = 12","def calculate_distance(x1, x2, y1, y2):
    return ((x2-x1)**2 + (y2-y1)**2)**0.5
    
calculate_distance(x1, x2, y1, y2)
7.615773105863909"
"Create a class in Java named 'Circle' that has an attribute named 'radius' and a method named 'getArea' to calculate the area of a circle.
","class Circle {
  double radius;
 
  double getArea() {
    return Math.PI * Math.pow(radius, 2);
  }
}"
"Complete the following function so that all strings in the list have a length of 5 characters.
lst = [""aaa"", ""bb"", ""ccccc"", ""dddddd""]","def make_length_five(lst):
    '''This function will ensure that all strings in the list have a length of 5 characters.'''
    for i in range(len(lst)):
        if len(lst[i]) < 5:
            lst[i] = lst[i] + ' ' * (5 - len(lst[i]))
        elif len(lst[i]) > 5:
            lst[i] = lst[i][:5]
    return lst"
"Design a function to convert a given numerical grade to a corresponding letter grade.
","def grade_to_letter(grade):
    if grade >= 90:
        return 'A'
    elif grade >= 80:
        return 'B'
    elif grade >= 70:
        return 'C'
    elif grade >= 60:
        return 'D'
    else:
        return 'F'"
"Create a MySQL query to select all the employees who have 100 or more sales.
","SELECT * 
FROM Employees 
WHERE Sales >= 100;"
"You need to generate an HTML table and style it with CSS.
table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

td, th {
  border: 1px solid #dddddd;
  text-align: left;
  padding: 8px;
}","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"" />
  <title>Title of the document</title>
</head>

<body>

  <table>
    <tr>
      <th>Firstname</th>
      <th>Lastname</th>
      <th>Age</th>
    </tr>
    <tr>
      <td>Jill</td>
      <td>Smith</td>
      <td>50</td>
    </tr>
    <tr>
      <td>Eve</td>
      <td>Jackson</td>
      <td>94</td>
    </tr>
  </table>

</body>

</html>"
"Write a Tensorflow model to classify a given X and Y as either positive or negative.
X = [1, 1, 2, 4]
Y = [3, 1, 0, 4]","import tensorflow as tf

model = tf.keras.Sequential([
  tf.keras.layers.Dense(8, input_dim=2, activation=""relu""), 
  tf.keras.layers.Dense(1, activation=""sigmoid"")
])

model.compile(loss='binary_crossentropy',
              optimizer=tf.keras.optimizers.Adam(0.01),
              metrics=['accuracy'])

X_list = [X, Y] 
y = [1, 0]

model.fit(X_list, y, batch_size=4, epochs=4)"
"Find the position of an element in an array.
arr = [1, 4, 7, 9]
target = 4","def find_index(arr, target):
    for i, num in enumerate(arr):
        if num == target:
            return i

find_index(arr, target)
# Output: 1"
"Find the index of the element 'c' in the following list.
[""a"", ""b"", ""c""]","lst = [""a"", ""b"", ""c""]
index = lst.index(""c"")"
"Modify the code snippet below to insert the element 'z' into the end of an array.
arr = ['a', 'b', 'c', 'd', 'e']","arr = ['a', 'b', 'c', 'd', 'e'] 
arr.append('z') 
print(arr)"
"How would you convert a decimal number such as 2.345 to a binary representation?
","2.345 can be converted to binary representation by multiplying 2.345 by 2 repeatedly and taking note of the whole number of each multiplication. 

The binary representation of 2.345 is 10.011111."
"Using the given sentence, design a regular expression which will match the given word.
Word: apple
Sentence: I bought an apple from the store.",regex: \bapple\b
"Create a dictionary of items with the corresponding price in Python.
items = ['book', 'pen', 'chair']
prices = [10, 2, 5]","prices_dict = dict(zip(items, prices))
# prices_dict = {'book': 10, 'pen': 2, 'chair': 5}"
"Calculate the probability of drawing four aces from a standard deck of cards.
",double probability = (4.0/52.0)*(3.0/51.0)*(2.0/50.0)*(1.0/49.0); // probability is 0.0045248868778280541
"You need to generate a random four-digit number and return it as an integer.
","import random

def generateRandomNumber():
    return random.randint(1000,9999)"
"Write a function to print an array without duplicate elements.
[4,3,6,5,4,7]","def remove_duplicates(arr):
    seen = set()
    for x in arr:
        if x not in seen:
            seen.add(x)
            print(x)"
"Create a JavaScript code that checks if an array contains a given element.
Array: [2, 5, 9]
Element: 5","function contains(arr, ele) {
  for (let i = 0; i < arr.length; i++) {
    if(arr[i] === ele) {
      return true;
    }
  }
return false;
}"
"Augment the following HTML structure to include a link to a CSS document.
<head>
 <meta charset=""UTF-8"">
 <title>My Webpage</title>
</head>","<head>
 <meta charset=""UTF-8"">
 <title>My Webpage</title>
 <link rel=""stylesheet"" type=""text/css"" href=""style.css"">
</head>"
"You need to make a function that takes in a number and its reverse and checks whether the two numbers are equal or not.
x = 65
y = 56","def check_equal(x, y)
{
    if (x == (y * -1)) 
    {
        return true;
    } 
    else 
    {
        return false;
    }
}"
"Write a JavaScript code to filter an array of strings that begin with the letter `A` and have a length of 5.
let arr = [""Apple"", ""Banana"", ""Ant"", ""Cat"", ""Arson""];",let result = arr.filter(str => str[0] === 'A' && str.length === 5);
"Write an Ansible playbook to install an Apache webserver.
","---
 - hosts: localhost
   become: true
   tasks:
    - name: Install Apache Webserver
      apt:
        name: apache2
        state: present"
"Rewrite the following recursive algorithm in Java.

def recursive(n):
  if n == 0:
    return 0
  else:
    return n + recursive(n-1)
","public static int recursive(int n) {
  if (n == 0) {
    return 0;
  } else {
    return n + recursive(n - 1);
  }
}"
"Create a variable named ""my_name"" with a value of your name.
","let my_name = ""John"";"
"Build a machine learning model to predict the outcome.
Input dataset of 200 records with 10 features","Using the input dataset, a machine learning model can be built to predict the outcome by training it on the features provided in the dataset."
"Using Java, create a class that implements sorting of an array of integers.
","public class Sorting { 
	public void sort(int[] array) { 
		for (int i = 0; i < array.length - 1; i++) { 
			int index = i; 
			for (int j = i + 1; j < array.length; j++) { 
				if (array[j] < array[index]) { 
					index = j; // index of lower number 
				} 
			} 
			int smallerNumber = array[index]; 
			array[index] = array[i]; 
			array[i] = smallerNumber; 
		}
	} 
}"
"What is the purpose of the `sort()` JavaScript array method?
",The sort() JavaScript array method is used to sort the elements of an array in place and returns the sorted array. The default sort order is ascending according to the string Unicode code points.
"Create a JavaScript function to simulate a dice roll with a random number generator?
","function rollDice() {
  let max = 6;
  let min = 1;
  let randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;
  return randomNumber;
}"
"Print the largest number in a given array in Python.
my_array = [5, 11, 7, 10, 2]","my_array = [5, 11, 7, 10, 2]

# Function to find the largest number
def find_largest_number(array):
    # Assume that the first item in the array is the largest
    largest = array[0]

    # Now loop through the array to find the largest number
    for num in array:
        # If a number is larger than the assumed largest, it is the new largest number
        if num > largest:
            largest = num

    # Return the largest number
    return largest

# Call the function
largest = find_largest_number(my_array)

# Print the result
print(largest)
# Output: 11"
"Write a loop to compute the total number of fruits of type ""Apple"".
var fruits = [{ type: 'Mango', count: 10}, {type: 'Apple', count: 5}, {type: 'Strawberry', count: 8}]","let appleCount = 0;
for(let i = 0; i < fruits.length; i++) {
    if(fruits[i].type === ""Apple"") {
        appleCount += fruits[i].count;
    }
}"
"Write a Rust program to convert a string to title case.
","fn to_title_case(s: String) -> String {
    let words: Vec<&str> = s.split_whitespace().collect();
    let mut title_cased = String::new();
    for word in words {
        let mut chars = word.chars();
        title_cased.push_str(&chars.next().unwrap().to_uppercase().to_string());
        for char in chars {
            title_cased.push_str(&char.to_lowercase().to_string());
        }
        title_cased.push(' ');
    }
    title_cased.trim().to_string()

}"
"Create a script in Python for printing the Fibonacci series for a given range of numbers.
start = 1
end = 10","a,b = 0,1
for i in range(start, end+1):
    print(a)
    a,b = b,a+b"
"Build a quickly-sortable tree from a given array.
Array = [3, 8, 4, 5, 2, 10, 7]","class TreeNode: 
    def __init__(self, key): 
        self.left = None
        self.right = None
        self.key = key 

def quick_sort_tree(arr):
    if not arr:
        return None

    pivot = arr[0]
    pivot_node = TreeNode(pivot)
    
    left_subtree_elements  = [x for x in arr[1:] if x < pivot]
    right_subtree_elements = [x for x in arr[1:] if x >= pivot]

    pivot_node.left  = quick_sort_tree(left_subtree_elements)  
    pivot_node.right = quick_sort_tree(right_subtree_elements) 

    return pivot_node"
"Parse the following JSON and extract the value of the variable 'price'.
`{
 ""item"": ""Shoes"",
 ""price"": 125
}`","import json 

# parse the JSON string
data = json.loads(input_json)

# extract the value of the price variable
price = data['price']"
"Create a class in Java to represent a circle with two fields for its radius and color.
","public class Circle { 
    private double radius; 
    private String color; 
  
    public Circle(double r, String c) 
    { 
        this.radius = r; 
        this.color = c; 
    } 
  
    public double getRadius() 
    { 
        return this.radius; 
    } 
  
    public String getColor() 
    { 
        return this.color; 
    } 
  
    public double getArea() 
    { 
        return Math.PI * this.radius * this.radius; 
    } 
}"
"Write a code to select all columns from a table named 'students' where the age is between 22 and 28
",SELECT * FROM students WHERE age BETWEEN 22 AND 28;
"Write a function in Javascript to check if a given list is palindrome.
let list = [1, 2, 3, 3, 2, 1]","function isPalindrome(list) {
    for (let i = 0; i < Math.floor(list.length / 2); i++) {
        if (list[i] !== list[list.length - i - 1]) {
            return false;
        }
    }
    return true;
}"
"Find the number of triplets in this array which sum up to zero.
arr = [-1, 0, 1, 2, 3, 4]","The number of triplets in this array which sum up to zero is 1. The triplets are [-1, 0, 1]."
"Write a Python script to print the current day, month and year.
","from datetime import datetime

now = datetime.now()

print(""Today is"", now.day, now.month, now.year)"
"Suggest a better way to compare two strings in Python.
",Using Python's Standard Library function `difflib.SequenceMatcher` is a more efficient way to compare two strings. This function uses an algorithm to compute the longest common subsequence between the two strings which is then used to calculate the similarity score of the given strings.
"Write a Python code to sort the names into ascending order.
names = [""Vladimir Putin"",""Joe Biden"",""Xi Jinping""]",names.sort()
"Create a 2D array with n columns and m rows and fill it with random numbers.
Rows: 6, Columns: 8","import random

def create2DArray(row, col):
  arr = [[random.randint(1,100) for j in range(col)] for i in range(row)]
  return arr"
"Generate an array of 10 random numbers between 1 and 100 using Python
","import random

def generate_random_array(n):
    array= []
    for _ in range(n):
        array.append(random.randint(1, 100))
    return array

print(generate_random_array(10))

// Output
// [14, 20, 32, 84, 59, 45, 11, 34, 57, 19]"
"Write a code in which the values in the dictionaries will be swapped.
dic = {'x': 10, 'y': 20}","def swap_dictionary_values(dic):
    """"""Function to swap the values in the dictionaries""""""
    dic['x'], dic['y'] = dic['y'], dic['x']
    return dic

if __name__ == '__main__':
    dic = {'x': 10, 'y': 20}
    swapped_dic = swap_dictionary_values(dic)
    print(swapped_dic) # {'x': 20, 'y': 10}"
"Write a function in Go language that will return the number of elements in a slice.
","func len(s []int) int {
	return len(s)
}"
"Write an algorithm to check if two given strings are an anagram.
s1 = ""listen""; s2 = ""silent""","Algorithm:

Set s1Letters to an empty array
Set s2Letters to an empty array

Break s1 and s2 into letters and add them to respective arrays.

Sort the arrays

Compare the sorted arrays, if both are equal then strings are anagram else not."
"Explain the main differences between Java and Python.
","The main differences between Java and Python include speed of development, execution speed, type safety, readability and syntax ease, standard libraries, and code scalability. Java is more popular in enterprise applications and is generally faster to develop than Python because of its statically typed language. Java has a JVM (Java Virtual Machine) making it faster to compile and execute than Python, which is dynamically typed. Java is more type-safe and easier to debug, while Python is more readable and easier to learn. Python also has wider range of standard libraries than Java, making development faster. Python is more scalable than Java, making it applicable for larger projects."
"Generate a JavaScript array containing the first ten Fibonacci numbers.
","let fib_nums = [1, 1]
for (let i=2; i < 10; i++) {
  fib_nums[i] = fib_nums[i - 1] + fib_nums[i - 2]
}"
"How many lines would the following algorithm require?
# Find all the prime numbers between two given numbers
# Input: two numbers, n1 and n2
# Output: list of prime numbers between n1 and n2",It would require approximately 9 lines of code.
"Write a C# code to print an array in reverse order.
int[] numbers = {1,2,3,4};","public static void printArrayInReverse(int[] arr) { 
  Console.WriteLine(""Array in reverse order: "");
  for (int i = arr.Length-1; i >= 0; i--) {
    Console.Write(arr[i] + "" "");
  } 
}"
"Write a MySQL query to find the name of a customer whose last name is 'Smith' and has the highest credit limit.
","SELECT name
FROM Customers
WHERE lastname = 'Smith'
ORDER BY creditlimit DESC
LIMIT 1;"
"Create an SQL query to find the id of the customer whose name is ""John Doe"".
",SELECT id FROM customers WHERE name = 'John Doe';
"Formulate a regex expression in Python to check if a given string is an email address.
","import re 

def is_email(string): 
   regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w+$'
   if(re.search(regex,string)): 
      print(""Valid Email"")  
   else: 
      print(""Invalid Email"")"
"Given a matrix of m*n size, write a program to find the largest number in the matrix.
matrix = 
[[1, 2, 3], 
 [4, 5, 6], 
 [7, 8, 9]]","def largest_number_in_matrix(matrix): 
 largest = -1
 for row in matrix: 
 for ele in row: 
 largest = max(largest, ele) 
 return largest 

matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]  
print(largest_number_in_matrix(matrix)) # 9"
"Remove all the punctuation from a given string
""Welcome to the world of computers!""","import string

def remove_punctuation(text):
    punctuations = string.punctuation
    no_punct = """"
    for char in text:
        if char not in punctuations:
            no_punct += char
    return no_punct

if __name__ == '__main__':
    text = 'Welcome to the world of computers!'
    print(remove_punctuation(text))"
"Create a function that takes two integer arguments, subtracts the second one from the first one, and returns the result.
num1 = 3, num2 = 2","def subtract(num1, num2):
    return num1 - num2

result = subtract(3, 2)
print(result)  # Output: 1"
"Develop a program in Java that prints out the following star pattern.
","public class Stars {
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            for (int j = 0; j < i; j++) {
                System.out.print(""*"");
            }
            System.out.println();
        }
    }
}"
"Read this HTML code and explain in a few words what this snippet does.
<div id=""test"">Hello World!</div>","This HTML code snippet creates a div with the id ""test"" and displays the text ""Hello World!"" within it."
"Write a Java program that prompts the user to enter two strings and outputs whether the two strings are anagrams.
","import java.util.HashMap;

public class Anagram { 

    // Utility method to check whether two strings are anagram or not 
    static boolean areAnagram(String A, String B) { 
  
        // If length of both strings is not same, then they can't be anagram
        if (A.length() != B.length()) 
            return false; 
  
        // Make a copy of string
        A = A.toLowerCase(); 
        B = B.toLowerCase(); 
  
        // Create a hash map
        HashMap<Character, Integer> map = new HashMap<>(); 
  
        // Iterate through both strings and increment count
        // in hash map 
        for (int i = 0; i < A.length(); i++) { 
            char ch = A.charAt(i); 
  
            if (map.containsKey(ch)) {
                int f = map.get(ch); 
                f++; 
                map.put(ch, f); 
            } else {
                map.put(ch, 1); 
            }
        } 
  
        for (int i = 0; i < B.length(); i++) {
            char ch = B.charAt(i); 
            if (map.containsKey(ch)) {
                int f = map.get(ch); 

                // If char is not present, then by default 
                // f would be 0
                if (f == 0) 
                    return false; 
  
                f--; 
                map.put(ch, f); 
            } else {
                return false; 
            }
        }
        return true;
    } 
  
    // Driver code 
    public static void main (String[] args) throws java.lang.Exception { 
        String A = ""listen"";
        String B = ""silent"";
        if (areAnagram(A, B)) {
            System.out.println(""The two strings are anagrams of each other."");
        } else {
            System.out.println(""The two strings are not anagrams of each other."");
        }
    } 
}"
"Convert a given binary number to a hexadecimal number.
binary_num = 1011","def binary_to_hex(binary_num):
    return hex(int(binary_num, 2))"
"Edit the code below to add an exception handling mechanism in it.
def divide(a, b):
    return a/b","def divide(a, b):
    try: 
        return a/b
    except ZeroDivisionError:
        print(""Division by zero is undefined"")"
"Parse the following HTML string and extract the text of the given tag.
<div class=""header"">Hello!</div>","from bs4 import BeautifulSoup

html_string = ""<div class=""header"">Hello!</div>""
soup = BeautifulSoup(html_string)

header_tag = soup.find('div', {'class': 'header'})

if header_tag is not None:
    print(header_tag.text)"
"Write a JavaScript program to compare two Strings for equality, ignoring case.
String1: 'Hello'
String2: 'heLLo'","const compareIgnoreCase = (string1, string2) => {
    return string1.toUpperCase() === string2.toUpperCase();
};

compareIgnoreCase(""Hello"", ""heLLo""); // true"
"Sort a list of 5 numbers in descending order.
[123, 45, 287, 398, 135]","[398, 287, 135, 123, 45]"
"Create a code to sort this list in a descending order
my_list = [1,9,3,5,7]","""""""
Sort this list in a descending order
""""""

my_list = [1,9,3,5,7]

# Sort the list in a descending order
my_list.sort(reverse=True)
print(my_list)"
"Develop a Java program that prints all the leap years up to a given year.
Year = 2020","public class LeapYear {  
    public static void main(String[] args) {  
      
	      int year = 2020;  
	
        System.out.println(""Leap years up to ""+year+"" are :"");     
        for (int i = 1; i <= year; i++) {  
            if (i % 4 == 0) {  
                if (i % 100 == 0) {  
                    if (i % 400 == 0) {  
                        System.out.print(i + "" "");  
                    }  
                } else {  
                    System.out.print(i + "" "");  
                }  
            }  
        }  
    }  
}"
"Given a unsorted array, sort it using the quick sort algorithm.
[5, 4, 8, 7, 1, 3, 10, 9]","def quickSort(nums): 
    if len(nums) <= 1: 
        return nums
    pivot = nums[len(nums) // 2] 
    left = [x for x in nums if x < pivot]
    middle = [x for x in nums if x == pivot] 
    right = [x for x in nums if x > pivot] 
    return quickSort(left) + middle + quickSort(right)
  
   
nums = [5, 4, 8, 7, 1, 3, 10, 9] 
print(quickSort(nums))"
"Create a .Net console application to print a greeting according to the user’s input
","Console.WriteLine(""What is your name?"");
string name = Console.ReadLine();

if (name == ""John"")
    Console.WriteLine(""Hello John!"");
else if (name == ""Sarah"")
    Console.WriteLine(""Good morning Sarah!""); 
else
    Console.WriteLine(""Hi there!"");"
"Create a code to input a 2D matrix and output 
the sum of each row.
[[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]","def row_sum(matrix):
    row_sums = []
    for row in matrix:
        row_sum = 0 
        for col in row:
            row_sum += col
        row_sums.append(row_sum)
    return row_sums
    
row_sum(matrix)"
"Design a function in Python to calculate the area of an equilateral triangle.
","def triangle_area(side):
 return side * (side ** 0.5) / 2"
"Print the numbers in a Fibonacci series with a loop.
","# Fibonacci Series using a loop
# the first two numbers of the Fibonacci series is 0 and 1

a = 0
b = 1

print(a)
print(b)

for i in range(10):
    c = a + b
    a = b
    b = c
    print(c)"
"Convert the given hashmap ['name1': 'value1', 'name2': 'value2' ] to JSON.
","{
  ""name1"": ""value1"", 
  ""name2"": ""value2""
}"
"Write a SQL query to find all customers who did not place an order in the last 3 months.
","SELECT * FROM Customers
WHERE CustomerId NOT IN (
	SELECT CustomerId FROM Orders
	WHERE ORDERDATE > DATEADD(MONTH, -3, GETDATE())
)"
"Parse the following text and remove all non-alphanumeric characters
Hello$#@, this is a te*x&t","text = 'Hello, this is a text'
out_text = re.sub('[^a-zA-Z0-9]', '', text)
print(out_text)"
"Evaluate the following arithmetic expression with Python.
15 * (2 + 7)",195
"Create a script that prints the prime numbers up to a given integer n.
","def printPrimesUpTo_n(n):

    while n > 1:
        if not (n % 2 and n > 2):
            flag = False
            for i in range(2, int(n**0.5) +1):
                if not n % i:
                    flag = True
                    break
            if not flag:
                print(n)
        n -= 1"
"Reverse the characters in the following string: “Hello World”
","""dlroW olleH"""
"Find all words that contain the string ""ed"" in the provided text.
She's a very dedicated person, who always tries to get the job done.","dedicated, tried"
"Develop a program to determine if a given year is a leap year.
year = 2024","# Determining if a year is a leap year

# Assigning the current year
year = 2024

# Checking if the year is a leap year
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    print(year, ""is a leap year"")
else:
    print(year, ""is not a leap year"")"
"Write a function that takes a two-dimensional array and flattens it into an one-dimensional array.
","def flatten(arr):
    return [item for row in arr for item in row]"
"Detect if the given URL contains a query string.
url = https://www.example.com/?food=burger",True
"Create a function ""getGrade"" to get a grade based on a numeric score.
","def getGrade(score):
    if score >= 90:
        return ""A""
    elif score >= 80:
        return ""B""
    elif score >= 70:
        return ""C""
    elif score >= 60:
        return ""D""
    else:
        return ""F"""
"Convert a given number from binary to hexadecimal using C programming language.
10101","#include <stdio.h>
#include <math.h>

int main()
{
    int binary=10101;
    int decimal=0, i=0, rem;
    while (binary!=0)
    {
        rem=binary%10;
        decimal=decimal+rem*pow(2,i);
        binary=binary/10;
        ++i;
    }
    printf(""The hexadecimal equivalent is : %x"", decimal);
    return 0;
}"
"Create a regular expression to extract a string of 8 alphanumeric characters.
","import re 

my_regex = re.compile(r'[a-zA-Z0-9]{8}')"
"Write a Python script to find the maximum depth of a given nested list.
nested_list = [[1,2], [3,4], [5,6,7]]","def max_depth_of_nested_list(nested_list):
    max_depth = 1
    for inner_list in nested_list:
        depth = 1
        if type(inner_list) == list:
            depth += max_depth_of_nested_list(inner_list)
        max_depth=max(depth, max_depth)
    return max_depth"
"Create a JavaScript code snippet to check the validity of a credit card number.
credit_card_number = ‘1234567891234567’","function validateCardNumber(credit_card_number) {
  // remove any non-digits
  var card_number = credit_card_number.replace(/\D/g, '');

   // add odd digits in even length strings or even digits in odd length strings
  var sum = 0;
  for (var i = 0; i < card_number.length; i++) {
    var intVal = parseInt(card_number.substr(i, 1));
    if (i % 2 == 0) {
      intVal *= 2;
      if (intVal > 9) {
        intVal = 1 + (intVal % 10);
      }
    }
    sum += intVal;
  }
  // If the result is divisible by 10, the card number is valid
  return (sum % 10 == 0);
}

console.log(validateCardNumber(credit_card_number))"
"Write a C++ program that displays the following text.
","#include<iostream>

int main(){ 
  std::cout << ""Hello GPT Community!""<< std::endl;
  return 0;
}"
"You need to complete the following code snippet to display 'hello world' on the console.
","print(""Hello world"")"
"Make a valid http request call with the following parameters
url = 'www.example.com'
Method = 'GET'
Header = 'Content-Type:application/json'","import requests

url = 'www.example.com'
headers = {'Content-Type':'application/json'}
r = requests.get(url, headers=headers)"
"Build a CNN model in Keras to detect cancer from a provided dataset.
","# Importing the libraries
from keras.models import Sequential
from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense

# Initialising the CNN
classifier = Sequential()

# Step 1 - Convolution
classifier.add(Conv2D(32, (3, 3), input_shape = (64, 64, 3), activation = 'relu'))

# Step 2 - Pooling
classifier.add(MaxPooling2D(pool_size = (2, 2)))

# Adding a second convolutional layer
classifier.add(Conv2D(32, (3, 3), activation = 'relu'))
classifier.add(MaxPooling2D(pool_size = (2, 2)))

# Step 3 - Flattening
classifier.add(Flatten())

# Step 4 - Full connection
classifier.add(Dense(units = 128, activation = 'relu'))
classifier.add(Dense(units = 1, activation = 'sigmoid'))

# Compiling the CNN
classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

# Part 2 - Fitting the CNN to the images

from keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(rescale = 1./255,
                                   shear_range = 0.2,
                                   zoom_range = 0.2,
                                   horizontal_flip = True)

test_datagen = ImageDataGenerator(rescale = 1./255)

training_set = train_datagen.flow_from_directory('dataset/training_set',
                                                 target_size = (64, 64),
                                                 batch_size = 32,
                                                 class_mode = 'binary')

test_set = test_datagen.flow_from_directory('dataset/test_set',
                                            target_size = (64, 64),
                                            batch_size = 32,
                                            class_mode = 'binary')

classifier.fit_generator(training_set,
                         samples_per_epoch = 8000,
                         nb_epoch = 25,
                         validation_data = test_set,
                         nb_val_samples = 2000)"
"Write code to create a new array with elements that are the doubled values of each element in the original array.
let nums = [1, 2, 3, 4];",let doubledNums = nums.map(x => x * 2);
"Create a function in C to replace all the given characters in a string with a given character.
String1 = ""Hello World"", Character1 = 'o', Character2 = '*'","char *replaceCharacter(char *str, char o, char *) 
{ 
    int i = 0; 
    while (str[i] != '\0') { 
        if (str[i] == o) 
            str[i] = *; 
  
        i++; 
    }return str; 
}  

// Driver Program 
int main() 
{ 
    char str[] = ""Hello World""; 
    printf(""%s"", replaceCharacter(str, 'o', '*')); 
    return 0; 
}"
"Edit the following Java code snippet to increase efficiency
public class MyClass {
    public static void main(String[] args) {
        int i = 0;
        while (i < 10) {
           i++;
           System.out.println(i);
        }
    }
}","public class MyClass {
    public static void main(String[] args) {
        //Set the counter to 1
        int i = 1;
        //Use less than or equal comparison to include 10
        while (i <= 10) {
           //short-hand increment
           i++;
           System.out.println(i);
        }
    }
}"
"Create a Java program to compare two strings and check if they are equal or not.
String s1 = ""Hello"";
String s2 = ""World"";","public static boolean compareStrings(String s1, String s2) {
    return s1.equals(s2);
}"
"Generate a valid Java code for a for loop to count from 5 to 10.
","for(int i=5; i<=10; i++) {
    System.out.println(i);
}"
"Go through the following code and create test cases for it.
def reverse_string(string):
  rev_str = """"

  # Loop through the string in reverse order
  for i in range(len(string)-1, -1, -1):
    rev_str += string[i]

  return rev_str","import unittest

class ReverseStringTests(unittest.TestCase):
    def test_reverse_string_with_single_character_string(self):
        result = reverse_string(""a"")
        self.assertEqual(result, ""a"")

    def test_reverse_string_with_even_length_string(self):
        result = reverse_string(""hello"")
        self.assertEqual(result, ""olleh"")

    def test_reverse_string_with_odd_length_string(self):
        result = reverse_string(""world"")
        self.assertEqual(result, ""dlrow"")


if __name__ == '_main_':
unittest.main()"
"Filter out the integers from the list that are divisible by 6.
nums = [1, 2, 4, 6, 7, 8, 10, 12, 14, 18]","nums = [1, 2, 4, 6, 7, 8, 10, 12, 14, 18]

def filter_divisible_by_6(nums):
    return [num for num in nums if num % 6 == 0]

print(filter_divisible_by_6(nums))"
"Create an HTML table that contains the following string values and rows.
Header1 Header2
Value1A Value1B
Value2A Value2B
Value3A Value3B","<table>
   <tr>
      <th>Header1</th>
      <th>Header2</th>
   </tr>
   <tr>
      <td>Value1A</td>
      <td>Value1B</td>
   </tr>
   <tr>
      <td>Value2A</td>
      <td>Value2B</td>
   </tr>
    <tr>
      <td>Value3A</td>
      <td>Value3B</td>
   </tr>
</table>"
"Write a SQL code to generate a new table called ""Customers"" by selecting all columns from the ""Orders"" table.
","SELECT *
INTO Customers
FROM Orders;"
"Write a Node.js program to accept a user input and print it in the console.
","const readline = require('readline');
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});
  
rl.question('Please enter your input: ', (answer) => {
  console.log(`You entered: ${answer}`);
  rl.close();
});"
"Construct a for loop in Python to iterate through the items in the list and print their corresponding index.
lst = [1,2,3]","for i, num in enumerate(lst):
    print(i, num)"
"What is the difference between an unsigned int and a signed int in C language?
",Signed integers in C language can store both negative and positive values (from -2^31 to 2 ^31 - 1). Unsigned integers in C language can only store positive values (from 0 to 2^32 - 1). This means that a signed int is half the size of an unsigned int. It also means that a signed int ranges from -2^31 to 2^31 - 1 while an unsigned int can range from 0 to 2^32 - 1.
"Edit the following code so that it prints out all powers of 2 up to 2^n
n = 5","def power_of_2(n):
    result = 1
    for i in range(n):
        print(result)
        result *= 2"
"Retrieve a random record from a MySQL table.
Table Name: MemberTable",SELECT * FROM MemberTable ORDER BY RAND() LIMIT 1;
"Write a Python program to find the four letter words from a given list.
[""tree"", ""door"", ""apple"", ""ball"", ""house"", ""cat"", ""wood""].","""""""
A Python program to find the four letter words from a given list
""""""

# Initializing the list 
words = [""tree"", ""door"", ""apple"", ""ball"", ""house"", ""cat"", ""wood""] 

# Using list comprehension to extract four letter words 
four_letter_words = [word for word in words if len(word) == 4] 

# Printing the four letter words 
print(""Four letter words:"", four_letter_words)"
"Create a CSS class called ""button"" to style a button
",".button {
    display: inline-block;
    padding: 0.5rem;
    font-size: 1rem;
    background-color: #1e85e7;
    color: #fff;
    border-radius: 0.25rem;
    border: 0;
    cursor: pointer;
}"
"Create a SQL query that prints a list of customers and the total amount they have purchased.
Table 1: Customer
-   Name
-   Address

Table 2: Order
-   Customer Name
-   Order Amount","SELECT c.Name, SUM(o.OrderAmount) AS TotalPurchased 
FROM Customer c 
LEFT JOIN Order o ON c.Name = o.CustomerName 
GROUP BY c.Name"
"Edit the following HTML to give a baseline styling to the body.
<body>
    <h2>Hello World</h2>
</body>","<body style=""margin: 0; padding: 0; font-family: sans-serif; box-sizing: border-box; font-size: 16px; line-height: 1.5; background-color: #f5f5f5; color: #222222;"">
    <h2>Hello World</h2>
</body>"
"Design a Python program which prints the elements in reverse order
my_list = [1,2,3,4,5]","def print_reverse(my_list):
    for i in range(len(my_list)-1, -1, -1):
        print(my_list[i])

print_reverse(my_list)"
"Write a function in JavaScript to truncate a string to a given length.
","function truncateString(str, num) {
  if (str.length <= num) {
    return str;
  }
  return str.slice(0, num) + ""..."";
}"
"Create a function to format a given list of numbers with commas as thousands separators.
","def format_numbers(nums):
    formatted_nums = []
    for num in nums:
        formatted_nums.append(""{:,}"".format(num))
    return formatted_nums"
"Develop a code in R that returns the maximum from a list.
","#function to return maximum
max <- function(x)
{
  max_num <- 0 #Initialize maximum number
  for (i in x)
  {
    if (i > max_num)
    {
      max_num <- i
    }
  }
  return (max_num)
}
 
#Test
list <- c(10, 30, 20, 5, 100)
maximum <- max(list)
print(maximum)"
"What is the difference between a sequential and a parallel collection?
","The difference between a sequential and a parallel collection is the way in which data is processed. A sequential collection is processed one item at a time, from start to finish in a single thread. A parallel collection is processed in chunks at the same time, using multiple threads. The main advantage of using a parallel collection is that it can take advantage of multiple cores in a processor, allowing for faster data processing."
"Given an integer N, write a code that finds the next palindrome of N.
N = 187",next_palindrome = 191
"Create a Python program to accept a string from the user and print out the number of vowels in the string.
Hello World","def countVowels(str): 
	vowel = 0
	for i in str: 
		if i.lower() in ['a', 'e', 'i', 'o', 'u']: 
			vowel += 1
	return vowel 

# Driver code 
str = ""Hello World""
print(""Number of vowels are:"", countVowels(str))"
"Modify the following HTML to create a link that opens in a new window.
<a href=""www.example.com"">Example Link</a>","<a href=""www.example.com"" target=""_blank"">Example Link</a>"
"Select all rows in a pandas dataframe where at least one value exists in the column named ‘name’.
",selected_rows = df[df.name.notnull()]
"Rewrite the following code so that it is more efficient.
odds = []
for num in range(10):
 if num % 2 != 0:
 odds.append(num)",odds = [num for num in range(10) if num % 2 != 0]
"Develop a formula in JavaScript to calculate the area of a circle.
radius  = 10","const pi = 3.14;

const areaCircle = (radius) => {
  return pi * (radius * radius);
}

console.log(areaCircle(radius));"
"Reverse an array of integers using Python.
arr = [1, 2, 3, 4, 5]","arr = [1, 2, 3, 4, 5]
 
# reversing the array
arr.reverse()
 
# print the reversed array
print(arr)
 
# Output:
[5, 4, 3, 2, 1]"
"Create a code that removes all duplicate elements in a given array.
Array: [5, 10, 5, 7, 10]","def unique_elements(arr): 
    new_arr = [] 
    for i in arr:
        if i not in new_arr: 
            new_arr.append(i) 
    return new_arr 
  
arr = [5, 10, 5, 7, 10] 

print(unique_elements(arr)) # [5, 10, 7]"
"Write a JavaScript statement to create a pop-up window.
","alert(""This is a pop-up window"");"
"Write a JavaScript function to capitalize the first letter of each word in a string.
String: ""This is an example"".","function capitalizeFirstLetter(str) {
    return str.replace(/\w\S*/g, function(txt) {
        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
    });
}
capitalizeFirstLetter('This is an example');"
"Suggest a way to solve the following problem in Python: extracting the last element from a given list.
","A convenient way to extract the last element from a given list in Python is to use negative indexing. This allows you to access the last element of a list by using the index -1. For example, the following code will return the last element of the list ""my_list"": 

my_last_element = my_list[-1]"
"Write a SQL query to get the top 5 employees with the highest salary in the company.
","SELECT * 
FROM Employees 
ORDER BY Salary DESC 
LIMIT 5;"
"Design a MySQL query to find the number of distinct entries in a table.
",SELECT COUNT(DISTINCT(*) FROM table_name;
"Given a String and a list of words, write a Python program to determine if the String is a sequence of any of the words in the list.
string = ""thequickbrownfox"" 
words_list = [""the"", ""quick"", ""brown"", ""fox""]","def is_valid_sequence(string, words_list):
    str_index = 0
    for word in words_list:
        if len(string[str_index:]) < len(word):
            return False
        if string[str_index:str_index+len(word)] != word:
            return False
        str_index += len(word)
    return True"
"Create a style sheet in CSS to change the font size and font family of a text element with an id of ""example_text"".
","#example_text {
  font-size: 20px;
  font-family: Arial, sans-serif;
}"
"Modify the program to take a given list of integers and returns the maximum and minimum values.
list_of_numbers = [3, 8, -1, 5]","def min_max(list_of_numbers):
    min = list_of_numbers[0]
    max = list_of_numbers[0]
    for number in list_of_numbers:
        if number > max:
            max = number
        elif number < min:
            min = number
    return min, max"
"Generate an SQL query that will combine two tables.
table A with 2 columns (id and name) and 2 rows (1, Tom) (2, Abigail) 
table B with 2 columns (id and address) and 2 rows (1, USA) (2, Canada)","SELECT A.id, A.name, B.address 
FROM A 
INNER JOIN B 
ON A.id = B.id"
"Create a data visualization comparing the population of California and New York.
","import matplotlib.pyplot as plt 
  
# X axis values 
x = ['California', 'New York'] 
# Y axis values 
pop = [39.56, 19.45] 
  
# plotting bars  
plt.bar(x, pop) 
  
# Naming the x-axis 
plt.xlabel('State') 
# naming the y-axis 
plt.ylabel('Population') 
  
# giving a title to the figure 
plt.title('California vs. New York Population') 
  
# function to show the plot 
plt.show()"
"Create a module in Python to read webpages into the program
","import urllib

def read_webpage(url):
    with urllib.request.urlopen(url) as response:
        return response.read()"
"Create a variable in Java for storing a user's first name.
",String firstName;
"Calculate the number of valid permutations of length n with respect to a given set of n distinct elements.
n=5","#Calculate the number of valid permutations of length n with respect to a given set of n distinct elements.

def num_permutations(n):
    if n == 0:
        return 0
    else:
        return math.factorial(n)

if __name__ == '__main__':
    print(num_permutations(5))"
"Find the most occurring item from a given list.
input_list = [1,2,2,3,3,3,4,4,4,4]","from collections import Counter

input_list = [1,2,2,3,3,3,4,4,4,4] 
most_occurring_item = Counter(input_list).most_common(1)
print(most_occurring_item)"
"Create a Java class to find all substrings of a given string.
String str = ""Hello World""","public class SubstringFinder {

    public static List<String> findSubstrings(String str) {
        List<String> substrings = new ArrayList<>();

        for (int i = 0; i < str.length(); i++) {
            for (int j = i + 1; j <= str.length(); j++) {
                String substr = str.substring(i, j);
                substrings.add(substr);
            }
        }
        return substrings;
    }
}

String str = ""Hello World"";
SubstringFinder.findSubstrings(str);"
"Generate a JavaScript function to perform binary search for a given array.
","function binarySearch(array, target) {
  // Initialize variables
  let left = 0;
  let right = array.length - 1;

  // Iterate while left <= right 
  while (left <= right) {
    // Get middle index
    let mid = left + Math.floor((right - left) / 2);

    // Match found
    if (array[mid] === target) {
      return mid;
    }

    // If target is smaller than the array element at mid
    if (target < array[mid]) {
      right = mid - 1;
    }
    // Target is greater than the element at mid
    else {
      left = mid + 1; 
    }
  }

  // We reach here when target is not found
  return -1;
}"
"Program a function to convert a given string with no spaces to a string with underscores (_) in all spaces between words.
HelloWorld",Hello_World
"Write a function that takes a string, a key and a value as parameters and replaces all occurrences of the key with the value in the string.
s = ""This is a sample sentence with some keys to replace.""
key = ""keys""
value = ""words""","def replace_key_value(s, key, value):
  replacedStr = s.replace(key, value) 
  return replacedStr"
"Write a bash script that searches for a given text string in a directory tree recursively.
","#!/bin/bash

search_string=""text string""
directory=""directory_name""

#searching for text string recursive in the directory
grep -rnw $directory -e ""$search_string"""
"Output the top 5 most common strings in a given list of strings.
[""apple"", ""orange"", ""apple"", ""banana"", ""apple"", ""cherry"", ""banana""]","from collections import Counter
word_freq = Counter([""apple"", ""orange"", ""apple"", ""banana"", ""apple"", ""cherry"", ""banana""])
words = word_freq.most_common(5)
for word, freq in words:
    print(word, freq)

Output:
apple 3
banana 2
orange 1
cherry 1"
"Create a dictionary and parse the following JSON object into it.
{
  ""name"": ""John Doe"",
  ""age"": 34,
  ""hobbies"": [""reading"", ""cycling"", ""movies""],
  ""address"": {
    ""city"": ""London"",
    ""country"": ""United Kingdom""
  }
}","data = {
  ""name"": ""John Doe"",
  ""age"": 34,
  ""hobbies"": [""reading"", ""cycling"", ""movies""],
  ""address"": {
    ""city"": ""London"",
    ""country"": ""United Kingdom""
  }
}

# Parse the json to a dictionary
dictionary = json.loads(data)"
"Sum the numbers in the given array using reduce.
numbers = [1, 2, 3, 4, 5]","# Sum the numbers in the given array using reduce
from functools import reduce

sum = reduce(lambda x, y: x + y, numbers)

print(sum) # Output: 15"
"Write a Python script to check if two string variables are anagrams or not.
","def is_anagram(str1, str2):
    # removing all whitespace from strings 
    str1 = ''.join(str1.split())
    str2 = ''.join(str2.split()) 

    # create list for each string 
    list_str1 = list(str1.upper()) 
    list_str2 = list(str2.upper()) 

    # sort the list 
    list_str1.sort() 
    list_str2.sort() 

    # checking if both lists are identical or not 
    if (list_str1 == list_str2): 
        return True
    else: 
        return False"
"Convert the following timestamp to ISO 8601 format
1579183000","import time

def timestamp_to_iso8601(timestamp):
    """"""Convert the given timestamp to ISO 8601 format""""""
    return time.strftime('%Y-%m-%dT%H:%M:%SZ', time.localtime(timestamp))"
"Construct a function in Java to validate whether an input integer is a prime number.
int n = 7","public static boolean isPrime(int n) 
{ 
    // Corner case 
    if (n <= 1) 
        return false; 
  
    // Check from 2 to n-1 
    for (int i = 2; i < n; i++) 
        if (n % i == 0) 
            return false; 
  
    return true; 
}"
"Calculate the least common denominator of 6 and 8.
",24
"Create a SQL query that returns the average number of orders per month for customers in California.
","SELECT AVG(NumOrders) FROM 
 (SELECT COUNT(OrderId) AS NumOrders 
  FROM Orders 
  WHERE State = 'CA' 
  GROUP BY MONTH(OrderDate)) AS TotalOrders;"
"Create a Python class called Employee which contains the employee id and the name.
","# define the Employee class
class Employee:
    # construct a new Employee instance
    def __init__(self, id, name):
        self.id = id
        self.name = name

# create a new Employee object
employee1 = Employee(1, ""John Doe"")

# access the employee id and name
print(employee1.id)
print(employee1.name)"
"Given a Python list, display the total number of elements in the list.
mylist = [1, 2, 3, 4, 5]",The total number of elements in the list is 5.
"Write a method to parse a URL query string.
url: https://www.example.com/?sort=alphabetical&order=asc&search=something","def parse_query_string(url):
    # extracting the query string
    query_str = url.split(""?"")[1]
    query_param = query_str.split(""&"")

    # create dictionary from query string
    result_dict = {}
    for q in query_param:
        key, value = q.split('=')
        result_dict[key] = value

    return result_dict"
"Write a java code to accept a student name and display a greeting.
","import java.util.Scanner;

public class GreetStudent {
    public static void main(String[] args) {
        // Create a Scanner object
        Scanner scanner = new Scanner(System.in);
  
        // Accept a student name
        System.out.println(""Please enter student name:"");
        String studentName = scanner.nextLine();

        // Display a greeting
        System.out.println(""Hello, "" + studentName + ""!"");
    }
}"
"Write a Go program that prints the numbers from 1 to 100, replacing any number divisible by 4 with ""Four"".
","package main

import ""fmt""

func main() {
    // Iterate from 1 to 100
    for i := 1; i <= 100; i++ {
        // If the number is divisible by 4, print ""Four""
        if i%4 == 0 {
            fmt.Println(""Four"")
        // Otherwise print the number
        } else {
            fmt.Println(i)
        }
    }
}"
"Generate a 10 digit random number using a JavaScript function
",Math.floor(Math.random()*10000000000);
"Create a function to calculate the maximum of two numbers.
","def max_of_two(x, y):
    if x > y:
        return x
    else:
        return y"
"Create a nested dictionary with URLs and titles of 3 different webpages.
","my_dict={
    ""webpage1"": {
        ""url"": ""https://www.example1.org"",
        ""title"": ""Example1.org""
    },
    ""webpage2"": {
        ""url"": ""https://www.example2.com"",
        ""title"": ""Example2.com""
    },
    ""webpage3"": {
        ""url"": ""https://www.example3.net"",
        ""title"": ""Example3.net""
    }
}"
"Construct a SQL query to find the list of customers with the highest total of sales.
","SELECT customer.name, SUM(sales.amount) AS total_sales
FROM customer
INNER JOIN sales ON customer.ID = sales.customer_id
GROUP BY customer.name
ORDER BY total_sales DESC;"
"Describe the difference between the 'break' and 'continue' keywords in Python.
","The 'break' keyword is used to end a loop and exit the loop, whereas the 'continue' keyword is used to skip the current iteration and continue with the next iteration."
"Describe how you would use a dictionary to reverse a string.
","A dictionary can be used to reverse a string by mapping each character to its reversed counterpart. Create a dictionary with all the characters from the string as keys and their reversed version as the values. To reverse a string, iterate through it and look up each character in the dictionary and add its value to a new string. Once all the characters have been reversed, the new string is the reversed version of the original."
"Multiply every element of a list and print the result.
myList = [3, 4, 5]","mulp = 1
for i in myList:
    mulp = mulp * i
print(mulp)"
"Write a query to select the employee name and salary whose salary is between 10000 and 50000.
","SELECT name, salary 
FROM employees 
WHERE salary BETWEEN 10000 AND 50000;"
"Create a python program that takes a keyword as an input and prints the top 10 relevant Wikipedia articles for that keyword
","import wikipedia

def get_top_ten_results(keyword):
    results = wikipedia.search(keyword, results=10)
    for result in results:
        print(result)"
"Create a web browser automation script in Python to scrape the data from a website.
","from selenium import webdriver

# Create webdriver object
driver = webdriver.Chrome()

# Put target website URL
url = 'https://www.example.com/'

# Navigate to the website
driver.get(url)

# Scrape the data
data = driver.find_elements_by_xpath('//*[@class=""data-class""]')
for element in data:
    print(element.text)

# Close the browser
driver.close()"
"Create a Python class to represent an employee record with fields name and salary.
","class Employee:
    def __init__(self, name, salary):
        self.name = name
        self.salary = salary
    
    def get_name(self):
        return self.name
    
    def get_salary(self):
        return self.salary"
"What is the cosine similarity between two vectors?
","Cosine similarity is a measure of similarity between two non-zero vectors of an inner product space that measures the cosine of the angle between them. It is a normalized measure of similarity, ranging from -1 (completely different) to 1 (exactly similar). The cosine similarity is given by the dot product of the two vectors divided by their magnitudes."
"Generate a Python program that creates a list of numbers from 1 to 10.
","# Create a list of numbers from 1 to 10
numbers = list(range(1, 11))
print(numbers)"
"Replace all words with 4 letters or more with ""*****"" in the following text.
This is an example of text.",This is an ***** of *****.
"Create a program that reads a list of integers and returns the highest prime number in the list.
","def get_highest_prime(numbers):
  highest_prime = 0
  for num in numbers:
    for i in range(2, num): 
      if (num % i == 0): 
        break
    else:
      highest_prime = max(highest_prime, num)
  return highest_prime"
"Create a Java program that takes two numbers and prints out the larger number.
Number 1: 6
Number 2: 8","public class Program {
  public static void main(String[] args) {
    int num1 = 6;
    int num2 = 8;
    if (num1 > num2) {
        System.out.println(num1);
    } else {
        System.out.println(num2);
    }
  }
}"
"Re-write this algorithm in pseudo-code.
def checkEven(number): 
	if(number % 2 == 0): 
		return True
	else: 
		return False","function checkEven(number)
	if number modulo 2 = 0
		return true
	else
		return false
end function"
"Write a function to convert an array of strings to an array of floats.
string_arr=['1.1', '2.3', '3.4']","def array_to_floats(string_arr):
    # Create an array to store the float values
    float_arr = []
    # Iterate over the given array and convert to float
    for s in string_arr:
        float_arr.append(float(s))
    # Return the new array
    return float_arr

string_arr=['1.1', '2.3', '3.4']
result = array_to_floats(string_arr)
print(""The array as floats is:"", result)"
"Create an array of 5 unique numbers between 1 and 15.
","[1, 7, 10, 11, 15]"
"Recognize the type of error in the given code and provide which line of code is causing the error.
def divide(numerator, denominator):
    return numerator / denominator

number = int(input(""Enter a number: ""))
    result = divide(100, number)",Line 4 is causing a syntax error due to improper indentation.
"Provide an example of a query to find all users whose age is 16 or over.
","SELECT * FROM Users
WHERE age >= 16;"
"Edit the given Bash script to output only the lines with double digit numbers.
#!/bin/bash
numlist=""25 3 1 2 46 4 5 21 7 9 6 10""
for i in $numlist
do
    echo ""Number $i""
done","#!/bin/bash
numlist=""25 3 1 2 46 4 5 21 7 9 6 10""
for i in $numlist
do
    if [[ $i =~ [0-9][0-9] ]]
    then
    echo ""Number $i""
    fi
done"
"Generate a random string of 10 characters that contains only lowercase letters.
",hcuqwhvqme
"Create a swift class that describes a flower.
","class Flower {
	var name: String
	var petals: Int
	var petalColor: String
	var pollenColor: String
    
    init(name: String, petals: Int, petalColor: String, pollenColor: String) {
            self.name = name
            self.petals = petals
            self.petalColor = petalColor
            self.pollenColor = pollenColor
        }
}"
"Construct an SQL query that returns records for users with a name starting with the letter 'S' or 'T'.
Table Name: users","SELECT * 
FROM users 
WHERE name LIKE 'S%' OR name LIKE 'T%';"
"You need to program a function to calculate the dot product of two arrays.
array1=[1, 2, 3]
array2=[-1, 0, 4]",7
"Write a function to output ""Thank you"" three times.
","def say_thanks():
	for i in range(3):
		print(""Thank you"")"
"Develop a python program to search for a substring in a string.
String = ""This is a sample string""
Substring = ""sample""","def search_substring(string, substring):
    start = 0
    index = -1

    while start < len(string):
        i = string.find(substring, start)
        if i == -1:
            break
        else:
            index = i
            start = i + 1

    return index"
"Write a JavaScript function to find all words in a string.
This is a string","function findWords(str) { 
    let words = []; 
    let start = 0; 

    for (let i = 0; i < str.length; i++) { 
        if (str[i] == ' ') { 
            let word = str.substring(start, i); 
            if (word != '') 
                words.push(word); 
            start = i + 1; 
        } 
    } 
  
    let lastWord =  str.substring(start, str.length); 
    if (lastWord != '') 
        words.push(lastWord); 

    return words; 
}"
"Describe what a condition in a while loop does in Python.
","A condition in a while loop in Python allows code to be executed repeatedly until a certain condition is met. While the condition is true, the code inside the loop is executed and if the condition is false, the loop is exited. This allows for a loop to continue running until a certain condition is met."
"Explain why the use of a loop is often the best solution for a problem.
","Loops are often the best solution for a problem because they allow you to repeat a code block multiple times until a specific condition is met. By using a loop, you can save time and energy while also increasing the program's efficiency. Loops also make it easier to handle large data sets and complex tasks."
"Modify the following Python code to print the program output unique and ordered.
x = [1, 2, 3, 4, 4, 3, 1]
print(x)","x = [1, 2, 3, 4]
y = list(set(x))
y.sort()
print(y)"
"Create a dictionary of the declared states of India.
","states_dict = { 
    'Maharashtra': 'Maharashtra', 
    'Tamil Nadu': 'Tamil Nadu', 
    'Karnataka': 'Karnataka', 
    'Uttar Pradesh': 'Uttar Pradesh', 
    'Rajasthan': 'Rajasthan', 
    'Gujarat': 'Gujarat', 
    'Madhya Pradesh': 'Madhya Pradesh', 
    'Bihar': 'Bihar', 
    'West Bengal': 'West Bengal', 
    'Andhra Pradesh': 'Andhra Pradesh', 
    'Haryana': 'Haryana', 
    'Assam': 'Assam', 
    'Jammu and Kashmir': 'Jammu and Kashmir', 
    'Kerala': 'Kerala', 
    'Odisha': 'Odisha', 
    'Telangana': 'Telangana', 
    'Punjab': 'Punjab', 
    'Goa': 'Goa', 
    'Tripura': 'Tripura', 
    'Jharkhand': 'Jharkhand', 
    'Chandigarh': 'Chandigarh', 
    'Himachal Pradesh': 'Himachal Pradesh', 
    'Uttarakhand': 'Uttarakhand', 
    'Ladakh': 'Ladakh'
}"
"Create a regex expression to find a date format of ""yyyy-mm-dd"".
",\d{4}-\d{2}-\d{2}
"Implement a function to generate the Fibonacci series upto 'n' terms.
n = 10","def Fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b"
"Generate a program in Python that takes two parameters and prints the result of their addition.
","def add_two_numbers(a, b):
    return a + b"
"Create a cryptography program that computes the factorial of a given number.
num = 5","def factorial(n):
    if n == 0:
        return 1
    return n * factorial(n-1)

if __name__ == '__main__':
    num = 5
    result = factorial(num)
    print(result)"
"What is the complexity class of the below Python code snippet for adding an item to a list?
list = [1, 2, 3]
list.append(4)",The complexity class of this code snippet is O(1) since appending an item to a list has constant time complexity.
"Create an R script to calculate the correlation between two numerical vectors, x and y.
x = c(1, 2, 4, 5)
y = c(2, 4, 6, 10)","x <- c(1,2,4,5)
y <- c(2,4,6,10)
cor(x, y)"
"Subtract two numbers and return the result.
97, 42",55
"Formulate an SQL query to make this table:
Table: books

book_id | book_title | book_edition
------------------------","CREATE TABLE books (
    book_id INTEGER PRIMARY KEY,
    book_title VARCHAR(50),
    book_edition VARCHAR(50)
);"
"Use the NLTK library to tokenize the following sentence.
sentence = ""This is a sentence.""","import nltk

sentence = ""This is a sentence.""

tokens = nltk.word_tokenize(sentence)

print(tokens) # Output: ['This', 'is', 'a', 'sentence', '.']"
"Create a Swift program to display the letters of the English alphabet in ascending order.
","let letters = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""
for letter in letters {
    print(letter)
}"
"Return the index of the value if it is present in the list or -1 if it is not present.
","def search(lst, val):
    for i in range(len(lst)):
        if lst[i] == val:
            return i
    return -1"
"Write a code to remove the duplicates from a given list.
mylist = [1,2,3,1,2]","""""""
Write a code to remove the duplicates from a given list
""""""

# List containing the elements
mylist = [1,2,3,1,2]

# Creating a new list with unique elements
unique_list = list(set(mylist))

# Printing the new list
print(""New list with unique elements is {}"".format(unique_list))"
"Write a PL/SQL query to display the sum of salaries of all the employees in a given department.
",SELECT SUM(salary) FROM employees WHERE department = 'department_name';
"Explain what a trisection algorithm is.
",A trisection algorithm is a method used to divide an interval into three equal parts. It involves dividing a closed interval into three parts using only two points that lie in the original interval. It is useful for quickly finding roots of equations as the points at each division become closer and closer to the root. The method can be applied in a number of applications such as numerical analysis and optimization.
"Explain the purpose of using variable names in program code.
","Variable names are used in programming code to identify specific pieces of data and make it easier to access and manipulate. They provide a concise way to reference a specific value, making the code more readable and understandable for other programmers."
"Create a JavaScript function that takes two parameters, an integer and a character, and returns a string with the character repeated that many times.
2, '#'","const repeatCharacter = (num, character) => {
  let str = '';
  for (let i = 0; i < num; i++) {
    str += character;
  }
  return str;
};

repeatCharacter(2, '#'); // returns '##'"
"What is the data type for the following value ""true""?
","The data type for the value ""true"" is boolean."
"Write a for loop that prints the integers from 100 to 1.
","for i in range(100, 0, -1):
    print(i)"
"Solve the following equation for x.
3x + 4 = 10","x = (10 - 4) / 3 

x = 2"
"Write a Python function that accepts a list and returns the sum of the numbers present in the list.
list = [1, 2, 3, 4, 5]","def list_sum(lst):
    result = 0
    for num in lst:
        result += num
    return result"
"Generate a unique random number in the range of 0 to 100.
",The unique random number in the range of 0 to 100 is 87.
"Design a web page in HTML5 with a heading, a paragraph and a button.
","<!DOCTYPE html>
<html>
<head>
 <title>My Web Page</title>
</head>
<body>
 <h1>This is my title</h1>
 <p>This is some content.</p>
 <button>Click Me!</button>
</body>
</html>"
"Write a for loop for printing the first 10 powers of 2.
","for(let i = 0; i <= 10; i++){
  console.log(2**i);
}"
"Modify the code below to make it calculate the sum of all the numbers from 1 to n.
num = 5
sum = 0
for i in range(num):
  sum += i","num = 5
sum = 0
for i in range(1, num+1):
  sum += i"
"Identify the wrong code in this JavaScript snippet.
let a = ""Hello World!"";
console 'log(a);",console 'log(a); // lacks () parenthesis for the log method of the console object.
"Write a SQL query to find all the users in a database with age greater than 25.
",SELECT * FROM users WHERE age > 25
"Write a query to extract data from a table called ""inventory"" which contains the columns: id, item, quantity
","SELECT id, item, quantity
FROM inventory"
"Write a function in Java that can be used to search an array and return the index of the element.
","public static int searchArray(int[] arr, int x) {
    for(int i = 0; i < arr.length; i++) {
        if (arr[i] == x)
            return i;
    }
    return -1;
}"
"Construct a JavaScript program to find the maximum element in the following array.
[12,3,4,1,26,7]","let arr = [12,3,4,1,26,7];
let max = arr[0];

for(let i=0; i<arr.length; i++) {
    if(arr[i] > max) {
        max = arr[i];
    }
}

console.log(max);    # Output: 26"
"Replace the following if-else statement with a ternary operator.
if n > 0:
  x = n * 10
else:
  x = n * 5",x = n * 10 if n > 0 else n * 5
"What is the maximum value a 32-bit signed integer can represent?
",2147483647
"Write a regular expression that matches URLs that end with "".net"".
","/(.*)\.net$/ // Matches URLs that end with "".net""."
"Create a GUI that displays text and a button.
","import tkinter as tk 

root = tk.Tk() 

tk.Label(root, text='Hello World!').pack() 
tk.Button(root, text=""Click Me!"").pack() 

root.mainloop()"
"Code an R function to compute the running total of a given array of numbers.
[1, 4, 8, 5, 2, 9]","RunTotal <- function(numbers) {
  runningTotal <- 0
  totals <- c()
  for (i in 1:length(numbers)) {
    runningTotal <- runningTotal + numbers[i]
    totals <- c(totals, runningTotal)
  }
  return(totals)
}"
"Create a function to convert a given decimal number to its corresponding hexadecimal value.
","def dec2hex(n):
    return hex(n)[2:]"
"Create a regex pattern to match a string that contains two words separated by a single space.
","import re 
pattern = re.compile(r""\w+\s\w+"")"
"Create a function that evaluates the quadratic equation.
","def quadratic_equation(a,b,c):
   discriminant = pow(b,2)-4*a*c
   if(discriminant < 0):
      return ""No real solutions""
   elif(discriminant == 0):
      return (-b + pow(discriminant, 0.5))/(2*a)
   else:
      return ((-b + pow(discriminant, 0.5))/(2*a), (-b - pow(discriminant, 0.5))/(2*a))"
"Rewrite the following code snippet (written in Java), such that the same purpose is accomplished but with fewer lines of code.
public static void printList(List<String> list) { 
    for (int i = 0; i < list.size(); i++) { 
        System.out.println(list.get(i));  
    } 
}","public static void printList(List<String> list){ 
    list.forEach(s -> System.out.println(s)); 
}"
"Write a JQuery snippet that shows an alert when a user clicks on a button.
","$(""#button"").click(function(){
    alert(""You clicked on the button!"");
});"
"Create a function 'convertStringToInt' that takes a string and converts it into an integer.
","def convertStringToInt(string): 
    convertValue = int(string) 
    return convertValue"
"Write a JavaScript code to valid a password based on the following rules:
","function validatePassword(password) {
  // Minimum 8 characters, one uppercase letter, one lowercase letter, one number, and one special character
  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})/;
  if (password.match(re)) {
    return true;
  }
  return false;
}"
"Write a class in C++ to represent a person with their name and age.
","class Person {
    private:
        string name;
        int age;
    public:
        Person(string n, int a) {
            name = n;
            age = a;
        }
        string getName() {
            return name;
        }
        int getAge() {
            return age;
        }
};"
"Write a Python script to convert the given list of strings into a comma separated string.
[ 'John', 'Julia', 'JeY', 'Jill' ]","list = [ 'John', 'Julia', 'JeY', 'Jill' ]
print( ', '.join(list) )"
"Create a function to search for a given element in a list and output its index.
list_numbers = [1, 2, 3, 4, 5]","def search_list(list_numbers, element):
    for i in range(len(list_numbers)):
        if list_numbers[i] == element:
            return i"
"Write a Java program for removing all white spaces from a given string.
","public class RemoveSpace {
    public static String removeSpace(String str) {
        return str.replaceAll(""\\s"","""");
    }   
    public static void main (String[] args) {
        String str = ""Hello World!""; 

        str = removeSpace(str);

        System.out.println(str); 
    } 
}"
"Convert the following string to an array of characters in Java.
String str = ""Hello World!""",char[] array = str.toCharArray();
"Given two lists of integers, find all unique pairings where the sum of the pair equals to a given number.
list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]
number = 6","3 + 3 = 6
4 + 2 = 6"
"Write an HTML document with a table containing three columns: name, email and phone.
","<html>
 <head>
  <title>Contacts Table</title></title>
 </head>
 <body>
  <table>
   <thead>
    <th>Name</th>
    <th>Email</th>
    <th>Phone</th>
   </thead>
   <tbody>
    <tr>
     <td>John</td>
     <td>john@example.com</td>
     <td>123-456-7890</td>
    </tr>
   </tbody>
  </table>
 </body>
</html>"
"Create a HTML page that contains an unordered list with given items in a given order.
list items: "" Apple  "", "" Orange  "", "" Pineapple""","<html>
    <head>
        <title>Fruits List</title>
    </head>
    <body>
        <ul>
            <li>Apple</li>
            <li>Orange</li>
            <li>Pineapple</li>
        </ul>
    </body>
</html>"
"Write a code to create an object using a class constructor having attributes given in a dictionary.
attributes = {'name': 'John', 'age': 20, 'gender': 'M', 'hobbies': ['books', 'sports']}","class Person:
  def __init__(self, attributes):
    self.name = attributes['name']
    self.age = attributes['age']
    self.gender = attributes['gender']
    self.hobbies = attributes['hobbies']
    
person = Person(attributes)"
"Design a JavaScript function that checks if a number is between 0 and 100.
","function isInRange(num) {
    return num >= 0 && num <= 100;
}"
"Generate CNN-LSTM model in Keras.
","# define CNN model
model_cnn = Sequential([
    Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),
    MaxPool2D(),
    Flatten(),
    Dense(100, activation='relu'),
    Dense(10, activation='softmax')
])

# define RNN model
model_lstm = Sequential()
model_lstm.add(LSTM(128, input_shape=(28, 28, 32)))
model_lstm.add(Dense(100, activation='relu'))
model_lstm.add(Dense(10, activation='softmax'))

# define the model
model = Sequential()
model.add(Convolution2D(32, 3, 3, input_shape=(28, 28, 1), activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(LSTM(128))
model.add(Dense(100, activation='relu'))
model.add(Dropout(.2))
model.add(Dense(10, activation='softmax'))"
"Transform the following SQL query into a NoSQL query for MongoDB.
SELECT *
FROM users
WHERE birthdate < '2020-04-01'",db.users.find({birthdate: {$lt: '2020-04-01'}})
"Create a Java program which takes an integer array as a parameter, sorts the array in ascending order, and returns the sorted array.
[3, 5, 9, 1, 6]","public int[] SortIntegerArray(int[] nums)
{
    Arrays.sort(nums);
    return nums;
}"
"Write an expression in JavaScript to convert a given number of minutes to seconds.
minutes = 55","let minutes = 55;
let seconds = minutes * 60;

console.log(seconds); //3300"
"Write a JavaScript program to classify a given array of strings into two groups- one which contains elements that can be parsed into numbers and one which can't.
","function classify(arr) {
  let nums = [];
  let strs = [];
  arr.forEach(el => {
    if (!isNaN(el)) nums.push(el);
    else strs.push(el);
  });
  return [nums, strs];
}"
"Write code to take two numbers and determine if their product is even.
8, 12","def is_sum_even(num1, num2):
    """"""Checks if the product of two numbers is even or odd.""""""
    sum = num1 * num2
    return sum % 2 == 0

if __name__ == ""__main__"":
    is_even = is_sum_even(8, 12)
    print(""Is the sum even? "", is_even)"
"Create a JavaScript object with two properties and their respective values.
","var myData = {
  name: 'John',
  age: 28
};"
"Create a C++ program to sum two integers and output the value.
2 3","#include <iostream>

int main()
{
    int a = 2;
    int b = 3;
    int sum = a + b;

    std::cout << sum << std::endl;

    return 0;
}"
"Edit this HTML document so the <h1> tag at the top of the page is aligned to the center.
<html>
  <head>
    <title>My Page</title> 
  </head>
  <body>
    <h1>Page Title</h1>
  </body>
</html>","<html>
  <head>
    <title>My Page</title> 
  </head>
  <body>
    <h1 style=""text-align: center;"">Page Title</h1>
  </body>
</html>"
"Write a working SQL query to group employees by city and order by their salary.
Employees Table

| employee_id | name     | city    | salary |
|-------------|----------|---------|--------|
| 1           | Joe      | London  | 50     |
| 2           | Frank    | Paris   | 40     |
| 3           | John     | Madrid  | 30     |
| 4           | Michael  | London  | 60     |","SELECT city, salary 
FROM Employees 
GROUP BY city 
ORDER BY salary DESC"
"Given a string and two words, write a program to find the shortest sub sequence containing both words.
String: the quick brown fox jumps over the lazy dog
Two words: quick and dog","The sequence is ""quick brown fox jumps over the lazy dog""."
"Write a query in SQL to display all records from the 'Users' table.
",SELECT * FROM Users;
"What are the benefits of using a hash table?
","The main benefits of using a hash table are faster search times, insertion/deletion time, and less space required to store data. Hash tables are most commonly used for storing key-value pairs, and can be used to quickly search for a value corresponding to a given key. They also provide a constant time for lookups, even for large data sets."
"Implement a method in JavaScript to concatenate two strings together.
","function concatenate(string1, string2) {
   return string1 + string2;
}"
"Write a HTML code for creating a dropdown list with 3 list items.
","<select>
    <option>Item 1</option>
    <option>Item 2</option>
    <option>Item 3</option>
</select>"
"Perform a linear search in a list named 'mylist' and return the index of the first occurrence of a target value.
mylist = [1, 2, 3, 4, 5, 6, 7]
target = 4","def linear_search(mylist, target):
 for i in range(len(mylist)):
 if mylist[i] == target:
 return i
 return -1"
"Find the greatest number from an array.
arr = [41, 77, 56, 99]","function greatestNumber(arr) { 
    return Math.max(...arr); 
} 
console.log(greatestNumber(arr));"
"Write an SQL query to find the student's average marks in a particular course.
","SELECT student_name, AVG(student_marks)
FROM student_table
GROUP BY student_name"
"Write a Node.js program to generate a random 3-character string.
","const randomString = function() { 
    const alphabet = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""; 
    let str = """"; 
      
    for (let i = 0; i < 3; i++)   
        str += alphabet[Math.floor(Math.random() * alphabet.length)]; 

    return str; 
} 
  
console.log(randomString());"
"Compare the two values, output the greater one.
val1 = ""dog""
val2 = ""cat""","if val1 > val2:
  print(val1)
else:
  print(val2)"
"Generate a class like this using SQLAlchemy.
class Foo:
    id = Column(Integer, primary_key=True)
    bar = Column(String)","from sqlalchemy import Column, Integer, String

class Foo(Base):
    __tablename__ = 'foo'
    id = Column(Integer, primary_key=True)
    bar = Column(String)"
"Create a Bash script which prints out the environment variable $HOME.
","#!/bin/bash 
echo $HOME"
"Create a type with 4 fields, including ""name"", ""address"", ""phone"", and ""email"".
","type ContactInfo {
  name: string;
  address: string;
  phone: string;
  email: string;
}"
"Write a SQL query to select all the books written by a specific author.
author: ""Robert Louis Stevenson""","SELECT * 
FROM books 
WHERE author = ""Robert Louis Stevenson"""
"Write an HTML code snippet for a form to get two inputs: name and email.
","<form>
    <label for=""name"">Name:</label>
    <input type=""text"" id=""name"" name=""name"">

    <label for=""email"">Email:</label>
    <input type=""email"" id=""email"" name=""email"">

    <input type=""submit"" value=""Submit"">
</form>"
"What is the data type of a variable that can only contain boolean values in Python?
",The data type of a variable that can only contain boolean values in Python is a bool.
"Convert the following JSON string into an array.
{""key1"": ""value1"", ""key2"": ""value2""}","[[""key1"", ""value1""], [""key2"", ""value2""]]"
"How to retrieve the data of the first element in a JSON array?
","The data of the first element in a JSON array can be retrieved using the index ""0"". For example, if the JSON array is [""apple"", ""banana"", ""cherry""], then the data of the first element can be retrieved by ""array[0]"". It would return the data ""apple""."
"Modify the following code to get the desired output.
for i in range(1, 7):
    for j in range(1, i):
        print(j)","for i in range(1, 7):
    for j in range(1, i+1):
        print(j, end=' ')
    print()"
"Create a SQL query that searches the database for users with names beginning with the letter 'A'.
Table Name: Users","SELECT * FROM Users 
WHERE name LIKE 'A%';"
"In the accompanying array containing movie ratings, print out only the movies with ratings 8 or greater.
movies = [
    {""title"": ""Toy Story 4"", ""rating"": 8},
    {""title"": ""Joker"", ""rating"": 9},
    {""title"": ""The Lion King"", ""rating"": 7},
    {""title"": ""Avengers: Endgame"", ""rating"": 8},
]","for (const movie of movies) {
  if (movie[""rating""] >= 8) {
    std::cout << movie[""title""] << std::endl;
  }
}

// Output:
// Toy Story 4
// Joker
// Avengers: Endgame"
"Discuss the potential performance impacts of using a Numpy array for a given task
","Using a Numpy array for a given task can potentially have a positive performance impact in terms of memory usage and computation speed. Numpy arrays are stored contiguously in memory, making them much faster to access than an array stored in traditional Python lists whose elements are stored separately. Additionally, when performing element-wise operations, such as mathematical computations across arrays, Numpy arrays can be much faster than using regular Python loops. Since they are stored contiguosly, they benefit from the processor's usage of cache coherency. Therefore, using Numpy arrays can greatly reduce latency and increase the computational performance of a task."
"Evaluate the following expression and report the result
3 * (4 + 2) / 5",5.2
"Implement a simple password validator in Java.
password = ""Password1""","public class PasswordValidator {
    public static boolean validate(String password) {
        if (password.length() < 8) {
            return false;
        }
        boolean containsUpperCase = false;
        boolean containsLowerCase = false;
        boolean containsDigit = false;
        for (int i = 0; i < password.length(); i++) {
            char c = password.charAt(i);
            if (Character.isUpperCase(c)) {
                containsUpperCase = true;
            } else if (Character.isLowerCase(c)) {
                containsLowerCase = true;
            } else if (Character.isDigit(c)) {
                containsDigit= true;
            }
        }
        return containsUpperCase && containsLowerCase && containsDigit;
    }
 
    public static void main(String[] args) {
        String password = ""Password1"";
        System.out.println(validate(password));
    }
}"
"Follow the comments in the code to complete the program which prints a conversion table from Fahrenheit to Celsius.
# This program prints a conversion table from Fahrenheit to Celsius

# Print a heading for the table
# TODO

# Print the column headings
# TODO

# Calculate and print the table body
# TODO","# This program prints a conversion table from Fahrenheit to Celsius

# Print a heading for the table
print(""Fahrenheit to Celsius Conversion Table"")

# Print the column headings
print(""Fahrenheit \t Celsius"")

# Calculate and print the table body
for fahr in range(-50 , 121):
  celsius = (fahr - 32) * 5 / 9
  print(""%3d \t\t %.2f"" % (fahr, celsius))"
"Generate a data set using RandomSample()
","from random import Random

def RandomSample(number_of_samples):
    sample = []
    random_generator = Random()
    for i in range(number_of_samples):
        sample.append(random_generator.random())
    return sample"
"Write a SQL query that will find the records with duplicate email address in the given table.
Users Table
id | name | email
1  | John | john@example.com
2  | Bill | bill@example.com
3  | Mary | mary@example.com
4  | Mary | mary@example.com
5  | Mark | mark@example.com","SELECT email
FROM Users
GROUP BY email
HAVING COUNT(*) > 1;"
"Write an MySQL query to sort the records by the given field in descending order.
field: ""price""",SELECT * FROM products ORDER BY price DESC;
"Write a SQL query to update the value of column b in the table called a.
Table name: a
Columns: a, b

Current state of table a:
a  |  b
1  | 10
2  | 11
3  | 12","UPDATE a
SET b = 20
WHERE a = 3;"
"Create an if statement in Ruby that checks if a given number is a prime number.
","def is_prime?(number)
  if number < 2
    return false
  else
    (2...number).each do |i|
      if number % i == 0
        return false
      end
    end
    true
  end
end"
"Output the maximum element of a list
list = [1, 23, 12, 38, 56, 9]",max_element = 56
"Classify the given text into either positive or negative sentiment.
This movie was one of the worst movies I've ever seen.",Negative sentiment.
"How would you design a system to store and access the stored data when a user makes a request?
","To design a system to store and access the stored data when a user makes a request, we could use a client-server model, where the server provides the user with the requested data. The server would use a database to store the data, and when a user makes a request, the server would retrieve the requested data from the database and send it back to the user."
"Determine how many characters are in a given string.
my_string = ""Hello, world!""","length = len(my_string)
print(length) # 13"
"Suggest some changes to the following code that will reduce the runtime complexity.
def search_array(arr, target):
    '''This function searches a given array for the target and returns its index if found.'''
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1","def search_array(arr, target):
    '''This function searches a given array for the target and returns its index if found.'''
    for i, num in enumerate(arr):
        if num == target:
            return i
    return -1"
"Write a function to print a given character N times.
","def print_n_times(character, times):
    for _ in range(times):
        print(character, end="""")

print_n_times(""*"", 5)"
"Explain why the following code prints ""false"":
print(True is False)","The code prints ""false"" because when you use the 'is' operator on boolean values, it checks whether the two values are the same object or not.
True and False are two different objects in Python and they are not the same, so the expression evaluates to False."
"Write a C++ code to generate a random number in the range 0 - 1000.
","#include <cstdlib> 
#include <time.h>  
  
//Generating random number 
int random_number =  rand() % 1001; 
  
// Print the random number 
cout << random_number;"
"Write CSS code to separate the sidebar from the content by a horizontal line.
","#sidebar {
  border-bottom: 1px solid black;
}

#content {
  border-top: 1px solid black;
}"
"Write a function to join a list of strings using a given character.
","def join_list(list, char):
    return char.join(list)"
"Write a Pyhton program to generate a new list whose elements are the two times of the given list elements.
List = [1, 2, 3, 4, 5]","# Generate a new list whose elements are twice of the given list elements 

list1 = [1, 2, 3, 4, 5] 
   
list2 = [] 
   
# using loop to iterate the elements 
for i in list1: 
    list2.append(i * 2) 
      
# printing the new list 
print(list2)"
"Design a code to divide two integers without using division operator.
38, 4","def divide_without_operator(x, y):
    if x == 0:
        return 0 
  
    sign = 1
    if x * y < 0:
        sign = -1
  
    x = abs(x) 
    y = abs(y) 
  
    result = 0
  
    while (x >= y): 
  
        temp = y 
        i = 1
  
        while (x >= temp): 
            x -= temp 
            result += i 
            i <<= 1 
            temp <<= 1 
  
    return result * sign"
"Write code to find the intersection of two sorted lists
list1 = [1, 3, 4, 6]
list2 = [1, 2, 5, 6]","def find_intersection(list1, list2):
    """"""
    Find the intersection of two sorted lists
    :param list1: the first sorted list
    :param list2: the second sorted list
    :return: a list with elements found in both lists
    """"""
    intersection = []
    p1 = p2 = 0
    while p1 < len(list1) and p2 < len(list2):
        if list1[p1] == list2[p2]:
            intersection.append(list1[p1])
            p1 += 1
            p2 += 1
        elif list1[p1] < list2[p2]:
            p1 += 1
        else:
            p2 += 1
    return intersection

list1 = [1, 3, 4, 6]
list2 = [1, 2, 5, 6]
print(find_intersection(list1, list2))"
"Which of the following statements is/are valid in Javascript?
let x = ""Hello World!"";
let y = 'Hello World!'","Both statements are valid in Javascript. The first statement uses double quotes, while the second statement uses single quotes."
"Summarize the text into a few sentences.
The United Nations (UN) is an intergovernmental organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international co-operation and be a centre for harmonizing the actions of nations. It is the largest, most familiar, most internationally represented and most powerful intergovernmental organization in the world.","The United Nations is a global intergovernmental organization that works to maintain peace and security, foster friendly relations between nations, and promote international cooperation. It is the world's largest and most internationally represented organization, and is capable of powerful action to promote global harmony."
"Write a function in Swift for generating random numbers within a given range.
Min=1, Max=20","func randomNumberInRange(min: Int, max: Int) -> Int {
    return Int.random(in: min...max)
}"
"Create an SQL query to find the names of all students enrolled in a particular course.
table_name = ""students""
course_name = ""Data Science""","SELECT name
FROM students
WHERE course_name = 'Data Science'"
"We want to display a random number between 1 and 10 using Python. Write a program for that.
","import random
randomNumber = random.randint(1, 10)
print(randomNumber)"
"Write a function in PHP that takes one parameter and checks if it is a valid email address.
email_address = ""hello@example.com""","function validateEmail($email_address) {
  if (filter_var($email_address, FILTER_VALIDATE_EMAIL)) {
    return true;
  } else {
    return false;
  }
}

validateEmail(email_address) // returns true"
"Write a code to calculate how many seconds are in 14 hours.
","seconds = 14 * 60 * 60
print(seconds)
Output: 50400 seconds"
"Prompt a clarification from the user when the reply provided is unclear
Input Reply: I don't know","Can you please explain what you mean when you say ""I don't know""?"
"Develop a python code to sort an array of numbers
","def bubble_sort(arr): 
    n = len(arr) 
  
    # Traverse through all array elements 
    for i in range(n): 
  
        # Last i elements are already in place 
        for j in range(0, n-i-1): 
  
            # traverse the array from 0 to n-i-1 
            # Swap if the element found is greater 
            # than the next element 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]"
"Using the data provided, create a function to calculate the mean value of the elements inside the dictionary.
data = {""John"": 8.5, ""Jane"": 9, ""Bob"": 5}","def mean_value(data):
    sum = 0
    count = 0
    for value in data.values():
        sum += value
        count += 1
    
    return round(sum/count, 2)"
"Write a Python for loop to produces the following output:
","for i in range(1, 11):
    print(f""{i}x{i} = {i*i}"")

// Output:
1x1 = 1
2x2 = 4
3x3 = 9
4x4 = 16
5x5 = 25
6x6 = 36
7x7 = 49
8x8 = 64
9x9 = 81
10x10 = 100"
"Write a C++ function to calculate the maximum subarray sum of a given array.
","int maxSumSubArray(vector<int> arr) 
{ 
    int max_so_far = arr[0]; 
    int curr_max = arr[0]; 
  
    for (int i = 1; i < arr.size(); i++) 
    { 
        curr_max = max(arr[i], curr_max+arr[i]); 
        max_so_far = max(max_so_far, curr_max); 
    } 
    return max_so_far; 
}"
"Reverse the words of the sentence ""The quick brown fox jumps over the lazy dog"".
",dog lazy the over jumps fox brown quick The
"How to generate a random string of a given length in Python?
Length: 10","import random
import string

length = 10

x = ''.join(random.choices(string.ascii_letters + string.digits, k=length))
print(x) # 'sbMTWHmfrh'"
"Write an SQL statement to get the top 5 most expensive movies from an inventory table.
","SELECT title, price
FROM inventory
ORDER BY price DESC
LIMIT 5;"
"Write a piece of code to create a new dictionary with the same keys as an existing dictionary, but with the values multiplied by 2.
mydict = {'a': 1, 'b':2, 'c':3}","mydict_doubled = {}
for key, value in mydict.items():
    mydict_doubled[key] = value * 2"
"Build a mobile app with React Native to display the current temperature of a given city.
","import React, { useState, useEffect } from 'react';
import { StyleSheet, Text, View, Platform } from 'react-native';
import { fetchWeather } from './utils/api';

export default function App() {
    const [temp, setTemp] = useState('');

    useEffect(() => {
        fetchWeather('New York City, NY')
            .then(temp => setTemp(temp));
    }, []);

    return (
        <View style={styles.container}>
            <Text>The current temperature in New York City is {temp}°F</Text>
        </View>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        marginHorizontal: 10,
        padding: 20,
        backgroundColor: (Platform.OS === 'ios') ? '#e3e3e3' : '#f3f3f3',
    }
});"
"Formulate a query to select the first names of customers from the customers table.
Table Name: customers","SELECT first_name
FROM customers;"
"Write code to implement the Binary Search algorithm in Python.
","def binary_search(arr, target):
    low, high = 0, len(arr) - 1

    while low <= high:
        mid = low + (high - low)//2
        if arr[mid] == target:
            return mid
        elif arr[mid] > target:
            high = mid - 1
        else:
            low = mid + 1

    return -1  # not found"
"Write an SQL query that finds the most popular product sold today (in terms of quantity), along with the quantity sold.
","SELECT product_name, SUM(quantity)
FROM orders 
WHERE DATE(order_date) = CURDATE()
GROUP BY product_name 
ORDER BY SUM(quantity) DESC
LIMIT 1"
"Write a code to delete the element at a given index in an array
Example array: [4, 5, 6, 7, 8]
Index: 2","let array = [4, 5, 6, 7, 8];
let index = 2;
array.splice(index, 1);
console.log(array);
// Output: [4, 5, 7, 8]"
"Edit this HTML code to add the Google Font “Roboto”.
<!DOCTYPE html>
<html lang=""en"">
<head>
 <meta charset=""UTF-8"">
 <title>My First Web Page</title>
</head>
<body>

</body>
</html>","<!DOCTYPE html>
<html lang=""en"">
<head>
<meta charset=""UTF-8"">
<link href=""https://fonts.googleapis.com/css?family=Roboto&display=swap"" rel=""stylesheet"">
<title>My First Web Page</title>
<style> 
  body {
    font-family: 'Roboto', sans-serif; 
  }
</style>
</head>
<body>

</body>
</html>"
"Given the following code, find the output.
def f(x):
        if x == 0 or x == 1:
            return 1
        return f(x-1) + f(x-2)

print(f(4))",The output of the following code is 3.
"Create an HTML table containing 3 columns and 4 rows.
","<table>
  <tr>
    <td></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td></td>
    <td></td>
    <td></td>
  </tr>
</table>"
"Write a code in Java for creating an instance of an interface.
","MyInterface myInterface = new MyInterface() {
    @Override
    public void myMethod() {
        // Implement your code here
    }
};"
"Create a function that returns a list of all the factors of a given number.
64","def factor(x): 
    factors = []
    for i in range(1, x + 1): 
        if x % i == 0: 
            factors.append(i) 
    return factors

print(factor(64)) # Output: [1, 2, 4, 8, 16, 32, 64]"
"Write a regex to detect valid email addresses.
","^(([^<>()\[\]\\.,;:\s@""]+(\.[^<>()\[\]\\.,;:\s@""]+)*)|("".+""))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$"
"Create a for loop that prints all even numbers from 0 to 10 (inclusive).
","for i in range(0, 11):
    if (i % 2 == 0):
        print(i)"
"Write code to evaluate the following expression in C++.
5 * 4 * 3 * 2 * 1","int result = 5 * 4 * 3 * 2 * 1;
std::cout << ""Result: "" << result << std::endl;

Result: 120"
"Create a shell script to make a directory in the home directory.
","#!/bin/bash
mkdir ~/new_dir"
"Create a program to determine the type of triangle given 3 side lengths
[5, 4, 3]","def determine_triangle_type(triangle_sides):
    if triangle_sides[0] == triangle_sides[1] and triangle_sides[1]  == triangle_sides[2]:
        return 'equilateral'
    elif triangle_sides[0] == triangle_sides[1] or triangle_sides[1] == triangle_sides[2] or triangle_sides[2] == triangle_sides[0]:
        return 'isosceles'
    else:
        return 'scalene'"
"Print the given array of strings in reverse order.
[""apple"", ""banana"", ""orange"", ""kiwi""]","print(""kiwi"")
print(""orange"")
print(""banana"")
print(""apple"")"
"Create a JavaScript object that stores three pieces of digital contact data, an email address, a phone number, and a website URL.
","const contact = {
 email: 'example@example.com',
 phone: '000-000-0000',
 website: 'www.example.com'
};"
"Write a function to query a database table 'trips' and return a list of all trips made over the past three months.
","def query_trips():
    start_date = datetime.datetime.now() - datetime.timedelta(days=90)
    end_date = datetime.datetime.now()
    sql = 'SELECT * FROM trips WHERE date_of_trip >= %s AND date_of_trip <= %s'
    
    try:
        conn = connect_to_database()
        cur = conn.cursor()
        cur.execute(sql, (start_date, end_date))
        trips = cur.fetchall()
        cur.close()
        conn.close()
        return trips
    except Exception as e:
        raise e"
"Compute the modulus of 3 and 4.
",3
"Write a code to delete a node from a given BST.
","# Node class to define a node of a BST 
class Node(object): 
  
    # Constructor 
    def __init__(self, data): 
        self.data = data 
        self.left = None
        self.right = None
  
# Function to delete a given node from BST 
def delete_node(root, key): 
  
    # base case 
    if root is None: 
        return None
  
    # If the key to be delete is smaller than the root's 
    # key then it lies in left subtree 
    if key < root.data: 
        root.left = delete_node(root.left, key) 
  
    # If the kye to be delete is greater than the root's key 
    # then it lies in right subtree 
    elif(key > root.data): 
        root.right = delete_node(root.right, key) 
  
    # if key is same as root's key, then this is the node 
    # to be deleted 
    else: 
        # Node with only one child or no child 
        if root.left is None : 
            temp = root.right 
            root = None
            return temp 
              
        elif root.right is None : 
            temp = root.left 
            root = None
            return temp 
  
        # Node with two children: Get the inorder successor 
        # (smallest in the right subtree) 
        temp = find_min(root.right) 
  
        # Copy the inorder successor's content to this node 
        root.data = temp.data 
  
        # Delete the inorder successor 
        root.right = delete_node(root.right , temp.data) 
  
  
    return root 
  
"""""" Helper Functions """"""
  
# Function to find the minimum node 
def find_min(node): 
    current = node 
  
    # loop down to find the leftmost leaf 
    while(current.left is not None): 
        current = current.left  
  
    return current"
"Formulate a loop in Python that prints 7 to 18.
","for i in range(7, 19):
    print(i)"
"What type of neural network is used for language generation?
",Recurrent Neural Networks (RNNs) are commonly used for language generation. Long Short-Term Memory (LSTM) networks and Gated Recurrent Units (GRUs) are prominent examples of RNNs used for language generation.
"Implement a Class in Java that creates a new array of two integers and allows the user to set and get the values of the array.
","public class TwoIntegers {
    private int[] twoIntegers;
    
    public TwoIntegers() {
        twoIntegers = new int[2];
    }
    
    public int getFirst() {
        return twoIntegers[0];
    }
    
    public int getSecond() {
        return twoIntegers[1];
    }
    
    public void setFirst(int first) {
        twoIntegers[0] = first;
    }
    
    public void setSecond(int second) {
        twoIntegers[1] = second;
    }
}"
"Edit the given JavaScript code to alert a success message?
console.log(""Process started"");","console.log(""Process started"");
alert(""Process Completed Successfully"");"
"Find the intersection of two sorted arrays in Java.
arr1=[1, 2, 4, 5, 6]
arr2=[2, 3, 5, 7]","public static int[] intersection(int[] arr1, int[] arr2) 
{ 
    // Initialise array to store intersection 
    int[] result = new int[arr1.length]; 
  
    // Initialise two index in both array 
    int i = 0, j = 0; 
  
    // Initially set intersection index 
    int k = 0; 
  
    // Sort both array 
    Arrays.sort(arr1); 
    Arrays.sort(arr2); 
  
    // Iterate over both array and store intersection 
    // in array result 
    while (i < arr1.length && j < arr2.length)  
    { 
        // If both current element are same 
        if (arr1[i] == arr2[j])  
        { 
            // Store it in result array 
            result[k++] = arr1[i++]; 
            j++; 
        } 
        // If first array current element is smaller 
        else if (arr1[i] < arr2[j]) 
            i++; 
        // If second array current element is smaller 
        else
            j++; 
    } 
  
    // return the result array 
    return Arrays.copyOfRange(result, 0, k); 
}"
"How does dynamic programming work?
","Dynamic programming is a way of solving problems by breaking them down into a collection of smaller subproblems. It works by storing solutions to subproblems so that each subproblem is only solved once. This allows for faster computation and efficient memory usage, as solutions are stored and reused instead of having to be recalculated every time they are needed. This approach is useful in situations where a given problem can be divided into multiple, overlapping subproblems, such as in optimization problems."
"Create a Java program to print all natural numbers between 1 and 50, both inclusive.
","public class Natural { 
    public static void main(String[] args) 
    { 
        int n = 1; 
        while (n <= 50) { 
            System.out.println(n); 
            n = n + 1; 
        } 
    } 
}"
"Create a linear regression model in R from the given datasets.
Datasets: Advertising.csv","model = lm(sales ~ ., data = Advertising)"
"Create an PHP script to display the current date and day.
","<?php
 echo date(""l, F jS"")
 ?>"
"Create classes to represent a credit card and account holder.
No input.","class CreditCard:
    def __init__(self, card_number):
        self.card_number = card_number

class AccountHolder:
    def __init__(self):
        self.cards = []
    def add_card(self, card):
        self.cards.append(card)"
"Generate a random string with the a capital letter followed by two lower case letters.
","import string
import random
def random_string():

  capitalletter = random.choice(string.ascii_uppercase)
  lowercaseletter1 = random.choice(string.ascii_lowercase)
  lowercaseletter2 = random.choice(string.ascii_lowercase)

  return capitalletter + lowercaseletter1 + lowercaseletter2"
"Find the closest number to given value using a binary search algorithm.
arr = [2, 4, 7, 10, 11, 12], val = 6",closest_num = 7  # 10 is the closest number to 6 in the array
"Write a JavaScript function to get the Nth element from the end of a given array.
","function getFromEnd(arr, n) {
    return arr[arr.length - n];
}"
"Generate a list comprehension that has the multiples of 3 between 0 and 30
","multiples_of_3 = [x for x in range(0, 31) if x % 3 == 0]"
"Write an Objective-C program for printing the factorial of a number 5.
Integer number: 5","#include <stdio.h>

int factorial(int n)
{
    int result = 1;
    for (int i = 1; i <= n; i++) {
        result *= i;
    }
    return result;
}

int main()
{
    int input = 5;
    int result = factorial(input);
    printf(""The factorial of %d is %d"", input, result);
    return 0;
}"
"Write a Python script to convert a given number of minutes into hours and minutes.
","def minutes_to_hours(minutes):
  hours = minutes // 60
  minutes = minutes % 60
  return hours, minutes"
"Create a function in JavaScript to find the number of occurrences of a letter in a word.
word: hello
letter: l","function findOccurrences(word, letter) {
    let count = 0;
    for (let i = 0; i < word.length; i++) {
        if (word.charAt(i) === letter) {
            count++;
        }
    }
    return count;
}"
"Select the overlapping elements between two lists
list1 = [1, 2, 3, 4, 5, 6]
list2 = [3, 4, 5, 6, 7, 8]","[3, 4, 5, 6]"
"Use the reduce function to calculate the product of elements in an array
[1, 2, 3, 4, 5]","const product = arr.reduce((acc, curr) => acc * curr, 1);"
"Create a string object in Java that stores the text ""Hello, World!"".
","String hello = ""Hello, World!"";"
"Write a JavaScript code snippet that will add two numbers.
","let num1 = 5;
let num2 = 8; 
let sum = num1 + num2;
console.log(sum);"
"Create a looping structure to display numbers from 1-10.
","""""""
Create a looping structure to display numbers from 1-10
""""""

# loop from 1 to 10
for num in range(1, 11):
    print(num)"
"Classify the given sentence according to the Syntactic parse tree and label each part of the sentence.
I bought a car yesterday.",[ NP: I] [ VP: bought] [ NP: a car] [ AdvP: yesterday]
"Generate a method in C++ to sort a given array in descending order.
arr = [3,5,1]","void sort_descending(int arr[], int n) 
{ 
    int temp; 
    for (int i=0; i<n; i++) 
    { 
        for (int j=i+1; j<n; j++) 
        { 
            if (arr[i] < arr[j]) 
            { 
                temp = arr[i]; 
                arr[i] = arr[j]; 
                arr[j] = temp; 
            } 
        } 
    } 
}"
"Using HTML and CSS, create a basic website with three sections.
","<!DOCTYPE html>
<html lang=""en"">
<head>
    <title>My Website</title>
    <style>
        .section{
            width: 75%; 
            padding: 25px; 
            margin: auto;
        }
        #section1, #section2, #section3{
            background-color: #f1f1f1;
        }
    </style>
</head>

<body>
    <div id=""section1"" class=""section"">
        <h1>Section 1</h1>
    </div>
    <div id=""section2"" class=""section"">
        <h1>Section 2</h1>
    </div>
    <div id=""section3"" class=""section"">
        <h1>Section 3</h1>
    </div>
</body>
</html>"
"Print out the 8-bit binary representation of the given number.
50",0b00110010
"Bring the following two variables into the same format
Variable one: 12,34
Variable Two: 21.103","Variable one: 12.34
Variable two: 21.103"
"Given the input string, remove extra whitespace from the string using Java.
String s = ""     This     is    an example    string    ""","String s = s.replaceAll(""\\s+"","" "");
System.out.println(s); // This is an example string"
"What is deadlock and how to prevent it?
","Deadlock is a state in which two or more processes wait for each other to finish, but none of the processes can finish because each is waiting for the other. To prevent deadlock, one can employ the use of a deadlock avoidance algorithm which typically checks for whether a particular set of conditions exist that can lead to deadlock. Additionally, locks can be applied liberally, but with caution, while avoiding circular wait."
"What is the highest peak in the world?
","The highest peak in the world is Mount Everest, which has a summit elevation of 8,848 meters (29,029 feet)."
"Develop a program in Java to calculate the product of two numbers.
","public static int product(int a, int b) 
{ 
    return (a*b); 
}"
"Provide a Python function to calculate the number of times a word appears in a given string
""This is a sample string. There are some words in this string.""","def count_words(s): 
    tokens = s.split() 
    word_freq = {} 
    for token in tokens: 
        if token in word_freq: 
            word_freq[token] += 1
        else: 
            word_freq[token] = 1
        
    return word_freq"
"Devlop a SQL query to update the address for a user with id 10.
user_id = 10
new_address = '321 Market Street'",UPDATE customers SET address = '321 Market Street' WHERE user_id = 10;
"Create a program in C++ to print the first 10 numbers of the Fibonacci series.
","#include <iostream>
 
int main()
{
    int n1 = 0, n2 = 1, n3, i, count = 10;
    std::cout << n1 << "" "" << n2 << "" ""; 
 
    for (i = 2; i < count; ++i) 
    {
        n3 = n1 + n2;
        std::cout << n3 << "" "";
        n1 = n2;
        n2 = n3;
    }
    return 0;
}"
"Write a Ruby program to print out all the numbers between 1-100 which are divisible by 5.
","1.upto(100) do |i|
  puts i if i % 5 == 0
end"
"Output a triangle shape using only asterisks (e.g. *) in Java.
","public class Triangle {
 
    public static void main(String[] args) 
    {
        int limit=15;
 
        System.out.println(""Right Angle Triangle"");
 
        for (int i = 0; i < limit; i++) 
        {
            for (int j = 0; j <= i; j++) 
            {
                System.out.print(""*"");
            }
 
            System.out.println();
        }
    }
}"
"With the provided data, find the correlation coefficient between the two variables.
x: [4, 5, 7, 8]
y: [6, 7, 8, 10]","x = [4, 5, 7, 8]
y = [6, 7, 8, 10]

def find_correlation_coefficient(x, y):
    n = len(x)
    # Calculate the sums
    sum_x = sum(x)
    sum_y = sum(y)
    # Calculate the sum of the squares
    squared_sum_x = sum([pow(x[i], 2) for i in range(n)])
    squared_sum_y = sum([pow(y[i], 2) for i in range(n)])
    # Calculate the sum of the products
    product_sum = sum([x[i]*y[i] for i in range(n)])
    # Calculate the correlation coefficient
    num = product_sum - (sum_x * sum_y/n)
    den = ((squared_sum_x - (pow(sum_x,2) / n)) * (squared_sum_y - (pow(sum_y,2) / n))) ** 0.5
    r = num/den
    return r

print("" The correlation coefficient is: "" + str(find_correlation_coefficient(x, y))) # 0.9"
"Convert the following integers into strings.
54 and 32","str1 = str(54)
str2 = str(32)"
"What is the syntax for filtering a DataFrame using an OR condition in Pandas?
",df.loc[(condition1) | (condition2)]
"Calculate the factorial of a positive integer in C.
","#include <stdio.h>

int factorial(int n) 
{ 
  int i, fact = 1; 
  
  // handles cases greater than 1
  if (n > 1) { 
    for (i = 2; i <= n; i++) 
      fact = fact * i; 
  } 
  return fact; 
} 

int main() 
{ 
  printf(""The factorial of 5 is %d"", factorial(5)); 
  return 0; 
}"
"Write a function that checks whether an array contains an element
[1, 5, 10]","def exists(arr, target):
    for i in arr:
        if i == target:
            return True
    return False"
"Create an array of objects in JavaScript, each object should have two properties, a ""name"" and ""age"".
","var arr = [
  {name: 'John', age: 25},
  {name: 'Alice', age: 28},
  {name: 'Bob', age: 30},
  {name: 'David', age: 32},
]"
"Modify the previous program to also print the sum of the subarray elements
arr = [1, 4, 6, 8, -5, 7], k = 11","max_sum = 0 
start = 0 
end = 0

# Loop through each element of the array
for i in range(len(arr)): 
    sum = 0
  
    # Find maximum sum subarray
    for j in range(i, len(arr)): 
        sum += arr[j] 
        if (sum > max_sum and sum <= k): 
            max_sum = sum 
            start = i 
            end = j 
  
# Print maximum subarray and its sum
print(""Maximum sum subarray with sum <="", k, ""is"") 
print(""["", end="""") 
for i in range(start, end+1): 
    print(arr[i], end="", "") 
print(""]"")
print(""Sum of the subarray elements:"", max_sum)"
"Explain why software design patterns are important in software development.
","Software design patterns are important because they allow developers to create extensible and maintainable software applications. Design patterns provide a way of reusing the same code and structure across multiple applications, while allowing the application to remain logically organized. This can reduce the amount of time it takes to develop and debug applications, as well as prevent bugs from arising due to unfamiliar code structures. Additionally, well-designed applications can be easier for new developers to understand and contribute to. Lastly, design patterns can help improve the overall organization and scalability of a codebase."
"Create a while loop that prints the numbers 1-10
","i = 1
while i <= 10:
    print(i)
    i += 1"
"Create a program to print the sum of all first 10 natural numbers.
","def sum_first_ten_natural_numbers():
    sum = 0
    for i in range(1, 11):
        sum = sum + i
    return sum

print(sum_first_ten_natural_numbers()) 
# Output: 55"
"Write a code for converting a temperature from Fahrenheit to Celsius in Java.
","public static double fToC(double f) {
    double c = (f - 32) * (5.0/9.0);
    return c;
}"
"Create a JavaScript class called ""Vehicle"" with two properties: brand and model.
","class Vehicle {
    constructor(brand, model) {
        this.brand = brand;
        this.model = model;
    }
}"
"Make a function that accepts 2 numbers and return the largest one.
2, 3","def largest(x, y):
  if (x > y):
    return x
  else:
    return y"
"Using CSS, style the following HTML code to center align the text.
<p>This is a text.</p>","<style> 
    p{ 
        text-align: center; 
    } 
</style> 
<p>This is a text.</p>"
"Develop a C++ program to find the volume of a cylinder given its radius and height.
Radius: 12
Height: 20","#include <iostream> 
#include <math.h>

using namespace std; 

int main() 
{ 
  float radius, height, volume; 
  
  cout << ""Enter the radius of the cylinder in cm: ""; 
  cin >> radius; 
  
  cout << ""Enter the height of the cylinder in cm: ""; 
  cin >> height; 
  
  volume = 3.14159 * pow(radius, 2) * height;
  
  cout << ""The volume of the cylinder is: "" << volume << "" cm^3"" << endl;
  return 0;
}"
"Create a for loop that goes through every element of list_of_words and prints ‘success’ if an element is equal to “example” and prints ‘failure’ in any other case.
list_of_words = [""hello"", ""example"", ""world""]","for word in list_of_words:
    if word == ""example"":
        print(""success"")
    else:
        print(""failure"")"
"Create a Node.js program to print the first 5 prime numbers
","const prime_nums = () => {
    let count = 0;
    let num = 2;
    while(count < 5) {
        if(isPrime(num)) {
            console.log(num);
            count++;
        }
        num++;
    }
}

function isPrime(n) {
    for(let i = 2; i < n; i++)
        if(n % i === 0) return false;
    return true;
}

prime_nums();"
"How many trailing zeros are in the factorial of the number ""n""?
n = 20","The number of trailing zeros in 20! is 4.

def trailing_zeros(n):
 count = 0
 i = 5
 while (n/i >= 1): 
  count += int(n/i) 
  i *= 5
 return count

print(""The number of trailing zeros in 20! is"", trailing_zeros(20))"
"Create an object in JavaScript that contains two methods.  The first method takes two parameters and returns the sum of the two numbers, and the second method takes two parameters and returns the product of the two numbers.
","const calculator = {
    sum: function(a, b){
        return a + b;
    },
    product: function(a, b){
        return a * b;
    }
};"
"Create a HTML page with a table with three columns and four rows and give it an appropriate CSS styling.
","<style>
	table {
		border-collapse: collapse;
	}
	
	th, td {
		border: 1px solid #000;
		padding: 8px;
	}
	
</style>
<table>
	<thead>
		<tr>
			<th>Column 1</th>
			<th>Column 2</th>
			<th>Column 3</th>
		</tr>
	</thead>
	
	<tbody>
		<tr>
			<td>Row 1 Col 1</td>
			<td>Row 1 Col 2</td>
			<td>Row 1 Col 3</td>
		</tr>
		<tr>
			<td>Row 2 Col 1</td>
			<td>Row 2 Col 2</td>
			<td>Row 2 Col 3</td>
		</tr>
		<tr>
			<td>Row 3 Col 1</td>
			<td>Row 3 Col 2</td>
			<td>Row 3 Col 3</td>
		</tr>
		<tr>
			<td>Row 4 Col 1</td>
			<td>Row 4 Col 2</td>
			<td>Row 4 Col 3</td>
		</tr>
	</tbody>
</table>"
"Create a function in Java to take a sentence as input and return a list of all the words in the sentence.
I am a student","# Using Java:
public static List<String> getWords(String sentence) {
    List<String> words = new ArrayList<>();
    String[] wordsArray = sentence.split(""\\s+"");
    for (String word : wordsArray) {
        words.add(word);
    }
    return words;
}"
"Write a function to reverse the contents of a stack.
","def reverseStack(stack):
    revStack = []
 
    while len(stack) > 0:
        top = stack.pop()
        revStack.append(top)
 
    return revStack"
"Create an array of strings in Java with three elements - ""apple"", ""banana"" and ""orange"".
","String[] arr = {""apple"", ""banana"", ""orange""};"
"Create a code to import a module called 'math' in Python.
",import math
"Read the provided code and determine whether it is using object-oriented programming or not. Output true if it is and false if it is not.
function displayName(name) {
  console.log(name);
}",false
"Convert the following number into binary representation using Python.
12","binary = ""0b1100"""
"How can you remove duplicate characters from a string in Java?
","We can use a Set collection to remove duplicate characters from a string in Java. We can loop through the characters in the string, and add them to a Set, which does not allow duplicate elements. Then we can loop through the set and append each character to a new string. This new string will be free of duplicate characters."
"Print the nth element from a spin lock sequence using only O(1) space.
","def get_spinlock_element(n):
    """""" Prints the nth element from a spin lock sequence using only O(1) space
    
    Args:
        n (int): The number of the element to be retrieved
        
    Returns:
        int: The nth element
    """"""
    # Initialize the step size
    step_size = 343
    
    # Find the previous two elements in the iteration
    first = 0
    second = 0
    
    # Initialize the index of the element to be retrieved
    index = 0
    
    # Iterate over the elements until we reach the desired element
    while index < n:
        # Generate the next element in the sequence
        element = first + second + 1
        
        # Update the previous two elements
        first, second = second, element
        
        # Move the index
        index += step_size
    
    # Return the element at the nth position
    return element"
"What is principle of DRY (Don’t Repeat Yourself) in coding?
","The principle of DRY (Don’t Repeat Yourself) states that code should not be written twice, and instead should be reused. This means that code should be organized such that similar functionalities are grouped together so as to avoid duplication, making the code more efficient, robust, and maintainable. It also allows for code to be more easily refactored in order to correct errors or to add new features."
"Edit the following code to print out the maximum value from an array of numbers.
[7, 8, 2, 9, 4]","arr = [7, 8, 2, 9, 4]
max_val = 0
for num in arr:
    if num > max_val:
        max_val = num
print(max_val) # Outputs 9"
"Where would you place the import statement when using the pandas library in Python?
","The import statement should be placed at the beginning of the program, before any other statements are executed. This ensures that the Pandas library is available when we write code referring to the Pandas library."
"Create a function in Java that toggles a boolean value.
","public boolean toggleBoolean (boolean value) {
 return !value;
}"
"Rewrite the following C program so that it prints the frequency of each character in a given string.
string = ""abcabcabc""","#include <stdio.h>
#include <string.h>

// Fills frequency array with zero 
void clear(int count[], int n) 
{ 
	int i; 
	for (i = 0; i < n; i++) 
	count[i] = 0; 
}

// Calculate frequency of each character 
// in a string 
void calculateFrequency(char *str, int count[], int len) 
{ 
	int i; 
	for (i = 0; i < len; i++) 
		count[str[i] - 'a']++;	
}

int main() 
{ 
	char str[] = ""abcabcabc""; 
	int len = strlen(str); 
	// Initialize frequency array 
	int count[26] = { 0 }; 
	
	// Clear the frequency array 
	clear(count, 26); 
	
	// Calculate frequency 
	calculateFrequency(str, count, len); 
	
	// Print the frequency of each character 
	for (int i = 0; i < 26; i++) 
		if(count[i] != 0) 
			printf(""%c occurs %d times in the string \n"", i + 'a', count[i]); 
	return 0; 
}"
"Create a MySQL query to display all the distinct items from the table ""Orders"".
","SELECT DISTINCT item 
FROM orders"
"Write Java code to calculate the sum of first n natural numbers.
","public class SumNatural {
    public static void main(String[] args) {
        int num = 20, sum = 0;
        for(int i = 1; i <= num; ++i)
        {
            sum += i;
        }
        System.out.println(""Sum = "" + sum);
    }
}"
"Convert the following linear equation into a quadratic equation.
3x + 5 = 0",3x^2 + 5x + 5 = 0
"Write a code to print the current date and time in ISO format.
","from datetime import datetime

date_time_obj = datetime.now()

print(date_time_obj.isoformat()) # prints ""2020-07-29T15:10:01.584131"""
"Write a code that finds all the prime numbers in a given range of numbers.
start_num = 1
end_num = 100","primes = []
for num in range(start_num, end_num + 1):
  if num > 1:
    for i in range(2, num):
      if num % i == 0:
        break
    else:
      primes.append(num)

print(primes)"
"According to the following code, how is an object of type “Point” instantiated?
class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y","An object of type ""Point"" is instantiated by calling the __init__() method, with arguments for the x and y coordinates, e.g. Point(1,2) to create an instance with x=1 and y=2."
"Write a Python program to implement Find-Max algorithm.
arr = [10, 7, 8, 11, 15]","def FindMax(arr):
    curr_max = arr[0]
    curr_index = 0
    for i in range(len(arr)):
        if arr[i] > curr_max:
            curr_max = arr[i]
            curr_index = i
    return curr_max, curr_index

if __name__ == ""__main__"":
    arr = [10, 7, 8, 11, 15]
    curr_max, curr_index = FindMax(arr)
    print(""Max element:"", curr_max)
    print(""Index of max element:"", curr_index)"
"Describe the feature of ""promise"" in JavaScript.
","Promises in JavaScript are objects that represent the eventual completion or failure of an asynchronous operation. They allow us to structure contingencies within our code, and to take actions based on the eventual result of asynchronous tasks."
"Create a program in python that takes a number as input and checks if it is a prime number
5","def is_prime(num):
    if num == 1:
        return False
    elif num == 2:
        return True
    else:
        for i in range(2, num):
            if (num % i == 0):
                return False
    return True

is_prime(5)
# output: True"
"Write a query in PostgreSQL for deleting a table.
",DROP TABLE table_name;
"Create a python function that computes the area of a rectangle given the length and width.
","def calculateRectangleArea(length, width):
  area = length * width
  return area"
"Build a TensorFlow model to perform sentiment analysis on text.
","import tensorflow as tf

# Get the data
dataset = tf.keras.utils.get_file(
  'aclImdb_v1.tar.gz', 
  'http://ai.stanford.edu/~amaas/data/sentiment/aclImdb_v1.tar.gz')

# Load the data and prepare it for the model
reviews_train, reviews_test, labels_train, labels_test \
  = tf.keras.datasets.imdb.load_data(
    path=str(dataset)[:-7] + ""/aclImdb/train/"")

# Convert the integers back to words
word2id = tf.keras.datasets.imdb.get_word_index()
word2id = {k:(v+3) for k,v in word2id.items()}
word2id[""<PAD>""] = 0
word2id[""<START>""] = 1
word2id[""<UNK>""] = 2 
word2id[""<UNUSED>""] = 3

id2word = {value:key for key,value in word2id.items()}

# Model for sentiment analysis
model = tf.keras.Sequential([
  tf.keras.layers.Embedding(input_dim=len(word2id)+1, output_dim=256),
  tf.keras.layers.GlobalAveragePooling1D(),
  tf.keras.layers.Dense(256, activation=tf.nn.relu),
  tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(1, activation=tf.nn.sigmoid)
])

model.compile(
  optimizer='adam', 
  loss='binary_crossentropy', 
  metrics=['accuracy']
)

model.fit(
  reviews_train, 
  labels_train, 
  epochs=10,
  validation_data=(reviews_test, labels_test)
)"
"Create a component in React for display a header with two buttons.
","import React from 'react';

const Header = () => {
  return (
    <div>
      <h1>Header</h1>
      <button>Button 1</button>
      <button>Button 2</button>
    </div>
  )
}

export default Header;"
"Write a Java class that can be used to store and access a large dictionary.
Large dictionary with 10000 words","import java.util.HashMap;

public class Dictionary {
 
    private HashMap<String, String> dictionary;
 
    public Dictionary() {
        this.dictionary = new HashMap<>();
    }
 
    public void addWord(String word, String definition) {
        dictionary.put(word, definition);
    }
 
    public String getDefinition(String word) {
        return dictionary.get(word);
    }
}"
"Construct a CSS style sheet to set background color of all <h1> tags as blue.
","h1 {
    background-color: blue;
}"
"Create a MySQL query that returns a list of states in the United States with populations greater than 10 million.
","SELECT state
FROM population_data 
WHERE population > 10000000;"
"Design a binary search tree that has the following values in the given order - 5, 4, 11, 6, 10, 8.
","5
      /   \
     4     11
    / \    / \  
   N   6  10  8"
"Write a code that finds the most frequent element in a list.
data = [1, 2, 3, 2, 3, 2, 1, 2, 3]","def find_most_frequent(data):
    counts = {}
    for item in data:
        if item in counts:
            counts[item] += 1
        else:
            counts[item] = 1
    most_frequent_item = max(counts, key=counts.get)
    return most_frequent_item"
"Write an algorithm to determine if an input string is a palindrome.
racecar","def is_palindrome(string):
      string = string.lower()
      rev_string = string[::-1]
      if string == rev_string:
          return True
      return False

if __name__ == '__main__':
  print(is_palindrome('racecar'))"
"Construct an array of 5 elements from a given string.
String: programming","[""p"", ""r"", ""o"", ""g"", ""r""]"
"Construct an SQL query to get the total sales of each customer.
TABLE customers {
   id INT,
   name VARCHAR(90)
}

TABLE orders {
   order_id INT
   customer_id INT
   total DEC(10,2)
}","SELECT c.name, SUM(o.total)
FROM customers c
JOIN orders o
ON c.id = o.customer_id
GROUP BY c.name;"
"Create a program that generates a random integer from 1 to 10.
","import random

random_number = random.randint(1, 10)
print(""A random number between 1 and 10 is: "" + str(random_number))"
"Calculate the sum of the following list of numbers: 10, 12, 14, 16, 18.
",The sum of the numbers is 70.
"Convert the following SQL query into a Java code using JDBC.
SELECT Employees.Name FROM Employees WHERE Employees.Salary > 50000","String queryString = ""SELECT Employees.Name FROM Employees WHERE Employees.Salary > ?"";
PreparedStatement pstmt = conn.prepareStatement(queryString);
pstmt.setDouble(1, 50000);
ResultSet rs = pstmt.executeQuery();
while (rs.next()) {
    String name = rs.getString(1);
    // Process the name
}"
"Write a JavaScript function to check if a number is a whole number or has decimals.
","const isWholeNumber = (num) => {
  if (num % 1 === 0) return true
  return false
}"
"What is the name of the following component of a computer system
A component that can perform data processing and calculations",The component in question is known as the Central Processing Unit (CPU).
"Classify the following sentence as either statement or question.
""She had taken the train to France.""",Statement.
"Create a for loop to print all the even numbers between 1 and 10 (including 1 and 10).
","for i in range(1, 11):
    if i % 2 == 0:
        print(i)"
"How would you insert an element into a pre-existing array using JavaScript?
","An element can be inserted into a pre-existing array using the JavaScript Array.prototype.push() method. The push() method takes a single element as an argument and appends it to the end of the array. For example, to insert the value 7 into an array, you could use the following syntax: array.push(7);"
"Create a query that displays the employees who are completed more than 20 years in the company.
",SELECT * FROM employees WHERE years_in_company > 20;
"Read the input text and reverse it character by character.
This is a sample text",txet elpmas a si sihT
"Generate a proper HTML page.
","<!DOCTYPE html>
<html>
<head>
<title>Title of the document</title>
</head>

<body>

<h1>This is a Heading</h1>
<p>This is a paragraph.</p>

</body>

</html>"
"Explain the purpose of a for-loop in C++.
",A for-loop in C++ is a statement that allows you to loop through a range of values and execute a set of statements for each value in the range. It is used to repeat a set of instructions for a specific amount of times or until a certain condition is reached.
"You need to write code for adding a column to a pandas DataFrame.
import pandas as pd
df = pd.DataFrame({'A': [12, 4, 5, None, 1],
                   'B': [7, 2, 54, 3, None],
                   'C': [20, 16, 11, 3, 8],
                   'D': [14, 3, 17, 2, 6]})

new_col_data = [1, 1, 15, 6, 96]","import pandas as pd
df = pd.DataFrame({'A': [12, 4, 5, None, 1],
                   'B': [7, 2, 54, 3, None],
                   'C': [20, 16, 11, 3, 8],
                   'D': [14, 3, 17, 2, 6]})

new_col_data = [1, 1, 15, 6, 96]

df['new_col'] = new_col_data"
"What is the most efficient way to count the number of characters in a string in C++?
","#include <iostream> 
#include <string> 
 
using namespace std; 
 
int main() 
{ 
    string my_string = ""Count characters in this string."";
    int count = 0;
    for (char c : my_string) 
        count++; 
    cout << ""Number of characters in the string : "" << count; 
    return 0; 
}"
"Implement a version of your own version of quicksort in Python
","def quicksort(arr):
    if len(arr) <= 1:
        return arr

    pivot = arr[0]
    left = []
    right = []

    for num in arr[1:]:
        if num < pivot:
            left.append(num)
        else:
            right.append(num)

    return quicksort(left) + [pivot] + quicksort(right)

if __name__ == '__main__':
    arr = [7, 3, 1, 9, 0]
    print(quicksort(arr))"
"Interchange the values of two given variables.
x = 10 
y = 5","# Swap x and y
def swap_values(x, y):
    x, y = y, x 
    return x, y"
"Create a HTTP request that returns the HTML source code of a given URL.
URL: ""http://example.com""","GET / HTTP/1.1
Host: example.com
Connection: close"
"Write a C++ program that takes a string, reverses the string and prints it out.
text = ""Hello World!""","#include <iostream>
#include <string>

int main() {
  std::string text = ""Hello World!"";
  std::string reversed = """";
  for (int i=text.length()-1; i>=0; i--) {
    reversed = reversed + text[i];
  }
  std::cout << reversed << std::endl;
  
  return 0;
}"
"Create an HTML form with one input field which requests the user's name.
","<form action="""" method=""get"">
  <label for=""name"">Name:</label>
  <input type=""text"" id=""name"" name=""name"" required>
  <input type=""submit"" value=""Submit"">
</form>"
"Convert a natural number to its binary representation.
n = 4","bin_n = bin(n)
print(bin_n) # Returns 0b100"
"Write a basic routine that takes in a JSON string and outputs the longest word found inside.
data = '{""John"": 56, ""Ann"":64, ""Victor"": 23}'","def get_longest_word(json_string):
    """"""Return the longest word found inside the given json_string""""""
    words = []
    data = json.loads(json_string)
    for key,val in data.items():
        words.append(key)
    return max(words, key=len)"
"Write a Python function to check if an element is present in a given list or not.
","def is_in_list(element, input_list):
    return element in input_list"
"Edit the following JSON to add a new key.
{
 ""name"" : ""Bob"", 
 ""age"" : 32
}","{
 ""name"" : ""Bob"", 
 ""age"" : 32,
 ""profession"" : ""dentist""
}"
"Explain the purpose of the ""head"" tag in HTML.
","The ""head"" tag in HTML is used to contain metadata about a page. This metadata includes tags such as title, description, js/css resources to include,  additional search keywords, etc. This metadata is essential for web search engine optimization and helps improve the visibility of the page on search engines. Additionally, the ""head"" tag can also be used to include additional scripts and style sheets to be used in the page."
"Create a program in Python to remove duplicate values from a list.
list_a = [1, 2, 2, 3, 4, 4]","def remove_duplicates(list): 
    unique = [] 
    for item in list: 
        if item not in unique: 
            unique.append(item) 
    return unique 

list_a = [1, 2, 2, 3, 4, 4]
list_a = remove_duplicates(list_a)
print(list_a)"
"Write an SQL query for finding customers who live in a given zipcode.
","SELECT name, address FROM customers 
WHERE address LIKE ('%[zipcode]%')"
"Print the length and the middle element of the given array.
arr = [1, 2, 3, 4, 5]","# print the length of array
print(len(arr))
5
 
# print the middle element of array
midIndex = len(arr) // 2
print(arr[midIndex])
3"
"Write a SQL query to retrieve the total amount of purchase each customer has made.
Table:Customer_orders 
|userid|product |purchase_price|
|------|--------|--------------|
|1     |shoes   |50            |
|2     |socks   |30            |
|1     |pants   |20            |","SELECT userid, SUM(purchase_price) as total_purchase 
FROM Customer_orders 
GROUP BY userid;"
"Write a script in Python for generating a histogram for a given set of data.
[3, 5, 8, 1, 9, 12]","import matplotlib.pyplot as plt

data = [3, 5, 8, 1, 9, 12]
plt.hist(data, color='blue', ec='black')

plt.title(""Histogram"")
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")

plt.show()"
"Write a code to get the current weather information for a given city.
city = ""New York""","import requests
import json

def get_weather_information(city):
    url = 'http://api.openweathermap.org/data/2.5/weather?q={},<APIKEY>'.format(city)

    response = requests.get(url)
    data = json.loads(response.text)
    return data

if __name__ == '__main__':
    print(get_weather_information(""New York""))"
"Create a function that takes two strings and returns true if both strings have the same length and false otherwise.
string1 = ""hello""
string2 = ""world""","def same_length(string1, string2):
  return len(string1) == len(string2)"
"Develop an algorithm to calculate the length of a string.
","Algorithm:

1. Input a string.
2. Initialize a counter to 0.
3. Iterate through the characters in the string, adding 1 to the counter for each character until the end of the string is reached.
4. Output the counter.

The algorithm successfully calculates the length of a given string."
"Write a Spring Boot Rest Controller to list all products in an online store.
","@RestController
public class ProductController {
 
    @Autowired
    private ProductService productService;
 
    @GetMapping(""/products"")
    public List<Product> getProducts(){
        return productService.listProducts();
    }
}"
"Write a function that takes in a 2D matrix and outputs the transpose of the matrix.
","def transpose_matrix(matrix):
    return [[matrix[j][i] for j in range(len(matrix))] for i in range(len(matrix[0]))]"
"Create a loop in Python to print odd numbers between 10 and 25.
","for i in range(11, 25, 2):
    print(i)"
"Write a Python program that takes a string entered by the user, reverses it and displays the reversed version of the string.
","def reverse_string(s): 
    return s[::-1]
  
input_string = input(""Enter a string: "")
  
reversed_string = reverse_string(input_string) 
  
print(""The reversed string is:"", reversed_string)"
"What is the command to find the length of a given list?
",list_length = len(list)
"We have a list of numbers and a given sum. Write a program to determine if any two numbers from the list sum up to the given sum.
[1,2,3,4], 6","def two_sum(nums, target):
    for i in range(len(nums) - 1):
        for j in range(i+1, len(nums)):
            if nums[i] + nums[j] == target:
                return (i, j)
    return -1"
"Make a program to find the sum of each row in a two-dimensional array.
[[1,2,3], [2,3,4]]","def row_sum(arr):
    total_sum = 0
    for row in arr:
        total_sum += sum(row)
    return total_sum"
"What is the name of the method used in Java to compare two strings?
",The method used in Java to compare two strings is the .equals() method.
"Analyze the following list of strings and find the most frequent character.
strings = [""hello"", ""world"", ""foo"", ""bar""]","strings = [""hello"", ""world"", ""foo"", ""bar""]

char_counts = {}
for string in strings:
    for char in string:
        if char not in char_counts:
            char_counts[char] = 0
        char_counts[char] += 1

most_frequent = max(char_counts, key=lambda k: char_counts[k])
print(most_frequent) # prints l"
"Replace each letter in the following text with its corresponding number:
Hello world!",83055109 16971134!
"Write a regular expression pattern to match all email addresses with the same top-level domain.
","[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}"
"Implement a Java class for a LinkedList.
","public class LinkedList {
    private Node head; // head of the list 
    // linked list Node. 
    // This inner class is made static 
    // so that main() can access it 
    static class Node { 
        int data; 
        Node next; 
        // Constructor 
        Node(int d) 
        { 
            data = d; 
            next = null; 
        } 
    } 
  
    public void append(int new_data) 
    { 
        // allocate new Node 
        Node new_node = new Node(new_data); 
        // if the Linked List is empty, 
        // then make the new Node as head 
        if (head == null) { 
            head = new Node(new_data); 
            return; 
        } 
  
        // This new Node is going to be the last node, so make next of 
        // it as null 
        new_node.next = null; 
        // Else traverse till the last Node 
        Node last = head; 
        while (last.next != null) 
            last = last.next; 
        // Change the next of last Node 
        last.next = new_node; 
        return; 
    }
}"
"Build a graphical user interface using Java.
","import java.awt.*;
import javax.swing.*;

public class GUIExample {
    public static void main(String[] args) {
        JFrame frame = new JFrame(""GUI Example"");
        frame.setSize(400, 600);
 
        JPanel panel = new JPanel();
 
        JLabel label = new JLabel(""This is a simple GUI."");
        JButton button = new JButton(""Click Me!"");
 
        panel.add(label);
        panel.add(button);
 
        frame.add(panel);
        frame.setVisible(true);
    }
}"
"Update this HTML as per the given instructions.
Update the <h1> tag to be black and red, and center-align it.","<h1 style=""color:black; background:red; text-align:center;"">Heading 1</h1>"
"Write a replace method for a string class which replaces the given string with a given set of characters.
string = ""Hello World!""
replace_with = ""Greetings!""","def replace(self, replace_with):
    new_string = """"
    for char in self:
        if char == "" "":
            new_string += replace_with
        else:
            new_string += char
    return new_string"
"Write a function to normalize a vector in C++.
","#include <iostream>
#include <algorithm>
#include <cmath>
 
// Function to normalize a vector
void normalize(std::vector<float>& vector)
{
    // Compute the magnitude
    float magnitude = 0.0;
    for (int i = 0; i < vector.size(); i++)
        magnitude += vector[i] * vector[i];
    magnitude = sqrt(magnitude);
 
    // Normalize the vector
    for (int i = 0; i < vector.size(); i++)
        vector[i] /= magnitude;
}"
"Write a SQL query to list the top 3 most used languages by developers.
","SELECT language, COUNT(*) AS language_usage
FROM developers
GROUP BY language
ORDER BY language_usage DESC
LIMIT 3;"
"Create a bash shell script that assigns two variables with values of 4 and 2 and prints the sum of the two variables.
","#!/bin/bash
a=4
b=2
echo 'the sum is' $(($a + $b))"
"Create a function that takes two arguments, a number and a list, and returns a list with all elements from the original list multiplied by the number.
num = 2
lst = [1, 2, 3, 4]","# function to multiply each element of list by number 
def lst_multiply(num, lst):
    new_lst = []
    for num in lst:
        new_lst.append(num * num)
    return new_lst

# main program
print(lst_multiply(num, lst))"
"Create a function that will calculate the cumulative sum of a list.
[1, 2, 3, 4, 5]","def cumulative_sum(lst):
    '''This function will calculate the cumulative sum of a list.'''
    result = []
    s = 0
    for item in lst:
        s += item
        result.append(s)
    return result"
"Create a web page using HTML and CSS which displays a user interface for a calculator.
","<html>
    <head>
        <title>Calculator Webpage</title>
    </head>
    <body>
        <h1>Calculator</h1>
        <div class=""container"">
            <div class=""display"">
                <p>0</p>
            </div>
            <div class=""keypad"">
                <div class=""number-pad"">
                    <button type=""button"">7</button>
                    <button type=""button"">8</button>
                    <button type=""button"">9</button>
                    <button type=""button"">4</button>
                    <button type=""button"">5</button>
                    <button type=""button"">6</button>
                    <button type=""button"">1</button>
                    <button type=""button"">2</button>
                    <button type=""button"">3</button>
                    <button type=""button"">0</button>
                </div>
                <div class=""operator-pad"">
                    <button type=""button"" class=""operator"">/</button>
                    <button type=""button"" class=""operator"">*</button>
                    <button type=""button"" class=""operator"">+</button>
                    <button type=""button"" class=""operator"">-</button>
                    <button type=""button"" class=""operator"">=</button>
                </div>
            </div>
        </div>
    </body>
</html>"
"Suggest a code segment to render a greeting message in a terminal window using Python.
","print(""Hello World!"")"
"Write a C++ code to create a function which prints the sum of two integers.
","#include <iostream>
 
using namespace std;
 
// Function to print the sum of two integers
void printSumOfIntegers(int first, int second) {
    cout << first + second << endl;
}"
"Construct a loop that prints out all elements in the list, one at a time.
myList = [""egg"", ""milk"", ""bread"", ""sugar""]","for element in myList:
    print(element)"
"Create a function in C that takes a string as input and returns an integer, which represents the number of occurences of a given character in the string.
""Hello, World!"", 'o'","int count_occurrences(char *str, char c) 
{ 
    int count = 0; 
  
    // Traverse the string and check 
    // for occurrences of character. 
    for (int i=0; str[i] != '\0'; i++) 
        if (str[i] == c) 
            count++; 
  
    return count; 
}"
"Create an array of all the prime numbers up to 50.
","def is_prime(n):
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True
    
prime_array = []
for i in range(2, 51):
    if is_prime(i):
        prime_array.append(i)"
"Iterate over a list and count the number of occurrences of each item.
list1 = [10, 20, 30, 10, 10, 40, 10]","def count_instances(list1):
    count_dict = dict() 

    for item in list1: 
        if (item in count_dict): 
            count_dict[item] += 1
        else: 
            count_dict[item] = 1
   
    for key, value in count_dict.items(): 
        print(f""{key} : {value}"") 
  
count_instances(list1)

Output: 10 : 4, 20 : 1, 30 : 1, 40 : 1"
"Compute the big-O time complexity for this algorithm.
def factorial(n):
    if n == 0: 
        return 1
    else: 
        return n*factorial(n-1)",The time complexity for this algorithm is O(n).
"In what languages can the TensorFlow library be used?
","The TensorFlow library can be used in Python, C++, JavaScript, Java, Go, Swift, and R. It is also supported in different platforms such as iOS, Android, and web browsers."
"Create a SQL query to find all records from the table ""licenses"" with license state ""CA"".
",SELECT * FROM licenses WHERE license_state = 'CA';
"Output the 5th Fibonacci number.
",5
"Write an algorithm to calculate the average of a list of integers given as input.
","def average(nums):
    """"""
    Takes a list of numbers and returns the average.
    """"""
    
    total = 0
    for num in nums:
        total += num
    
    return total / len(nums)"
"How to use the reduce function in Python for computing the sum of elements in a list?
","from functools import reduce

def my_sum(list):
  return reduce((lambda x, y: x + y), list)"
"Write a function to transform a dataset into a matrix, where rows represent data points followed by their labels.
dataset=[(2, 3, 1), (5, 4, -1), (1, 8, 1)]","def dataset_to_matrix(dataset):
    matrix = [[x, y, z] for x, y, z in dataset]
    return matrix"
"Mix the given list of numbers in a random order
[5, 1, 7, 3, 2]","import random

my_list = [5, 1, 7, 3, 2]
random.shuffle(my_list)
print(my_list)  #Output: [7, 2, 5, 1, 3]"
"Can you write a code to delete all the items whose key starts with ""item""?
{
    ""item1"": ""apple"",
    ""item2"": ""banana"",
    ""item3"": ""cherry"",
    ""item4"": ""durian"",
    ""food1"": ""bacon""
}","let data = {
    ""item1"": ""apple"",
    ""item2"": ""banana"",
    ""item3"": ""cherry"",
    ""item4"": ""durian"",
    ""food1"": ""bacon""
};

// check each key for the preffix ""item""
for (let key in data) {
  if (key.startsWith('item')) {
    // if key starts with ""item"", delete that item from the object
    delete data[key];
  } 
}

// output object
console.log(data);"
"Create a new HTML page and add a heading to it.
","<!DOCTYPE html>
<html>
 <head>
  <title>My HTML Page</title>
 </head>
 <body>
  <h1>My Page Heading</h1>
 </body>
</html>"
"Arrange the following data for sorting operation.
[4, 19, 10, 7, 1, 3]","[1, 3, 4, 7, 10, 19]"
"Change the last line of the code to assign the output of the function call to the variable n.
def add_two_numbers(x, y):
    return x + y

# TODO:","def add_two_numbers(x, y):
    return x + y

n = add_two_numbers(x, y)"
"Create a Java method to interpret a given string into an integer.
","public static int stringToInteger(String s) { 
    int result = 0; 
    int power = 0; 
    for (int i = s.length() - 1; i >= 0; i--) { 
       char ch = s.charAt(i); 
       result += (ch - '0') * Math.pow(10, power); 
        power++; 
    } 
    return result; 
}"
"Create a CSS rule to make the div element with an id of ""container"" to have a width of 500px.
","#container {
  width: 500px;
}"
"Write a MongoDB query to find which roles have Permission 2
",db.roles.find({permissions: 2})
"Write a regular expression that captures all the words starting with ""A"".
",^A\w+
"Create a Java method that computes the factorial of an integer.
","public static int factorial(int n) {
   int factorial = 1; 
   for (int i = 1; i <= n; i++) {
      factorial *= i;
   }
   return factorial;
}"
"Construct a C# program for displaying ""Hello World!"" on the console.
","using System;

namespace HelloWorld
{   
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(""Hello World!"");
        }
    }
}"
"How to delete a particular row in an SQLite database table?
","To delete a particular row in an SQLite database table, you can use the DELETE statement with a WHERE clause to specify the row to be deleted. For example: DELETE FROM table_name WHERE condition;"
"Write a Python program to create a dictionary containing students and their scores.
","# Declare an empty dictionary
scores = {}

# Enter some students and their scores
scores['student1'] = 90
scores['student2'] = 85
scores['student3'] = 100

# Print the scores
print(scores)

# Output - {'student1': 90, 'student2': 85, 'student3': 100}"
"Given a 2 dimensional array, create a code to transpose the array.
","def transpose_matrix(matrix): 
	row = len(matrix) 
	col = len(matrix[0]) 
	transpose = [[0 for j in range(row)] for i in range(col)] 
  
	for i in range(row): 
		for j in range(col): 
			transpose[j][i] = matrix[i][j] 
  
	return transpose 

matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
print(transpose_matrix(matrix))"
"Suggest a better algorithm to find the minimum element in a given array.
","The better algorithm would be to use a divide and conquer approach. This approach involves splitting the array into two halves, finding the minimum element in each half and then comparing the two elements to determine the overall minimum. This is a faster algorithm than the linear search approach in which we traverse the array from start to end and compare each element with the current minimum."
"Manipulate the string ""Hello, World!"" using the correct Python function that will replace the word ""Hello"" with ""Goodbye"".
","def goodbye_world(string):
    """"""Replaces the word Hello with Goodbye in the string.""""""
    return string.replace(""Hello"", ""Goodbye"")"
"Create a function in TypeScript that takes two strings of equal length and returns the number of characters which match at the same position in the strings.
""abcdefg"", ""hijklmn""","function countMatchingChar(str1: string, str2: string): number {
    let count = 0;
    if(str1.length != str2.length) {
        return -1; // handle unequal lengths
    }
    for(let i = 0; i < str1.length; i++) {
        if(str1.charAt(i) === str2.charAt(i)) {
            count++;
        }
    }
    return count;
}"
"Extract the username and domain name from the given email address.
Email address: johnsmith@example.com","Username: johnsmith
Domain name: example.com"
"Change the following code to make it easier to read
a=3;b='aa';b*=a;print(b)","a = 3
b = 'aa'
b = b * a
print(b)"
"Create a program that reads 6 numbers from the user and outputs whether they form an increasing subsequence of length 3 or not.
","def increasing_subsequence(arr):
  for i in range(len(arr)-2):
    if (arr[i] < arr[i+1]) and (arr[i+1] < arr[i+2]):
      return 'True'
  return 'False'"
"Add two matrices of size 3x3.
mat1 = [[1,2,3],
        [4,5,6],
        [7,8,9]]
mat2 = [[10,11,12],
        [13,14,15],
        [16,17,18]]","# adding two matrices
res = [[0, 0, 0],
        [0, 0, 0],
        [0, 0, 0]]

# iterating through rows
for i in range(3):
  # iterating through columns
  for j in range(3):
    res[i][j] = mat1[i][j] + mat2[i][j]

# printing the result
for i in range(3):
  for j in range(3):
    print(res[i][j], end="" "")
  print()

# Output:
11 13 15
17 19 21
23 25 27"
"Find all the prime factors of a given integer.
100","def prime_factors(n):
    # Empty list to store prime factors 
    lst = [] 
    
    # Divide by 2 while the number is 
    # divisible by 2  
    while n % 2 == 0: 
        lst.append(2)
        n = n / 2
          
    # n must be odd, now 
    # check all the numbers from 3 to 
    # the square root of n  
    for i in range(3, int(n**0.5)+1): 
        # check for divisibility of i by n  
        while n % i== 0: 
            lst.append(i) 
            n = n / i 
          
    # If n is a prime number then it 
    # will only be divisible by itself  
    if n > 2:
        lst.append(n)
      
    return lst

# Test  
print(prime_factors(100))

# Output
[2, 2, 5, 5]"
"Design a JavaScript function for calculating the hypotenuse of a right triangle.
a = 6;
b = 8;","function getHypotenuse(a,b){
    return Math.sqrt(a*a + b*b);
}"
"Create a Python dictionary that includes the keys ""name"", ""age"", and ""location"", and set the values to your name, age, and location.
","my_dict = {
 ""name"": ""John Smith"",
 ""age"": 28,
 ""location"": ""New York""
}"
"Create a CSS rule to set the div width to 100px.
","div {
    width: 100px;
}"
"Build a Keras model to predict whether a patient has cancer.
","model = keras.Sequential([
     keras.layers.Dense(64, activation='relu', input_shape=(len(features.keys()),)),
     keras.layers.Dense(32, activation='relu'),
     keras.layers.Dense(1, activation='sigmoid')
 ])

model.compile(optimizer='adam',
              loss='binary_crossentropy',
              metrics=['accuracy'])"
"Generate an array of length n that contains the square of the numbers from 1 to n.
n = 10","def generate_square_numbers(n):
    arr = []
    for i in range(1, n+1):
        arr.append(i*i)
    return arr"
"Edit the following code to find the maximum of three numbers
a = 3
b = 5
c = 7","a = 3
b = 5 
c = 7

maximum = max(a, b, c)
print(""The maximum of three numbers is: "", maximum)"
"What is an appropriate format to represent a 3-dimensional point?
","A 3-dimensional point can be represented as a tuple (x, y, z) consisting of the x-coordinate, y-coordinate, and z-coordinate of the point."
"Create a function in JavaScript that takes a string and a number as arguments, and returns a string with the first number of characters (specified by the number argument) replaced with the character '@'.
string = 'Hello World'
number = 4","function replaceWithAt(str, num){
  let replaceString = '';
  let i = 0;
  while (i < num) {
    replaceString += '@';
    i++;
  } 
  return str.replace(str.substring(0, num), replaceString);
}

console.log(replaceWithAt(string, number));"
"Generate an HTML form with a text input box.
","<form> 
  <input type=""text"" name=""name"" /> 
</form>"
"Write a C++ program for calculating the power of a number.
Base = 5;
Exponent = 2;","#include <iostream>
 
double power(double base, int exponent)
{
    double result = 1;

    for(int i = 0; i < exponent; i++)
    {
        result *= base;
    }

    return result;
}
 
int main()
{
    double base;
    int exponent;

    base = 5.0;
    exponent = 2;

    std::cout << power(base, exponent) << std::endl;

    return 0;
}"
"For each tuple in a given list, write a function to get the first element.
[(1,2), (3,4), (5,6)]","def get_first_element(tuples):
  return [t[0] for t in tuples]"
"You have been given a list of strings. Write a code to generate a new list containing only the strings with length less than 6 characters.
strings = ['Ready', 'Set', 'Go', 'Hello', 'Pizza', 'Book']","def get_shorter_strings(strings):
  shorter_strings = []
  for string in strings:
    if len(string) < 6:
      shorter_strings.append(string)
  return shorter_strings

if __name__ == ""__main__"":
  print(""strings with length less than 6:"", get_shorter_strings(strings))"
"Create a function in Java to check if the sum of two given numbers is greater than two times the second number.
num1 = 6, num2 = 7","public static boolean checkSum(int num1, int num2) {
    if((num1 + num2) > (2 * num2))
        return true;
    else return false;
}"
"Use the function ""randint()"" to generate a random number between 1 and 10 in Python.
","from random import randint
random_num = randint(1,10)
print(random_num)"
"Write a mySQL query to find all the rows with a particular value in a column.
Table: customers
Column: age
Value: 40",SELECT * FROM customers WHERE age = 40;
"Write an SQL query to find the names andphone numbers of all customers in the database.
","SELECT name, phone_number FROM Customer;"
"Return the ""name"" field of the JSON object given below.
{
	""name"": ""John Doe"",
	""age"": 28,
	""country"": ""United States""
}","import json

input_json = {
        ""name"": ""John Doe"",
        ""age"": 28,
        ""country"": ""United States""
}

def get_name(json):
    json_dict = json.loads(json)
    name = json_dict['name']
    return name

if __name__ == '__main__':
    print(get_name(input_json))"
"Create a function to accept an array of integers and return an array with the corresponding squares of each element.
arr = [1, 2, 3, 4]","def array_sqr(arr):
    return [x*x for x in arr]

print(array_sqr(arr))"
"Write a Python code to group the following numbers according to their last digit [1, 9, 5, 4, 6, 7, 8, 11].
[1, 9, 5, 4, 6, 7, 8, 11]","group_by_last_digit = {
    0: [],
    1: [1],
    2: [],
    3: [],
    4: [4],
    5: [5],
    6: [6],
    7: [7],
    8: [8],
    9: [9],
    11: [11]
}"
"Create a Python loop that prints numbers from 1 to 20
","for i in range(1, 21):
    print(i)"
"Write a JAVA program to display the list of numbers from 1 to 10
","public class NumberList { 
    public static void main(String[] args) 
    { 
        // Printing numbers from 1 to 10 
        for (int num = 1; num <= 10; num++) 
            System.out.println(num); 
    } 
}"
"Implement selection sort algorithm to sort an array of integers in Java.
arr = [5, 8, 2, 7, 1]","public static void selectionSort(int[] arr) {
  for (int i = 0; i < arr.length - 1; i++) { 
    int min_idx = i;
    for (int j = i + 1; j < arr.length; j++) {
      if (arr[j] < arr[min_idx]) min_idx = j; 
    }
    int temp = arr[min_idx];
    arr[min_idx] = arr[i];
    arr[i] = temp;
  }
}"
"Write a for loop in C to subtract 100 from an array of numbers.
array = [150, 200, 250]","for(int i = 0; i < array.length; i++){
    array[i] = array[i] - 100;
}"
"Create a JavaScript object called 'person' that contains the following properties: name, age, gender, and address.
","let person = {
name: ""John Doe"",
age: 32, 
gender: ""Male"", 
address: ""123 Street Street, City, State"" 
};"
"Create a dictionary for the attributes of each object in the list.
my_list = [{""name"": ""John"", ""age"": 20}, {""name"": ""Laura"", ""age"": 30}, {""name"": ""Harry"", ""age"": 25}]","my_dict = {}
for item in my_list:
 my_dict[item['name']] = item['age']
 
print(my_dict)"
"Write a function to check if the parentheses in given expression are balanced or not.
expression = ""((A+B)-C)*D+((E-F)*G""","def is_balanced(expression):
	open_paratheses = 0
	for char in expression:
		if char == '(':
			open_paratheses += 1
		elif char == ')':
			open_paratheses -= 1
		if open_paratheses < 0:
			return False
	return open_paratheses == 0

expression = ""((A+B)-C)*D+((E-F)*G"""
"Write a function to print the maximum and minimum number in a given list.
my_list = [5, 4, 7, 1, 2]","def print_extremes(my_list):
    print(""Maximum:"", max(my_list))
    print(""Minimum:"", min(my_list))

# Output
Maximum: 7
Minimum: 1"
"Write a Bash command to list the top 20 processes that are currently running on the system.
",ps -aux --sort=-%cpu | head -n 20
"Create a HTML form with three text fields (First Name, Last Name and Email).
","<form>
    <label for=""first-name"">First Name:</label>
    <input type=""text"" id=""first-name"" name=""first-name"">
    <br>
    <label for=""last-name"">Last Name:</label>
    <input type=""text"" id=""last-name"" name=""last-name"">
    <br>
    <label for=""email"">Email:</label>
    <input type=""email"" id=""email"" name=""email"">
</form>"
"Convert this SQL query into MongoDB
SELECT DISTINCT
    user_name
FROM
    user_login_history
WHERE
    user_id >= 1000","db.user_login_history.distinct(""user_name"", { ""user_id"" : { $gte : 1000 } })"
"Manipulate a given list of strings to capitalize the first letter in each string.
mylist = [""this"", ""is"", ""a"", ""list""]","def capitalize(mylist):
  new_list = []
  
  for item in mylist:
    new_list.append(item.capitalize())
  
  return new_list

print(capitalize(mylist))

#Output:
['This', 'Is', 'A', 'List']"
"Create a SQL query to select only the rows with an age greater than 10.
Table Name: users 
Columns: name, age",SELECT * FROM users WHERE age > 10;
"Write a JavaScript function to convert a given number to its Roman numeral equivalent.
","function toRoman(num) {
    // store roman equivalents of numbers
    var romanNumerals = {
        1: 'I',
        4: 'IV',
        5: 'V',
        9: 'IX',
        10: 'X',
        40: 'XL',
        50: 'L'
    };
  
    // array to store roman numeral
    var roman = [];
  
    // loop to check for roman equivalents
    for (let i = Object.keys(romanNumerals).length; i >= 0; i--) {
        let div = Math.floor(num / Object.keys(romanNumerals)[i]);
        let rem = num % Object.keys(romanNumerals)[i];
  
        if (div > 0) {
            roman.push(romanNumerals[Object.keys(romanNumerals)[i]].repeat(div));
            num = rem;
        }
    }
  
    // return the new created string
    return roman.join("""");
}"
"Write an SQL query to calculate the difference between the total salaries of male and female employees in a table.
","SELECT SUM(CASE WHEN gender = 'female' THEN salary ELSE 0 END) - SUM(CASE WHEN gender = 'male' THEN salary ELSE 0 END)
FROM employees;"
"To what type of data can the following MySQL query return?
SELECT *
FROM table1 t1
INNER JOIN table2 t2
ON t1.id = t2.id",The query can return results of any combination of columns from the two tables. It will return a set of records with the matching id from Table 1 and Table 2.
"Update the given Python program to reverse a string.
def reverse_string(s): 
    #insert code here
    return s","def reverse_string(s):
    return s[::-1]"
"Generate a function which takes a two-dimensional array of integers as an argument and prints out the elements in spiral order.
[[1,2,3],
[4,5,6],
[7,8,9]]","def printSpiral(arr):
    # track the current row and columns
    cur_row = 0
    cur_col = 0
    
    # track the starting and ending columns of the row and rows of the column
    start_col = 0
    end_col = len(arr[0]) - 1
    start_row = 0
    end_row = len(arr) - 1
    
    while start_col <= end_col and start_row <= end_row:
        # move right
        for i in range(start_col, end_col + 1):
            print(arr[cur_row][i])
        start_row += 1
        cur_row = start_row
        
        # move down
        for i in range(start_row, end_row + 1):
            print(arr[i][end_col])
        end_col -= 1
        cur_col = end_col
        
        # move left
        for i in range(end_col, start_col - 1, -1):
            print(arr[end_row][i])
        end_row -= 1
        cur_row = end_row
        
        # move up
        for i in range(end_row, start_row - 1, -1):
            print(arr[i][start_col])
        start_col += 1
        cur_col = start_col"
"Given a sorted list of integers, write a Python function to search for a specific target element.
","def binary_search(list, target):
 low = 0
 high = len(list) - 1

 while low <= high:
  mid = (low + high) // 2
  if list[mid] < target:
   low = mid + 1
  elif list[mid] > target:
   high = mid - 1
  else:
   return mid
 return False"
"Write a Python program that generates a random integer between 1 and 5 and prints it out.
","import random

random_integer = random.randint(1, 5)

print(random_integer)"
"Using a database query, count the number of employees in a company database.
","SELECT COUNT(*)
FROM Employee"
"Is this SQL query valid?
SELECT * FROM foobar ORDER BY name",true
"Format the following array of numbers using Python.
arr = [3, 1, 4, 5, 9, 8]","arr = [3, 1, 4, 5, 9, 8]

# sorting the array
arr.sort()

# print the array
print(arr)

# Output:
[1, 3, 4, 5, 8, 9]"
"Write a Python program to find all the factors of an integer.
number = 16","def find_factors(number):
    factors = []
    for i in range(1, number + 1):
        if number % i == 0:
            factors.append(i)
    return factors"
"Calculate the probability of an event that occurs 3 out of 10 times.
",probability = 0.3
"Write a CSS style sheet to change the background color of the webpage to blue.
","body {
    background-color: blue;
}"
"Write a code snippet to create an object of type Car in Python.
","class Car():
    def __init__(self):
        self.make = """"
        self.model = """"
        self.year = 0
        self.color = """"
 
car = Car()"
"Design a web page to display the first ten elements of a given 2D array.
A 2D array [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]]","<table>
    <tr>
        <td>1</td>
        <td>2</td>
        <td>3</td>
    </tr>
    <tr>
        <td>4</td>
        <td>5</td>
        <td>6</td>
    </tr>
    <tr>
        <td>7</td>
        <td>8</td>
        <td>9</td>
    </tr>
    <tr>
        <td>10</td>
        <td>11</td>
        <td>12</td>
    </tr>
</table>"
"How do you use the Set structure in Java?
","The Set interface in Java provides an unsorted, unordered collection of objects that cannot contain duplicates. The Set interface is part of the Java Collection Framework and provides methods such as add(), remove() and contains() which allow you to manipulate the set. The Set interface is implemented by the HashSet class and the TreeSet class. The HashSet class is used for unordered collections of objects, while the TreeSet class is used for sorted collections."
"Write a PL/SQL program to print out all numbers from 1 to 10.
","BEGIN
  FOR i IN 1..10 LOOP
    DBMS_OUTPUT.PUT_LINE(i);
  END LOOP;
END;"
"Implement an algorithm to print the steps of the Tower of Hanoi problem.
","def hanoi(num_disks, from_peg, to_peg, aux_peg):
    if num_disks == 1:
        print(""Move disk 1 from peg"", from_peg,""to peg"", to_peg)
        return

    hanoi(num_disks-1, from_peg, aux_peg, to_peg)
    print(""Move disk"",num_disks,""from peg"",from_peg,""to peg"",to_peg)
    hanoi(num_disks-1, aux_peg, to_peg, from_peg)"
"Using Regular Expressions, search for all 3-digit occurrences in the given text.
text = ""The ship had a 590 foot cargo hold, filled with 204 tons of goods.""",590 and 204.
"Design a data structure that will store name, phone number and address of a person.
","class PersonData {
    String name;
    String phoneNumber;
    String address;

    PersonData(String name, String phoneNumber, String address) {
        this.name = name;
        this.phoneNumber = phoneNumber;
        this.address = address;
    }
}"
"Calculate the sum of all odd numbers from 1 to 10.
",25
"Create an array of 5 increasing numbers starting from 10.
","var arr = [10, 11, 12, 13, 14];"
"Edit a program to show the area of the rectangle
#include <stdio.h>
 
int main()
{
    int length, width;
    printf(""Enter the length : "");
    scanf(""%d"", &length);
 
    printf(""Enter the width : "");
    scanf(""%d"", &width);
   
    printf(""The Perimeter of rectangle is : %d \n"", 2*(length + width));
 
    return 0;
}","#include <stdio.h>
 
int main()
{
    int length, width;
    printf(""Enter the length : "");
    scanf(""%d"", &length);
 
    printf(""Enter the width : "");
    scanf(""%d"", &width);
   
    printf(""The Perimeter of rectangle is : %d \n"", 2*(length + width));
    printf(""The Area of rectangle is : %d \n"", length * width);
 
    return 0;
}"
"Create a method to build a dictionary that contains all even numbers from the given list.
[2, 3, 7, 8, 10, 11]","def build_even_dict(numbers): 
 even_dict = {key: value for key, value in enumerate(numbers) if value % 2 == 0} 
 return even_dict"
"Convert a given expression to the postfix notation.
(A + B) * (C - D)",A B + C D - *
"Design a CSS class that will set the font family of an HTML element to ‘Arial’, font size to 12 pts and font weight to bold.
",".arial-12-pt { 
  font-family: Arial; 
  font-size: 12pt; 
  font-weight: bold;
}"
"Calculate 3 to the 5th power.
",243
"Construct a function to convert currency amount from USD to INR.
Current USD to INR ratio: 1 USD = 73.20 INR","def currency_convert(amount):
   
    #Convert amount from USD to INR
    inr = amount * 73.20 
    
    #return the converted currency
    return inr
  
#Test
amount = int(input(""Enter amount of currency in USD:"")) 
  
print(""The amount in INR:"",currency_convert(amount))"
"Write a code to implement a round-robin scheduling algorithm.
processes = [10, 5, 7]
time_slice = 2","# Program to implement a round-robin scheduling algorithm

# Get the list of processes and the time slice 
processes = [10, 5, 7]
time_slice = 2

# Create an empty list to store the remaining burst time 
remaining_burst = []

# Loop through all processes to get the remaining burst time 
for process in processes:
  remaining_burst.append(process)

# Keep track of current time cycle 
time = 0

# Loop through the processes and implement round-robin scheduling
while True:
  done = True
  
  # Iterate through the processes
  for i in range(len(processes)):
    if remaining_burst[i] > 0:
      done = False # Not done yet
      
      if remaining_burst[i] > time_slice:
        # Increment timeline
        time += time_slice
        
        # Reduce the remaining burst time 
        remaining_burst[i] -= time_slice
      else:
        # Increment timeline
        time += remaining_burst[i]
        
        # Set remaining burst to 0 
        remaining_burst[i] = 0

  # Break the loop if all processes are done 
  if done:
    break

print('Total time to schedule the processes is', time)"
"Transform a given Python list of integers into a dictionary that contains the numbers as keys and its squares as values.
[1,2,3]","my_list = [1,2,3]
dict_squares = {x:x**2 for x in my_list}"
"Create a React component that renders a HTML anchor link with the text ""Visit my website"".
","import React from 'react'; 
 
const Link = () => ( 
  <a href=""/"">Visit my website</a> 
); 
 
export default Link;"
"Design a web page containing HTML/CSS containing at least 5 containers.
","<html>
<head>
    <title>My Webpage</title>
</head>
<body>
    <div class=""container1"" >
    </div>
    <div class=""container2"" >
    </div>
    <div class=""container3"" >
    </div>
    <div class=""container4"" >
    </div>
    <div class=""container5"" >
    </div>
</body>
</html>"
"Design an algorithm to sort an array using Quick Sort.
Array: [5, 3, 6, 2, 1, 4]","def quickSort(arr, low, high):
    # Base case
    if low >= high:
        return

    # Pivot is the middle element
    pivot = arr[(low + high) // 2]
    i = low # Left pointer
    j = high # Right pointer

    while i <= j:
        # If the current value is smaller or equal than the pivot
        while arr[i] < pivot:
            i += 1
        # If the current value is larger than the pivot
        while arr[j] > pivot:
            j -= 1

        # If values are not in the correct order
        if i <= j:
            arr[i], arr[j] = arr[j], arr[i]
            i += 1
            j -= 1

    # Recursively sort the left and right halves
    quickSort(arr, low, j)
    quickSort(arr, i, high)

arr = [5, 3, 6, 2, 1, 4]
quickSort(arr, 0, len(arr)-1)
print(arr)

Output: [1, 2, 3, 4, 5, 6]"
"Generate a unique ID for a given string.
s = ""Hello World""","# generate a unqiue ID for the given string
import uuid 
  
# string 
string = ""Hello World""
  
# printing the original string 
print(""The original string is : "" + string) 
  
# generating the unique ID 
string_id = uuid.uuid4() 
  
# printing the unique ID 
print(""The unique id for given string is : "", string_id)"
"Write a function to generate Fibonacci numbers in Python.
","def fibonacci(num):
  fib_list = [0, 1]
  if num == 0:
    return []
  elif num == 1:
    return [0]
  else:
    for _ in range(2, num):
      nxt_num = fib_list[-1] + fib_list[-2]
      fib_list.append(nxt_num)
    return fib_list"
"Create a PHP script to print out Fibonacci numbers up to 50.
","<?php 
function Fibonacci($n){ 
  
    if ($n == 0) 
        return 0;     
    else if ($n == 1) 
        return 1;     
      
    else
        return (Fibonacci($n-1) +  
                Fibonacci($n-2)); 
} 
  
$n = 50; 
for ($i = 0; $i < $n; $i++) 
    echo Fibonacci($i),' '; 
  
?>"
"Create an HTML page with a navigation bar containing a heading and a search field.
","<html>
  <head>
    <title>My Page</title>
  </head>
  <body>
    <nav>
      <h1>My Navigation</h1>
      <input type=""text"" placeholder=""search..."">
    </nav>
  </body>
</html>"
"Sort the given words in lexicographical order.
apple, cat, flower, dog","apple, cat, dog, flower"
"Create a class that creates a stack object and implements push and pop functions
","class Stack: 
	def __init__(self): 
		self.stack = [] 

	# This method adds an element at the top of the stack 
	def push(self, item): 
		self.stack.append(item) 
 
	# This method removes the topmost element and returns it 
	def pop(self): 
		if self.is_empty(): 
			return None
		return self.stack.pop() 
  
	# This method returns the topmost element without removing it 
	def peek(self): 
		if self.is_empty(): 
			return None
		return self.stack[-1] 
  
	# This method returns true or false depending on whether the stack is empty or not 
	def is_empty(self): 
		return len(self.stack) == 0"
"Develop a function which returns the position of a given element in a list.
my_list = [1, 2, 3, 4]
element = 3","def find_index(my_list, element):
    for i in range(len(my_list)):
        if my_list[i] == element:
            return i"
"What is the index of the item which is given below?
my_list = [1, 2, 3, 4, 5]
item_to_find = 3","index_of_item = my_list.index(item_to_find)

# Output
2"
"Edit the following program so that it prints out the result of x multiplied by y.
x = 7
y = 5
print(x + y)","x = 7
y = 5
print(x * y)"
"Rewrite the following Java code using a for loop instead of a for-each loop.
List<Integer> someList = new ArrayList<>();
for (Integer i : someList) {
    System.out.println(i);
}","List<Integer> someList = new ArrayList<>();
for (int i=0; i < someList.size(); i++) { 
    System.out.println(someList.get(i));
}"
"How do you display the contents of an array in reverse order?
","The contents of an array can be displayed in reverse order by using the reverse() method or by using a for loop. 

For example, to display the content of the array [1, 2, 3, 4], the following code can be used:

// Using reverse()
let arr = [1, 2, 3, 4];
arr.reverse();
console.log(arr); // Output: [4, 3, 2, 1]

// Using a for loop
let arr = [1, 2, 3, 4];
for (let i = arr.length - 1; i >= 0; i--) {
    console.log(arr[i]); // Output: 4 3 2 1
}"
"Write an SQL query to sort the customers in the table 'customers' alphabetically by their last name.
","SELECT * FROM customers
ORDER BY last_name;"
"Update the program to print the sum of two numbers given as input.
def add(a, b):
 print(a)","def add(a, b):
 print(a + b)"
"Describe a method for adding two numbers that uses a stack data structure
","A method for adding two numbers using a stack data structure involves the following steps: 
1. Push the two numbers onto the stack. 
2. Pop the two numbers off the stack and add them together. 
3. Push the result onto the stack.
4. Pop the result off the stack and return it as the final answer."
"You are given a string of tasks. Split the string into a list of tasks.
Tasks = ""cook breakfast;run errand;pick up kids; feed the dog""","tasks = [""cook breakfast"", ""run errand"", ""pick up kids"", ""feed the dog""]"
"There is a string of code. Can you tell me if there are syntax errors in it?
def foo():
    print('bar",true
"We need to find the maximum element in a given array of numbers.
[1, 2, 3, 4, 5]","def find_max(arr):
 maximum = arr[0]
 for i in arr[1:]:
 if i > maximum:
 maximum = i
 return maximum"
"Create a C++ class called Employee with two data fields age and name.
","class Employee {
    int age;
    string name;
public:
    int getAge() { return age; }
    string getName() { return name; }
    void setAge(int age) { this->age = age; }
    void setName(string name) { this->name = name; }
};"
"Create a class named Dog with parameters name, age and breed.
","class Dog:
    def __init__(self,name, age, breed):
        self.name = name
        self.age = age
        self.breed =  breed"
"Initialize a list of length n using an input n.
n = 10","my_list = [0] * n
print(my_list)"
"Write an SQL query to identify unique months and years that appear in a table.
Table: Appointments
id | month | year","SELECT DISTINCT month, year
FROM Appointments;"
"Modify the following code so that it takes a list of numbers and calculates their median.
def median(data):","def median(data):
    data.sort()
    length = len(data)
    if length == 0:
        return 0
    if length % 2 == 0:
        return (data[length // 2] + data[length // 2 - 1]) / 2
    elif length % 2 == 1:
        return data[length // 2]"
"Create a JSON object that contains person data.
","person = { 
    ""name"": ""John Smith"", 
    ""age"": 32, 
    ""address"": { 
        ""street"": ""123 Main Street"", 
        ""city"": ""Chicago"", 
        ""state"": ""IL""
    }, 
    ""hobbies"": [""golf"", ""reading"", ""fishing""]
}"
"Write a for loop in JavaScript that iterates 10 times and prints a message each time.
","for (let i = 0; i < 10; i++) {
    console.log(`Iteration number ${i}`);
}"
"Compare two given strings and return true if they are the same.
str1 = ""Hello world""
str2 = ""Hello world""","def compare_str(str1, str2): 
 return str1 == str2

str1 = ""Hello world""
str2 = ""Hello world""

print(compare_str(str1, str2))
# Output: True"
"How do you represent time in JavaScript?
","In JavaScript, time is typically represented as the number of milliseconds that have elapsed since midnight on January 1st, 1970 (also known as the Unix Epoch). It can be represented as a Date object, or by using its individual components (such as hours, minutes, and seconds)."
"Develop a method to achieve the linear interpolation between two given points
","def linear_interpolation(x1, y1, x2, y2): 
    # slope 
    m = (y2 - y1) / (x2 - x1) 
    # intercept 
    c = y2 - (m * x2) 
    return m, c"
"Convert the following JavaScript function to TypeScript.
function countOccurences(numList,num) {
    let count = 0;
    for (let i = 0; i < numList.length; i++) {
        if (numList[i] === num) count++;
    }
    return count;
}","function countOccurences(numList: number[], num: number): number {
    let count = 0;
    for (let i = 0; i < numList.length; i++) {
        if (numList[i] === num) count++;
    }
    return count;
}"
"Create a 3D array of size 3 x 3 x 3 which contains all elements equal to 0.
","import numpy as np
arr = np.zeros((3, 3, 3))
print(arr)"
"Find the simplest possible way to print ""Welcome to Tech World!"" five times.
","for _ in range(5):
    print(""Welcome to Tech World!"")"
"Write a code to get the age of a person given their year of birth.
born_year = 2003","# Get the age of a person given their year of birth
from datetime import date

def get_age(born_year):
    # Get current year
    today_year = date.today().year
    
    # Compute the age
    age = today_year - born_year
    
    # Return the result
    return age"
"Create a regular expression pattern to detect valid 4-digit numeric codes
",^\d{4}$
"Create a word frequency dictionary for the following sentence:
""The quick brown fox jumps over the lazy dog.""","words_frequencies = {'the': 2, 'quick': 1, 'brown': 1, 'fox': 1, 'jumps': 1, 'over': 1, 'lazy': 1, 'dog': 1}"
"How do you install the Django web framework?
","Install Django using pip by running the following command from the command line:
pip install Django

You can also install Django from source:
git clone https://github.com/django/django.git
cd django
python setup.py install"
"Create a function 'removeLetters' that takes a string and removes all instances of a given letter from it.
String = ""This string contains multiple letter t's.""
Letter = 't'","def removeLetters(inputString, letter):
    outputString = """"
    for c in inputString:
        if c != letter:
            outputString = outputString + c
    return outputString

print(removeLetters(""This string contains multiple letter t's."", 't'))

OUTPUT:
""This string contains multiple letter s."""
"Create a function to take in a given array, rotate it by one, so that the last element of the array is now the first element.
[1, 2, 3, 4, 5]","def rotate_list(arr):
     length = len(arr) 
     temp = arr[length - 1] 

     for i in range(length-1, 0, -1):
        arr[i] = arr[i-1] 
     arr[0] = temp 
      
     return arr
 
my_list = [1, 2, 3, 4, 5]
print(rotate_list(my_list))  #Output: [5, 1, 2, 3, 4]"
"Suggest a way to identify and remove duplicate elements from the list.
numbers = [2, 3, 2, 5, 8, 3, 10]","# Method 1 - Using Set
numbers_set = set(numbers)
numbers_set = list(numbers_set)
print(numbers_set)
# Output: [2, 3, 5, 8, 10]

# Method 2 - Using Loop
no_duplicate = [] 
for num in numbers: 
    if num not in no_duplicate: 
        no_duplicate.append(num) 
print(no_duplicate)
# Output: [2, 3, 5, 8, 10]"
"Design a program that takes a number as input and prints out its corresponding ASCII character.
Number: 90","def getChar(num):
    return chr(num)

# Test
print(getChar(90)) # 'Z'"
"Write a Python code to convert the given temperature from Celsius to Fahrenheit.
25","Celsius = 25
Fahrenheit = (Celsius * 9/5) + 32

print('{} degrees Celsius is equal to {} degrees Fahrenheit.'.format(Celsius, Fahrenheit))
# Output: 25 degrees Celsius is equal to 77 degrees Fahrenheit."
"Create an HTML page with a layout consisting of 3 containers: one on the left and two on the right.
","<html>
    <head>
    </head>

    <style>
        #container{
            width: 100%;
            display: flex;
        }

        #left-container{
            width: 20%;
        }

        #right-containers{
            width: 80%;
            display: flex;
        }

        #right-container1{
            width: 50%;
        }

        #right-container2{
            width: 50%;
        }
    </style>

    <body>
        <div id=""container"">
            <div id=""left-container"">
                <!-- Left Container Content -->
            </div>
            <div id=""right-containers"">
                <div id=""right-container1"">
                    <!-- Right Container 1 Content -->
                </div>
                <div id=""right-container2"">
                    <!-- Right Container 2 Content -->
                </div>
            </div>
        </div>
    </body>
</html>"
"Parse a JSON string into an object in JavaScript.
{""name"": ""John Doe"", ""age"": 30}","var data = JSON.parse('{""name"": ""John Doe"", ""age"": 30}');
var name = data.name;
var age = data.age;"
"Identify any typos or grammatical errors in this sentence.
Emmm, it seemms so.","typos: ""seemms"" 
grammatical errors: none"
"Using React, create a component to display a table containing a list of cities.
","const CityTable = ({ cities }) => {
  const cityRows = cities.map(city => (
    <tr key={city.id}>
      <td>{city.name}</td>
      <td>{city.population}</td>
      <td>{city.country}</td>
    </tr>
  ));
  return (
    <table>
      <thead>
        <tr>
          <th>Name</th>
          <th>Population</th>
          <th>Country</th>
        </tr>
      </thead>
      <tbody>{cityRows}</tbody>
    </table>
  );
};"
"Write a function that takes a string as an input and returns a list of all the substring of the given string.
string = ""hello""","def substrings(string):
    substrings_list = []
    for i in range(len(string)+1):
        for j in range(i+1, len(string)+1):
            substrings_list.append(string[i:j])
    return substrings_list"
"Write an R command to calculate the standard deviation of the given array.
x = c(3, 4, 5, 7, 8)",sd(x)
"Create a code snippet to print the words ""hello world"" three times.
","for i in range(3):
    print(""hello world"")"
"Write a SQL query to find the average credit score of users who are 18 years or younger.
","SELECT AVG(credit_score)
FROM users
WHERE age <= 18"
"Create a class in Python with the attributes name and age.
","class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age"
"Compose a style sheet in CSS that will make all text with the class ""blue"" have a blue color.
",".blue { 
    color: blue; 
}"
"What is the basic syntax to define a function in Python 3?
","def function_name(parameters):
    """""" function docstring """"""
    statement(s)"
"Write an HTML form with two input fields, one for the user's name and one for the user's age.
","<form>
  <label>Name:</label><input type=""text"" name=""name""><br>
  <label>Age:</label><input type=""number"" name=""age""><br>
  <input type=""submit"" value=""Submit"">
</form>"
"Construct an array in JavaScript that contains the numbers from 6 to 15.
","let arr = [6, 7, 8, 9, 10, 11, 12, 13, 14, 15];"
"Create a for loop to iterate over the following list and print each element.
list = [1, 2, 3, 4, 5]","for x in list:
    print(x)"
"Using the given three arrays, classify each array element as either prime numbers or not prime numbers.
arr1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];
arr2 = [4, 6, 9, 10, 12, 15, 18, 20];
arr3 = [11, 13, 17, 19, 23, 27, 37, 41];","function classifyPrime(arr1,arr2,arr3) {
    let result = {
        arr1: [],
        arr2: [],
        arr3: []
    };
    for(let i = 0; i < arr1.length; i++){
        if (isPrime(arr1[i])){
            result.arr1.push(""prime"");
        } else {
            result.arr1.push(""not prime"");
        }
    }
    for(let i = 0; i < arr2.length; i++){
        if (isPrime(arr2[i])){
            result.arr2.push(""prime"");
        } else {
            result.arr2.push(""not prime"");
        }
    }
    for(let i = 0; i < arr3.length; i++){
        if (isPrime(arr3[i])){
            result.arr3.push(""prime"");
        } else {
            result.arr3.push(""not prime"");
        }
    }
    return result;
}

function isPrime(num){
    let prime = true;
    for(let i = 2; i <= Math.sqrt(num); i++){
        if ( num % i === 0 ){
            prime = false;
        }
    }
    return prime;
}

arr1Result = classifyPrime(arr1,arr2,arr3);"
"Write a number of HTML tags such that their end tags are mismatched.
","<html>
  <head>
    <title>Test</title>
  </head>
  <body>
    <h1>My Heading</h1>
    <p>This is a test.
  </body>
</html>"
"Construct a regular expression that matches a string containing numbers from 0 to 9 within a range of 8 and 16 digits.
","^[0-9]{8,16}$"
"Write a SQL query to find the highest selling product in each state.
Sales(state, product, revenue)","SELECT
 state,
 product,
 MAX(revenue) AS revenue
FROM Sales
GROUP BY state, product;"
"Given an array of strings, find the string that is the most common in the array.
[""Apple"", ""Banana"", ""Apple"", ""Orange""]","String mostCommon = """";
int maxCount = 0;

for (int i = 0; i < strArr.length; i++) {
    int count = 0;
    for (int j = 0; j < strArr.length; j++) {
        if (strArr[i].equals(strArr[j])) {
            count++;
            if (count > maxCount) {
                mostCommon = strArr[i];
                maxCount = count;
            }
        }
    }
}

// mostCommon is ""Apple"""
"Create an array of descending numbers starting from 10 to 1 using a for loop.
","numberArray = []
for x in range(10, 0, -1):
    numberArray.append(x)

print(numberArray) # [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]"
"Create a clould-based web application in Java to store financial details.
","import java.io.*; 
import java.util.*; 
import com.amazonaws.services.lambda.*; 
import com.google.gson.Gson;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import org.json.simple.*; 
import org.json.simple.JSONObject; 

public class DataStorage implements RequestHandler<JSONObject, JSONObject> { 
  public JSONObject handleRequest(JSONObject input, Context context) { 
    // Read details from the request 
    String userID = (String)input.get(""userID""); 
    String transactionID = (String)input.get(""transactionID""); 
    float amount = ((Number)input.get(""amount"")).floatValue(); 
    String description = (String)input.get(""description""); 
 
    // Store data in database
    // Code for storing data

    return response; 
  } 
}"
"Generate CSS code to set the font color of a div with class ""container"" to red.
",".container {
    color: red;
}"
"Design a query in MongoDB to select documents based on a particular value in an array.
DB student {
    id INT,
    name VARCHAR(100),
    marks_arr INT[],
    total INT
}","db.students.find({
    marks_arr : { $in : [100] }
})"
"What data structure should we use to solve this problem?
We want to store a list of names and their associated addresses, and then look up names quickly.",A HashMap is the best data structure for this use case because it provides the ability to quickly look up values when given the associated key (name in this case).
"Write a code to check if one given string is a substring of another.
string1=""programming""
string2=""gram""","def is_substring(string1, string2):
    return string2 in string1

if __name__ == '__main__':
    string1=""programming""
    string2=""gram""
    print(is_substring(string1, string2))"
"Suggest a use case for natural language processing in healthcare.
","Natural language processing can be used in healthcare to analyze patient documents for insights, automate medical coding, detect drug interactions, identify risk factors and trends, and improve healthcare communication. For example, a natural language processing system can be used to scan patient notes to identify potential symptoms and suggest possible diagnoses. Additionally, natural language processing systems can also be used to automate medical coding and make medical texts searchable and easier to understand."
"Write a SQL query to find the names of all customers who bought a laptop from a store.
TableName: Customers

Columns:
CustomerId INT 
Name VARCHAR(50) 
PurchaseItem VARCHAR(20)

TableName: Purchases

Columns:
PurchaseId INT 
CustomerId INT 
PurchaseItem VARCHAR(20)","SELECT c.Name
FROM Customers c
INNER JOIN Purchases p ON c.CustomerId = p.CustomerId
WHERE p.PurchaseItem = 'laptop';"
"Create a dictionary that has each unique word as the key, and the number of times the word appears as the value.
The quick brown fox jumped over the lazy dog.","words_counts = {
    ""The"": 1,
    ""quick"": 1,
    ""brown"": 1,
    ""fox"": 1,
    ""jumped"": 1,
    ""over"": 1,
    ""the"": 1,
    ""lazy"": 1,
    ""dog."": 1
}"
"Given a two-dimensional array of integers, find the maximum sum of numbers you can find by tracing a path from the top-left to bottom-right corner.
[[1, 5, 4], [2, 3, 4], [1, 9, 3]]","def max_sum(arr):
    result = [[None] * len(arr[0]) for _ in range(len(arr))]
    result[0][0] = arr[0][0]
    for i in range(1, len(arr[0])):
        result[0][i] = arr[0][i] + result[0][i - 1]
    for i in range(1, len(arr)):
        result[i][0] = arr[i][0] + result[i - 1][0]
    for i in range(1, len(arr)):
        for j in range(1, len(arr[0])):
            result[i][j] = max(result[i - 1][j], result[i][j - 1]) + arr[i][j]
    return result[- 1][- 1]

if __name__ == '__main__':
    arr = [[1, 5, 4], [2, 3, 4], [1, 9, 3]]
    print(max_sum(arr))"
"Calculate the factorial of 8.
",The factorial of 8 is 403
"Generate a list of 20 strings containing random characters of length 10.
","['Kj9F7VAl1q', '28jVYbueph', 'f7VZRif5uP', '2jf5CHXyt7', '3qBtyKjDIY', 'hE5wrRmIP6', 'V7jQcfhIBz', 'UQy6gCwPa5', '6Ujpu7NfMk', 'Z6DFhBoK8e', 'DIFpjgrhT7', 'TzdGsvhRO2', '1Kv4RyZoF8', 'RKjUXviPca', 'yO2PCtEjx1', 'qchomMdP9X', '9ydNHCaTZX', 'TFrhYdgSjp', 'BYeH12I4th', '4XNgJfKCAd']"
"Generate a shorthand method in Python to replace all 0s with 1.
input_list = [1, 0, 1, 0, 0]","def replace_zeros(input_list): 
    output_list = [x if x != 0 else 1 for x in input_list] 
    return output_list"
"Write a code to generate a random password with a given length.
","import random
import string

def generate_password(length):
    chars = string.ascii_letters + string.digits + '!@#$%^&*()'
    random.seed = (random.SystemRandom().random())
    return ''.join(random.choice(chars) for i in range(length))

print(generate_password(10))  # Output is an alphanumeric string of length 10"
"In Python, create a function that takes 2 integers and returns the maximum number.
","def maximum(a, b):
    if a > b:
        return a
    else:
        return b"
"Write a regular expression in Ruby that prints all the words beginning with 'a' in a string.
String: ""The quick brown fox jumps over the lazy dog""","pattern = /\ba\S+\b/

string.scan(pattern).each { |word| puts word }"
"Implement a function in Java to find the frequency of a particular character in a given string.
","public static int getCharFrequency(String str, char c) 
{ 
   int count = 0; 
   for (int i = 0; i < str.length(); i++)  
   { 
       if (str.charAt(i) == c) 
           count++; 
   } 
   return count; 
}"
"Write code to convert a given number expressed in hexidecimal representation to binary.
","def hex_to_bin(hex_str):
    #validating the input
    if hex_str[-1] not in ""0123456789ABCDEF"":
        return ""Invalid Hexadecimal!!""
     
    #using bin() function to get the binary value  
    return bin(int(hex_str, 16))[2:]"
"Generate some HTML code to create a table with 3 columns.
","<table>
  <tr>
    <th>Column1</th>
    <th>Column2</th>
    <th>Column3</th>
  </tr>
</table>"
"Create a Python class for a 3×3 matrix.
","class Matrix3x3:

    def __init__(self):
        # Set the default 3x3 matrix values to 0
        self.matrix = [[0,0,0],[0,0,0],[0,0,0]]

    def set_value(self, x, y, value): 
        # Set the value in the matrix at position x and y
        self.matrix[x][y] = value

    def get_value(self, x, y): 
        # Get the value in the matrix at position x and y
        return self.matrix[x][y]

    def multiply_scalar(self, scalar): 
        # Multiply the matrix with a scalar
        for i in range(3): 
            for j in range(3): 
                self.matrix[i][j] *= scalar"
"How can you create a dictionairy from the following two lists in Python?
list1 = [""a"", ""b"", ""c""]
list2 = [1, 2, 3]","dict_from_lists = dict(zip(list1, list2))"
"How would you store the location of a person in a database?
","The location of a person can be stored in a database in the form of a latitude and longitude pair, as a set of geographic coordinates or as a physical address."
"How would you create a list of 10 elements by calling the range() function?
",my_list = list(range(10))
"Write C++ code to implement a stack data structure.
","#include <iostream> 
#include <vector> 

using namespace std; 

class Stack 
{ 
    vector<int> items; 
  
public: 
    void push(int item) 
    { 
        items.push_back(item); 
    } 
  
    int pop() 
    { 
        int data = items.back(); 
        items.pop_back(); 
        return data; 
    } 
  
    void printItems() 
    { 
        cout << ""Items in the stack are: ""; 
        for (int i = 0; i < items.size(); i++) 
            cout << items[i] << ' '; 
        cout << endl; 
    } 
}; 
  
int main() 
{ 
    Stack s; 
    s.push(1); 
    s.push(2); 
    s.push(3);
    s.push(4); 
    s.printItems();  
    s.pop(); 
    s.printItems(); 
    return 0; 
}"
"Design a user interface in HTML for a login form.
","<!DOCTYPE html>
<html lang=""en"">
<head>
 <meta charset=""UTF-8"">
 <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
 <title>Login Form</title>
</head>
<body>
 <form>
  <label>Username:</label>
  <input type=""text"" name=""username"" required>
  <label>Password:</label>
  <input type=""password"" name=""password"" required>
  <input type=""submit"" value=""Login"">
 </form>
</body>
</html>"
"What is ""branching"" in version control systems?
","Branching is the ability to create a separate line of development within a version control system. This allows developers to have multiple versions of the same project, each with its own unique changes. Branches are used to isolate different features or bug fixes in different versions, without affecting the main line of development."
"Generate pseudocode for a matrix multiplication algorithm.
","""""""
Generate pseudocode for a matrix multiplication algorithm.
""""""

# Create an NxN matrix result, initialized to 0
result = zeros(NxN)

# loop through matrix A and B
for i in range(N):
    for j in range(N):
        for k in range(N):
            # multiply the elements of A and B
            result[i][j] += A[i][k] * B[k][j]

# return the result matrix
return result"
"Given an acute angled triangle, write a function to compute its area using Heron's formula.
","def heron_area(a, b, c): 
	# calculate the semi-perimeter 
	s = (a + b + c) / 2

	# calculate the area 
	area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
	return area"
"Create a CSS style to underline a given element.
","element {
  text-decoration: underline;
}"
"Explain the concept of a priority queue
","A priority queue is a type of data structure where each element has an associated priority. A priority queue can be used to store and manage data where the highest priority elements are retrieved first. Elements in the priority queue are ordered according to their priority, with the highest priority element at the front of the queue and the lowest priority element at the back."
"Sum up all the elements in a given array.
a = [7, 2, 5, 8]",The sum of the elements in the array is 22.
"What is the Big O notation for the following algorithm?
function add(x, y):
  result = x + y
  return result",O(1)
"Create a Flask application to display a web page containing the words ""Hello, World.""
","from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello():
   return ""<h1>Hello, World!</h1>""

if __name__ == '__main__':
   app.run()"
"Rewrite the given code so that it uses Java 8 features.
import java.util.ArrayList; 
List<String> list = new ArrayList<String>();
int sum = 0; 
for(String str: list){ 
   sum += Integer.parseInt(str); 
}","import java.util.List; 
List<String> list = List.of(""1"",""2"",""3"",""4"");
int sum = list.stream()
               .mapToInt(Integer::parseInt)
               .sum();"
"Write a script to check if a given number is a palindrome or not.
inputNumber = 121","# Function to check whether the inputNumber is palindrome or not
def is_palindrome(inputNumber):

   # negative numbers are not palindrome
   if inputNumber < 0:
       return False

   # find the number of digits in the inputNumber
   div = 1
   while (inputNumber / div >= 10):
       div *= 10

   # check if the most significant and least significant digits match
   while (inputNumber != 0):
       # compare first and last digits
       firstdigit = inputNumber // div
       lastdigit =  inputNumber % 10
       if firstdigit != lastdigit:
           return False

       # remove the most and least significant digit of inputNumber
       inputNumber = (inputNumber % div) // 10

       # reduce div by a factor of 2,  since 2 digits
       # were removed
       div = div // 100
   return True

# Driver code to test above
inputNumber = 121
if is_palindrome(inputNumber) :
  print(""Yes"")
else:
  print(""No"")"
"Remove the given function from the code and replace it with a lambda expression.
def multiply_by_two(x):
   return x * 2",multiply_by_two = lambda x: x * 2
"Write a function to display a temperature in Celsius with the corresponding temperature in Fahrenheit.
","def show_temperature(temp): 
    fahrenheit = (temp * 9/5) + 32
    return '{} degrees Celsius corresponds to {} degrees Fahrenheit'.format(temp, round(fahrenheit, 1))"
"Create a function in Python that takes a string and prints the frequency table of all its characters.
string = “Hello world""","def get_freq_table(string): 
    char_freq_dict = dict() 
    for char in string: 
        if char in char_freq_dict.keys(): 
            char_freq_dict[char] += 1
        else: 
            char_freq_dict[char] = 1
    print (""Frequency table of given string is : \n"",char_freq_dict) 

get_freq_table(string)"
"Write a function to calculate the power of two number (base^exp).
","function power(base, exp) {
  if (exp == 0) return 1; 
  return base * power(base, exp-1)
}

power(5, 3);"
"Create an HTML form that, when submitted, displays all the user input on the same page.
","<!DOCTYPE html>
<html>
<head>
    <title>User Input</title>
</head>
<body>
    <h1>User Input</h1>
    <form action=""#"" method=""post"">
        <label>Name: </label>
        <input type=""text"" name=""name"" /><br>
        <label>Email: </label>
        <input type=""email"" name=""email"" /><br>
        <label>Country: </label>
        <input type=""text"" name=""country"" /><br><br>
        <input type=""submit"" value=""Submit"" name=""submit"" />
    </form>
<?php
if(isset($_POST['submit'])){
    $name = $_POST['name'];
    $email = $_POST['email'];
    $country = $_POST['country'];
    echo ""<p>Your name is: $name <br>"";
    echo ""Your email is: $email <br>"";
    echo ""Your country is: $country <br></p>"";
}
?>
</body>
</html>"
"How do you set a variable to a constant in C#?
","In C#, variables can be set to a constant by using the keyword 'const' before the variable declaration. The constant cannot be changed or reassigned once it is declared. Example: const int a = 5;"
"Write a Python code to calculate the number of unique combinations of three digits from 0 to 9.
","def combinations(n, k):
    from itertools import combinations
    return len(list(combinations(range(n), k)))
 
comb = combinations(10, 3)
print(comb)"
"Compile the given piece of code and identify any errors.
int main() 
{
 cout << ""Hello World!"";
  return 0;
 }",No errors present.
"Create an algorithm that takes in an array of strings and returns a new array containing only the strings that start with the letter ""a"".
[apple, banana, alabama, arkansas]","def start_with_a(arr):
    new_arr = []
    for s in arr:
        if s[0] == 'a':
            new_arr.append(s)
    return new_arr"
"Use the Python built-in function filter() to find all numbers divisible by 5.
mylist = [10, 21, 32, 45, 56, 77]","list(filter(lambda x: (x % 5 == 0), mylist))"
"Explain in plain English the difference between the set() and list() methods in Python.
","The main difference between sets and lists in Python is the way the elements are stored. Lists store the elements in an ordered sequence, whereas sets store the elements in an unordered set. Sets are faster in terms of performance because they do not have duplicate elements. This means that when checking if an element exists in a set, the process is faster than checking for elements in a list. Furthermore, sets also do not allow for indexing, as the elements are unordered."
"Create a function in Java that changes a given string to uppercase.
This is a sample string.","String input = ""This is a sample string"";

String upper = input.toUpperCase();

System.out.println(upper);"
"Write a function that takes a string of numbers separated by commas and returns the sum of all the numbers.
""1,2,3,4""","def sum_numbers(nums): 
    nums = nums.split(',')
    total = 0
  
    # Traverse the string and add all elements 
    # of it to the total. 
    for i in range(len(nums)): 
        total += int(nums[i]) 
  
    # return total 
    return total 

print(sum_numbers(""1,2,3,4"")) # 10"
"Edit the following code to ensure that the conditions in the if-else statement are met.
if (x == 2 && y == 2) {
   console.log(""x equals y"");
}","if (x == 2 && y == 2) {
   console.log(""x equals y"");
} else if (x != 2 && y != 2) {
   console.log(""x does not equal y"");
}"
"What is the name of the machine learning algorithm used to find patterns in data?
",The machine learning algorithm used to find patterns in data is called clustering.
"Create a function to check if an item is in a list
","def check_list_contains(item_list, item):
    """"""This function checks if an item is in a list""""""
    return item in item_list"
"Write a class to define a car object with the attribute of brand, model and year.
","class Car:
    def __init__(self, brand, model, year):
        self.brand = brand
        self.model = model
        self.year = year"
"Compile a Java class named ""Example"".
",javac Example.java
"Create a JavaScript function to calculate the circle area given the radius.
","function circleArea(radius) {
    return Math.PI * radius * radius;
}"
"Explain how Python List Comprehensions work?
","Python List Comprehensions allow users to quickly build a list from another list or an iterable. List Comprehensions use a syntax that consists of an expression followed by a ‘for’ statement and then zero or more ‘for’ or ‘if’ clauses. The expression is evaluated once for each item in the list. List Comprehensions can be used to perform filtering and mapping operations over the lists, or any other iterable. The output is a new list that can be formed from items in the original list, or any of its combinations."
"Write a query in MySQL which will get all the records from a table.
",SELECT * FROM table_name;
"Create a function in Python that will take two parameters: a string and an integer, and return the string repeated the amount of times specified by the integer.
","def repeat(string, num_repetitions):
    return string * num_repetitions"
"Suggest a method in Java to compare two strings.
","The easiest way to compare two strings in Java is to use the built-in String class's equals() method. This method compares all characters in the strings, and returns true if the strings are equal or false otherwise. For example, given the strings ""Hello"" and ""Goodbye"", the following code would evaluate to false:

String s1 = ""Hello"";
String s2 = ""Goodbye"";
boolean equal = s1.equals(s2); // false"
"Create a function to create a multiplication table for a given number.
Number: 5","def multiplication_table(num): 
      
    for i in range(1, 11): 
        print(num, '*', i, '=', num*i) 
          
# Driver code  
multiplication_table(5)"
"Find the sum of the sequence of numbers from 1 to 10.
",55
"Create a database schema for managing authentication users.
","CREATE TABLE users (
	id SERIAL PRIMARY KEY,
	username VARCHAR NOT NULL UNIQUE,
	password VARCHAR NOT NULL,
	created_at TIMESTAMP NOT NULL DEFAULT NOW()
);"
"Format a string for a discounted price.
price = 5.99
discount = 0.20",discounted_price = '${:.2f}'.format(price * (1 - discount))
"Create a class which will take 3 parameters, name, size, and price.
","class Item:
    """"""Class which will take three parameters, name, size and price""""""
    def __init__(self, name, size, price):
        self.name = name
        self.size = size
        self.price = price"
"Compose a for loop in Java to print the numbers from 4 to 1 one line.
","for (int i = 4; i > 0; i--) {
    System.out.print(i + "" "");
}"
"Calculate the result of XORing two binary numbers.
1010, 0101",The result of XORing 1010 and 0101 is 1111.
"Create a function that takes an array and elements to append at the end.
list = [1,2]
element = 3","def appendList(list, element): 
  list.append(element) 
  return list 

result = appendList(list, element) 
print(result)"
"Syntax to declare an array in JavaScript.
",const arrayName = [];
"Create a Chrome extension that highlights hyperlinks in green.
","// Create a new class to extend Google's Chrome Extension
class LinkHighlighter extends Chrome Extension {

// Initialize Manifest.json
	manifest: {
	""name"": ""Link Highlighter"",
	""author"": ""Your Name Here"",
	""version"" : ""1.0"",
    ""description"" : ""Highlights all hyperlinks in green."",
	""browser_action"": {
		""default_title"": ""Link Highlighter""
	}
}

// Use 'onStartup()' to set rules for all hyperlinks
onStartup() {
	browser.webNavigation.onCommitted.addRules([
	  {
		conditions: [
		  new browser.webNavigation.PageStateMatcher({
			pageUrl: {urlContains: 'http://'},
		  })
		],
		actions: [ new browser.declarativeContent.ShowPageAction() ]
	  }
	]);
}

// Create the engine to inject a CSS into the page
  injectCSS() {
	var headElmts = document.getElementsByTagName(""head"");
	var styleElmt;
	if (headElmts.length) {
	  styleElmt = document.createElement(""style"");
	  headElmts[0].appendChild(styleElmt);
	}
	
	// Include the CSS to style the link.
	styleElmt.innerHTML  = 'a { color : green !important; }';
  }
  
  // Execute the engine to inject the CSS
  injectCSS();

}"
"Determine the data type of the following string.
a = ""#@$ What's up? %^&$$*&""",string
"Using an object-oriented programming language, create a class that has two methods - one to calculate the area of a circle and another to calculate the circumference.
","class Circle():
    def __init__(self, radius):
        self.radius = radius
    def area(self): 
        return self.radius ** 2 * 3.14 
    def circumference(self): 
        return 2 * self.radius * 3.14"
"Write a code snippet to add two numbers provided in two lists.
list1 = [2, 4, 3]
list2 = [5, 6, 4]","new_list = []
 
for i in range(len(list1)):
    new_list.append(list1[i] + list2[i])
 
print(new_list) # Output: [7, 10, 7]"
"Construct a class in Java that creates methods for finding the area and circumference of a circle.
","public class Circle {
  double radius;
 
  public Circle(double radius) {
    this.radius = radius;  
  }
 
  public double getArea(){
    return Math.PI * Math.pow(radius, 2);
  }
 
  public double getCircumference(){
    return 2 * Math.PI * radius;
  }
}"
"Create an HTML element which displays a button with the text ""Submit""
",<button>Submit</button>
"Implement a recursive solution to calculate the nth Fibonacci number.
","def fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return fibonacci(n-1)+fibonacci(n-2)"
"Convert a string to lowercase, using Python.
my_string = ""Hello World""","my_string.lower() # Output: ""hello world"""
"We need to find all unique combinations of elements from a given list of items.
[1, 2, 3, 4]","def find_unique_combinations(items):
 result = []
 for i in range(1, len(items) + 1):
 for combination in itertools.combinations(items, i):
 result.append(list(combination))
 return result"
"Create a Java program to output the Fibonacci series upto the given number.
Number: 10","public class Fibonacci {
    public static void main(String[] args) {
        int num = 10;
        int first = 0; 
        int second = 1;
        
        System.out.println(""Fibonacci Series of "" + num + "" numbers:"");
        for (int i = 0; i < num; i++) {
            System.out.print(first + "" "");
            int sum = first + second;
            first = second;
            second = sum;
        }
    }
}"
"What is the difference between div and span tags in HTML?
","The main difference between div and span tags is that the div tag is used to group and structure content, while the span tag is used to group inline content. The div tag is a block-level element, while the span tag is an inline element. Therefore, div tags can be used to create larger sections of content, while span tags can be used to style individual words or sentences."
"Write a Bash script that finds the factorial of a given number.
","#!/bin/bash

num=${1}
factorial=1

if [ $num -lt 0 ]
then
 echo ""Please enter a positive number.""
 exit 1
fi

if [ $num -gt 0 ]
then
 for (( i=1; i<=$num; i++ ))
 do
  factorial=$[ $factorial * $i ]
 done
fi
echo ""The factorial of $num is $factorial"""
"Create a variable called ``new_list`` that contains all elements from the list ``old_list`` which are greater than 5.
old_list = [2, 3, 5, 7, 9]","old_list = [2, 3, 5, 7, 9]
new_list = []
for i in old_list: 
    if i > 5:
        new_list.append(i)"
"Convert the given string to uppercase.
Hello World",HELLO WORLD
"Create a C# class named ""Car"" that models a car.
","class Car {
    private string make;
    private string model;
    private int year;

    public Car(string make, string model, int year) {
        this.make = make;
        this.model = model;
        this.year = year;
    }

    public string getMake() {
        return this.make;
    }

    public string getModel() {
        return this.model;
    }

    public int getYear() {
        return this.year;
    }

    public void setMake(string make) {
        this.make = make;
    }

    public void setModel(string model) {
        this.model = model;
    }

    public void setYear(int year) {
        this.year = year;
    }

}"
"Measure the execution time of a given python script.
","import time
 
def measure_time():
  # Start the timer
  start = time.time()
 
  # Execute the code
  # ----- Code to be measured ------
  # -------------------------------
 
  # Stop the timer
  end = time.time()
  
  # Return the difference
  return end - start

execution_time = measure_time()
print(execution_time)"
"Use SQL to extract the customer name, order date, and price from the following table.
Table: orders 

| order_id | customer_id | product_name | price | order_date | 
| -------- | ----------- | ------------ | ----- | ---------- | 
| 1        | 123         | TV           | 500   | 2019-01-01 | 
| 2        | 123         | Keyboard     | 80    | 2019-01-05 | 
| 3        | 124         | Mouse        | 50    | 2019-02-01 |","SELECT 
    c.name as customer_name, 
    o.price, 
    o.order_date 
FROM orders o 
INNER JOIN customers c 
    on o.customer_id = c.customer_id;"
"Use regex to extract specific words between two delimiters in a sentence.
string = ""This is a string with multiple words and special characters !@#""","import re

string = ""This is a string with multiple words and special characters !@#""
matches = re.findall(r'(?<= ).*?(?= )', string)
print(matches)

# Output: ['is', 'a', 'string', 'with', 'multiple', 'words', 'and', 'special']"
"Check if the following word is a palindrome
word = ""level""","word = ""level""

# Program to check if a word is a palindrome

is_palindrome = True
for i in range(len(word)//2):
    if word[i] != word[len(word)-1-i]:
        is_palindrome = False
        break

if is_palindrome:
    print(f""{word} is a palindrome."")
else:
    print(f""{word} is not a palindrome."")"
"Generate a Delete API endpoint in Python Flask for a user to delete their data from a database.
","@app.route('/delete/<int:user_id>', methods=['DELETE'])
def delete(user_id):
   user = db.query.get(user_id)
   db.session.delete(user)
   db.session.commit()
   return jsonify({'message':'User deleted successfully'})"
"Update a MongoDB document such that it replace a specific field with a new value.
db_name: ""users""
collection_name: ""customers""
field_name: ""name""
new_value: ""John Doe""","db.customers.update(
    { name: ""John Doe"" },
    {
        $set: {
            name: ""John Doe""
        }
    }
)"
"Build an algorithm to compare two strings and report whether they are identical or not.
string1 = ""hello"";
string2 = ""world"";","function compareStrings(string1, string2) {
    if (string1 === string2) {
        return ""the strings are identical""
    } else {
        return ""the strings are not identical""
    }
}"
"Generate a HTML layout to make a basic website page.
","<!Doctype html>
<html>
    <head>
        <title>My Website</title>
    </head>
    <body>
        <h1>Welcome to My Website!</h1>
        <p>Content goes here.</p>
    </body>
</html>"
"Create an HTML page with an <h1> heading ""Welcome!"" and a <p> paragraph with the text ""I am happy to be here.""
","<!DOCTYPE html>
<html>
<head>
   <title>Welcome!</title>
</head>
<body>
   <h1>Welcome!</h1>
   <p>I am happy to be here.</p>
</body>
</html>"
"Create an HTML form with two inputs, one to enter a first name and another to enter a last name.
","<form>
  <label>First name:</label>
  <input type=""text"" name=""firstname"" />
  <br><br>
  <label>Last name:</label>
  <input type=""text"" name=""lastname"" />
  <br><br>
  <input type=""submit"" value=""Submit"" />
</form>"
"Find a way to insert the given data into a MongoDB database using Mongoose.
data = [
    {name: ""John Doe"", age: 34}, 
    {name: ""Jane Smith"", age: 25}
]","const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const userSchema = new Schema({
  name: {
    type: String
  },
  age: {
    type: Number
  }
});

const User = mongoose.model('User', userSchema);

data.forEach( (user) => {
  const newUser = new User(user);
  newUser.save()
    .then( () => console.log('User saved') )
    .catch( err => console.log(err))
});"
"Change all the characters in a given string to uppercase.
str = 'Hello World!'",'HELLO WORLD!'
"Create a function that prints all the prime numbers between 1 and a given number.
","def print_prime_numbers(upper_limit):
  prime_numbers_list = []
  for num in range(2, upper_limit+1):
   if all(num % i != 0 for i in range(2, num)): 
    prime_numbers_list.append(num)
  print(""The prime numbers between 1 and"",upper_limit,""are:"",prime_numbers_list)"
"Sort a given dictionary of strings alphabetically.
my_dict = {'a':""apple"", 'c':""cat"", 'b':""banana""}","my_dict = {'a':""apple"", 'c':""cat"", 'b':""banana""}

# sort the dictionary
sorted_dict = {key: my_dict[key] for key in sorted(my_dict.keys())}

print(sorted_dict)"
"Rearrange the elements of the array [3, 1, 2, 5, 4] in ascending order.
[3, 1, 2, 5, 4]","[1, 2, 3, 4, 5]"
"Calculate the sum of all the integers in the range of m to n (inclusive).
m = 10, n = 20",sum = 165  # 10 + 11 + 12 + ... + 20 = 165
"Implement a function in C# to generate Fibonacci numbers.
","public static IEnumerable<int> GenerateFibonacciSequence() {
    int prev = 0;
    int current = 1;
    yield return prev;
    yield return current;
    while (true) {
        int temp = prev + current;
        prev = current;
        current = temp;
        yield return current;
    }
}"
"Write a CSS code snippet to style all buttons in red.
","button {
    background-color: red; 
}"
"Create an SQL query that returns all customers in New York state who have purchased a product in the last 6 months.
","SELECT *
FROM customers
WHERE state = 'New York'
AND purchase_date >= DATE_SUB(NOW(), INTERVAL 6 MONTH)"
"Write a python program that takes a string as a parameter and prints the character at index 4 if the length of the string is greater than 4.
astring = ""Python""","def character_at_index(astring):
    if len(astring) > 4:
        print(astring[4])"
"Write a query in SQL to select the first 3 characters of each employee name.
","SELECT SUBSTRING(name, 1, 3) FROM Employees;"
"Generate a sorted list of numbers in an array using insertion sort?
arr = [5, 8, 1, 7, 2, 10, 3]","def insertion_sort(arr):
    for i in range(len(arr)):
        key = arr[i]
        j = i-1
        while j >= 0 and arr[j] > key:
            arr[j+1] = arr[j]
            j -= 1
        arr[j+1] = key
    return arr"
"Enter the variables from the equation below into Python code.
2x + 5y - 7z = 9","x = 2
y = 5
z = -7"
"Create a variable in Python to store 10 multidimensional arrays.
","arrays = [[[1,2], [3,4]],
          [[5,6], [7,8]],
          [[9,10], [11,12]],
          [[13,14], [15,16]],
          [[17,18], [19,20]],
          [[21,22], [23,24]],
          [[25,26], [27,28]],
          [[29,30], [31,32]],
          [[33,34], [35,36]],
          [[37,38], [39,40]]]"
"Explain how to convert an expression from postfix notation to infix notation
","Infix notation is a way of writing an expression in which the operators are placed between the operands, such as 2 + 5, whereas postfix notation is a way of writing an expression in which the operators are placed after the operands, such as 2 5 +. To convert an expression from postfix notation to infix notation, scan the expression from left to right. If an operand is encountered, simply push it onto a stack. If an operator is encountered, pop two operands from the stack and place the operator in between them. Finally, push the resulting expression back onto the stack and repeat this until the end of the expression is reached."
"Fix the following Java code by adding a missing semicolon.
public static void main(String[] args) {
System.out.println(""Hello World"")
","public static void main(String[] args) {
System.out.println(""Hello World"");
}"
"Use a switch statement to check if a number is between 1 and 10.
7","switch(number){
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
        //number is between 1 and 10
        break;
    default:
        //number is not between 1 and 10
        break;
 }"
"Generate a random phone number using random numbers in Python.
","import random

def generatePhoneNumber():
  nums = [str(random.randint(0, 9) for _ in range(10))]
  return '-'.join([''.join(nums[:3]), ''.join(nums[3:6]), ''.join(nums[6:])])

print(generatePhoneNumber() // ""567-444-0116"""
"Rewrite the following in Swift language.
let names = [""Bobby"", ""Justin"", ""Tyler""]","let names = [""Bobby"", ""Justin"", ""Tyler""]"
"Using JavaScript, suggest a program to update a key in a given object.
object = {""name"":""john""};","object[""name""] = ""JAMES"";"
"Introduce a vector of size 10 with all elements initialized to 0.
","vector<int> v(10, 0);"
"Write an SQL query that selects the maximum price from all products.
Table Name: Products
Columns: Name (varchar), Price (decimal)",SELECT MAX(Price) FROM Products;
"Modify the given HTML code to make the text bold.
<p>This is some sample text.</p>",<p><strong>This is some sample text.</strong></p>
"Design an algorithm to generate N random numbers from 1 to 1000.
N=5","Let N be the number of random numbers to create.

Initialize an array randomNumbers to empty

For i from 1 to N:
  Generate a random number from 1 to 1000
  Add this random number to randomNumbers
  
Print randomNumbers"
"Provide a list of all the functionality available to a React Native application.
","React Native applications will have access to a range of features, such as:

- Navigation
- Data store
- Image and video manipulation
- Network and internet data access
- Geolocation
- Offline storage 
- Push notifications
- Animations
- Accessibility 
- Internationalization
- Integration with third-party platforms/APIs"
"How to reverse a list in C++?
","You can reverse a list in C++ using the std::reverse algorithm. To reverse the list, pass the list as the first parameter and the beginning and end of the list as the second and third parameter, respectively. Alternatively, you can also reverse the list using a for loop and the operator [] to access each element of the list."
"Create a function which detects overlapping dates from a given list.
dates_list = [
  (2018,1,1,2018,3,1),
  (2018,12,1,2018,9,30),
  (2018,2,15,2018,5,10)
]","def detect_overlapping_dates(dates_list): 
  overlaps = set()

  for i in range(len(dates_list)-1):
    for j in range(i+1, len(dates_list)):
      date1_start_year, date1_start_month, date1_start_day, date1_end_year, date1_end_month, date1_end_day = dates_list[i]
      date2_start_year, date2_start_month, date2_start_day, date2_end_year, date2_end_month, date2_end_day = dates_list[j]
      # check if the two dates overlap
      if (date1_start_year <= date2_end_year and date2_start_year <= date1_end_year) and (date1_start_month <= date2_end_month and date2_start_month <= date1_end_month) and (date1_start_day <= date2_end_day and date2_start_day <= date1_end_day):
        # if the two dates overlap, add to the overlapping set
        overlaps.add(dates_list[i])
        overlaps.add(dates_list[j])
  
  return list(overlaps)
 
dates_list = [
  (2018,1,1,2018,3,1),
  (2018,12,1,2018,9,30),
  (2018,2,15,2018,5,10)
]

print(detect_overlapping_dates(dates_list))"
"Define a custom Exception for an invalid data type.
","class InvalidDataTypeError(Exception):
    """"""Exception raised when an invalid data type is encountered""""""

    def __init__(self, message):
        self.message = message"
"Given an array of integers, remove any duplicate numbers and sort the remaining elements in ascending order.
arr = [3, 9, 8, 4, 6, 7, 5, 4]","arr = [3, 4, 5, 6, 7, 8, 9]"
"Create a function to perform recursive binary search in a sorted array
","#returns the index of the target, if it is found
def binary_search(arr,left,right,target):
    # Check base case 
    if right >= left:
        mid = left + (right - left) // 2 
  
        # If element is present at the middle itself 
        if arr[mid] == target:
            return mid 
          
        # If element is smaller than mid, then it  
        # can only be present in left subarray
        elif arr[mid] > target:
            return binary_search(arr, left, mid-1,target)
       
        # Else the element can only be present  
        # in right subarray
        else:
            return binary_search(arr, mid + 1, right,target) 

    else: 
        # Element is not present in the array 
        return -1"
"Create a matrix of size 3 x 3 in Python.
","# 3x3 matrix 
matrix3x3 = [[10, 20, 30],  
             [15, 25, 35],  
             [27, 29, 37]]"
"Create a for loop in JavaScript that iterates through a given array and prints each element.
arr = [""a"",""b"",""c"",""d""]","arr = [""a"",""b"",""c"",""d""];
for (let i = 0; i < arr.length; i++){
    console.log(arr[i]); 
}"
"Write a query to find the number of students enrolled in each class each semester.
Table Name: enroll
Fields: enroll_id, student_id, class_id, semester","SELECT class_id, semester, COUNT(student_id)
FROM enroll
GROUP BY class_id, semester;"
"Create a program in JavaScript that will take a list of numbers and return the first index of the highest value.
list = [1, 2, 5, 4, 4]","function findIndexOfHighestValue(list){
	let highest = list[0];
	let highestIndex = 0;
    for (let i=0; i<list.length; i++){
        if (list[i] > highest){
            highest = list[i];
            highestIndex = i;
        }
    }
    return highestIndex;
}"
"Create a GCP Cloud Function that sends an email with input ""name"" and ""message"".
","import os
import smtplib
from email.message import EmailMessage

def sendEmail(request):
    request_json = request.get_json()
    name = request_json.get('name')
    message = request_json.get('message')
  
    SENDER = os.environ.get('SENDER')
    RECEIVER = os.environ.get('RECEIVER')
    PASSWORD = os.environ.get('PASSWORD')
  
    msg = EmailMessage()
    msg.set_content(f'Hello,""\n\n{message}""\n\nRegards,\n{name}')

    msg['Subject'] = 'Message Sent Via Cloud Function'
    msg['From'] = SENDER
    msg['To'] = RECEIVER
  
    s = smtplib.SMTP('smtp.gmail.com', 587)
    s.starttls()
    s.login(SENDER, PASSWORD)
    s.send_message(msg)
    s.quit()"
"Find the mean of the elements in this array.
Array: [2, 3, 5, 4, 9]",The mean of the elements in this array is 4.8.
"Create a program that logs the time a user entered a program.
","import time

def log_time():
    current_time = time.time()
    print(""You entered the program at"", current_time)"
"Construct an artificial neural network of 3-layers to classify handwritten digits.
","import numpy as np
from tensorflow.keras.utils import to_categorical

# Create a 3-layer neural network
model = tf.keras.Sequential()
model.add(tf.keras.layers.Dense(10, input_dim=784, activation='relu'))
model.add(tf.keras.layers.Dense(50, activation='relu'))
model.add(tf.keras.layers.Dense(10, activation='softmax'))

# Compile the model
model.compile(
	optimizer='adam',
	loss='categorical_crossentropy',
	metrics=['accuracy']
)

# Train the model
model.fit(x_train, y_train, epochs=30, batch_size=128)"
"Write a PowerShell script to print out the current date.
",Get-Date | Format-List
"Implement a random number generator in Python that returns a random number in the range of 1-100.
","import random

def rand_num():
    return random.randint(1, 100)"
"Construct an algorithm to find the longest common prefix string amongst an array of strings.
`<code>['leet', 'leets', 'lee', 'leeston', 'leeve']</code>`","""""""
Construct an algorithm to find the longest common prefix string amongst an array of strings
""""""
def longest_common_prefix(strs):
    prefix = strs[0]
    i = 0
    while i < len(prefix):
        for string in strs:
            if i >= len(string) or string[i] != prefix[i]:
                return prefix[0:i]
        i += 1
    return prefix

if __name__ == '__main__':
    print(longest_common_prefix(['leet', 'leets', 'lee', 'leeston', 'leeve']))"
"Construct a JavaScript program to find all the prime numbers within a range of numbers
range = [2,10]","function findPrimes(range) {
  let primes = [];
  for (let i=range[0]; i< range[1]; i++) {
    if (checkPrime(i)) {
      primes.push(i);
    }
  }
  return primes;
}

function checkPrime(num) {
  for (let i=2; i<=Math.sqrt(num); i++) {
    if (num % i == 0) {
      return false;
    }
  }
  return true;
}"
"Compile a C program that calculates the area of a rectangle from the given values of length and width.
Length = 10
Width = 15","#include <stdio.h>
 
int main()
{
    int length = 10;
    int width = 15;
    int area;
    area = length * width;
 
    printf(""The area is %d."", area);
 
    return 0;
}"
"Create an HTML form with two input boxes and a submit button.
","<form>
   <label>Name: </label>
   <input type=""text"" name=""name""><br>
   <label>Age: </label>
   <input type=""number"" name=""age""><br>
   <input type=""submit"" value=""Submit"">
 </form>"
"Generate an array of length n with random numbers in the range 0 - 100
","import random
def gen_num_arr(n):
    output = []
    for i in range(n):
        output.append(random.randint(0, 101))
    return output"
"Describe the purpose of Asynchronous programming.
","Asynchronous programming is a method of concurrent programming in which a unit of work runs separately from the main application thread and notifies the calling thread of its completion, failure or progress. It enables programs to run multiple operations at the same time without blocking other operations. This helps improve the performance of applications by allowing them to do work in parallel."
"Convert the following SQL query to MongoDB.
SELECT * FROM Customers WHERE age > 30","db.customers.find({""age"" : {""$gt"": 30}})"
"Develop a Java program to input a string and reverse the order of words.
I love to code in Java","Java in code to love I 

public class Reverse { 
    
    static void reverseWords(String str)  
    {  
          
        // Specific marker to identify the strings 
        String[] words = str.split(""\\s""); 
          
        String reversedString = """"; 
          
        for (int i = 0; i < words.length; i++)  
        { 
            String word = words[i]; 
            String reverseWord = """"; 
              
            for (int j = word.length()-1; j >= 0; j--) 
            { 
                reverseWord = reverseWord + word.charAt(j); 
            } 
              
            reversedString = reversedString + reverseWord + "" ""; 
        } 
          
        System.out.println(str); 
          
        System.out.println(reversedString); 
    } 
      
    public static void main(String[] args)  
    { 
        reverseWords(""I love to code in Java""); 
    } 
}"
"Create a type alias for a function pointer in C.
","typedef int (*func_ptr)(int, int);"
"Create a Java program to count and print the distinct elements in an array.
int[] arr = {1, 2, 3, 2, 1, 4, 3, 2}","public class DistinctElements { 
    public static void main(String[] args) { 
        int[] arr = {1, 2, 3, 2, 1, 4, 3, 2}; 
  
        // Initialize all element with the value 0. 
        int[] temp = new int[arr.length]; 
        int visited = -1; 
  
        for (int i = 0; i < arr.length; i++) { 
            int count = 1; 
            for (int j = i + 1; j < arr.length; j++) { 
                if (arr[i] == arr[j]) { 
                    count++; 
                    temp[j] = visited; 
                } 
            } 
            if (temp[i] != visited) { 
                temp[i] = count; 
            } 
        } 
        for (int i = 0; i < temp.length; i++) { 
            if (temp[i] != visited) { 
                System.out.println(arr[i] + ""->"" + temp[i]); 
            } 
        } 
    } 
}"
"Create a loop in Python with the given requirements.
Print out the numbers from 1 to 10, inclusive","for x in range(1, 11):
  print(x)"
"Describe what a quicksort algorithm does?
","Quicksort is a widely used sorting algorithm that employs the divide-and-conquer approach. It works by partitioning a given array into two subarrays, the left consisting of smaller elements and the right consisting of larger elements. The sorting algorithm then recursively sorts each subarray until the array is completely sorted. Quicksort has a time complexity of O(n log n) in the best case, making it one of the most efficient sorting algorithms."
"Using the provided input, calculate the SHA256 checksum in Python.
string = ""Hello World!""","import hashlib
 
def sha256_calc(string):
    """"""
    Calculate SHA256 checksum in Python.
    """"""
    sha_signature = hashlib.sha256(string.encode()).hexdigest()
    return sha_signature"
"Explain the concept of lazy loading
","Lazy loading is a design pattern which delays the loading of an object until it is needed. This optimization can improve the performance of web applications by decreasing the amount of data and code that needs to be loaded initially, and thereby reducing the application's memory footprint and startup time."
"Convert the given string to a number in JavaScript.
String: ""42""","Using the parseInt() built-in method, the given string can be converted to a number in JavaScript.

Example:

let str = ""42""; 
let num = parseInt(str); 
console.log(""Number:"", num);

// Output: Number: 42"
"Write a C++ code to implement quick sort algorithm.
","void quickSort(int arr[], int left, int right) 
{ 
    int i = left, j = right; 
    int tmp; 
    int pivot = arr[(left + right) / 2]; 
  
    /* partition */
    while (i <= j) { 
        while (arr[i] < pivot) 
            i++; 
        while (arr[j] > pivot) 
            j--; 
        if (i <= j) { 
            tmp = arr[i]; 
            arr[i] = arr[j]; 
            arr[j] = tmp; 
            i++; 
            j--; 
        } 
    }; 
  
    /* recursion */
    if (left < j) 
        quickSort(arr, left, j); 
    if (i < right) 
        quickSort(arr, i, right); 
}"
"Find all the factors of N (greater than 0), add them together and return the result.
N = 30","def sum_factors_of_N(N):
    sum = 0
    for i in range(1, N+1):
        if N % i == 0:
            sum += i
    return sum"
"What is the output of this C++ code for n = 3?
int f(int n) {
    if (n == 0 || n == 1)
        return 1;
    else
        return f(n-1) + f(n-2);
}",3
"Create a class in Python that contains the following methods:
","class Student:
    def __init__(self, name, grade):
        self.name = name
        self.grade = grade

    def getName(self):
        return self.name

    def getGrade(self):
        return self.grade"
"Convert the following enum type expression in Java for days of the week to equivalent C# syntax.
enum Weekday {SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY};","enum Weekday 
{
    Sunday, 
    Monday, 
    Tuesday, 
    Wednesday, 
    Thursday, 
    Friday, 
    Saturday
};"
"Describe the general syntax of an if statement in Java.
","In Java, the syntax of an if statement is as follows:

if (condition) {
    // Code to execute if condition is true
}"
"What is Naive Bayes classification?
","Naive Bayes classification is a supervised machine learning technique used for classification tasks which is based on the Bayes Theorem. It assumes that each input feature is independent of each other, which is called the assumption of ""naive"" Bayes. The algorithm uses prior knowledge of the data set and determines the probability of each class, given the data. Based on these probabilities it then assigns a class to the input, using a decision rule (usually the maximum a posteriori likelihood), to maximize the overall accuracy of the model."
"Write a Java program to generate a random number between 25 and 75.
","public class RandomNumber {
    public static void main(String[] args) {
        // Generate a random number between 25 and 75
        int max = 75;
        int min = 25;
        int range = max - min + 1;

        int randomNumber = (int) (Math.random() * range) + min;

        System.out.println(randomNumber);
     }
 }"
"Create a python function which finds the intersection of two lists
list1=[2, 5, 8, 10]
list2=[3, 5, 8, 10]","def intersect(list1,list2):
    return [i for i in list1 if i in list2]"
"Convert the following time from Central Daylight time to Eastern Standard time: 15:00.
",15:00 Central Daylight Time is equivalent to 16:00 Eastern Standard Time.
"Develop JavaScript code to find the nth Fibonacci number.
","function fibonacci(n) {
  if (n <= 1) return n;

  return fibonacci(n - 1) + fibonacci(n - 2);
}

let result = fibonacci(10);
console.log(result);"
"Create a function which returns the factorial of a given number.
","""""""
Function which returns factorial of a given number
""""""

def factorial(num):
    if (num == 0):
        return 1
    else:
        return num * factorial(num-1)
    
if __name__ == '__main__':
    print(factorial(5))"
"Explain the importance and use of an algorithm in computing.
","An algorithm is a step-by-step process that a computer can use to solve a problem or achieve a goal. Algorithms are essential to computing systems, as they provide methods for inputting, storing, interpreting, manipulating, and outputting data. Algorithms can process data with speed, accuracy, and reliability, and can be used for a variety of tasks including calculations, simulations, database manipulation, decision making, and artificial intelligence."
"Write a code to construct the following rectangle pattern
6","def drawRectangle(size):
    for i in range(size):
        print(""* "" * size) 
drawRectangle(6)"
"Create an HTML page that contains two textboxes. The first textbox is for the user to type in their name and the second textbox is for the user to type in their age.
","<html>
    <head>
        <title>Text Boxes</title>
    </head>
    <body>
        <form>
            Name: <input type=""text"" name=""name"" />
            <br><br>
            Age: <input type=""text"" name=""age"" />
            <br><br>
            <input type=""submit"" value=""Submit"">
        </form>
    </body>
</html>"
"Edit the following C code to remove any syntax errors.
int main()
{
  int a,b;
  printf(""Enter two numbers:"");
  scanf(""%d &d"", &a, &b)
  printf(""Product = %d"", a*b)
  return 0;
}","int main()
{
  int a,b;
  printf(""Enter two numbers:"");
  scanf(""%d %d"", &a, &b);
  printf(""Product = %d"", a*b);
  return 0;
}"
"Create a HTML page that displays the top 5 countries in the world by population.
Country    Population (Millions)
China      1400
India      1351
United     329
Indonesia  265
Brazil     212","<!DOCTYPE html>
<html>
<head>
 <title>World's Top 5 Countries By Population</title>
 <style>
  table {
   font-family: arial, sans-serif;
   border-collapse: collapse;
   width: 100%;
  }
  td, th {
   border: 1px solid #dddddd;
   text-align: left;
   padding: 8px;
  } 
 </style>
</head>
<body>
 <h1>World's Top 5 Countries By Population</h1>
 <table>
  <tr>
   <th>Country</th>
   <th>Population (Millions)</th>
  </tr>
  <tr>
   <td>China</td>
   <td>1400</td>
  </tr>
  <tr>
   <td>India</td>
   <td>1351</td>
  </tr>
  <tr>
   <td>United States</td>
   <td>329</td>
  </tr>
  <tr>
   <td>Indonesia</td>
   <td>265</td>
  </tr>
  <tr>
   <td>Brazil</td>
   <td>212</td>
  </tr>
 </table>
</body>
</html>"
"Create a HTML page with a form that takes user input and performs some action when the user clicks the submit button.
","<html>
 <head>
  <title>Form Demo</title>
 </head>
 <body>
  <form action=""form_action.php"" method=""post"">
   <label for=""username"">Username:</label>
   <input type=""text"" name=""username"">
   <input type=""submit"" name=""submit"" value=""Submit"">
  </form>
 </body>
</html>"
"Create an algorithm to merge two sorted linked lists.
Linked List 1: 1 - 4 - 7
Linked List 2: 2 - 5 - 8","def merge_sorted_lists(list1, list2):
    if not list1:
        return list2
    if not list2:
        return list1
        
    if list1.val < list2.val:
       head = list1
       list1 = list1.next
   else:
       head = list2
       list2 = list2.next
  
   cur = head
  
   while list1 and list2:
       if list1.val < list2.val:
           cur.next = list1
           list1 = list1.next
       else:
           cur.next = list2
           list2 = list2.next
          
       cur = cur.next
          
   cur.next = list1 if list1 else list2
  
   return head"
"Construct a syntax tree representing the following sentence.
Bob likes apples.","S
                      ┌───┴───┐
                      NP VP
                    ┌─┴─┐   │
                   Bob V  NP
                         │  │
                         V  N 
                         │ ┌─┴─┐ 
                         likes apples"
"Find a code that returns the union set of two given sets.
s1 = {1,2,3,4}
 s2 = {3,4,5,6}","def union_sets(s1, s2):
    return s1 | s2"
"Write an SQL query to select all rows from a table where a given column value is higher than 10.
Table: users","SELECT *
FROM users
WHERE column_name > 10;"
"You are given a 2D array and you need to rotate it 90 degrees clockwise.
array = [
    [1, 2, 3, 4],
    [5, 6, 7, 8],
    [9, 10, 11, 12],
    [13, 14, 15, 16],
  ]","def rotate90(arr):
    new_arr = [[row[i] for row in arr[::-1]] for i in range(len(arr[0]))]
    return new_arr"
"Write a JavaScript code snippet to update the style color attribute of a HTML element.
elementID = button1",document.getElementById('button1').style.color='blue';
"Create a Python function that takes in a list of integers and returns a list containing only the odd numbers from the original.
","def get_odd_elements(arr):
    return [num for num in arr if num % 2 != 0]"
"Write a C++ function to find the maximum element in an array.
","// C++ program to find maximum in arr[] of size n 

int arr[] = {10, 324, 45, 90, 9808}; 

int n = sizeof(arr)/sizeof(arr[0]); 

int max = arr[0];

// Traverse array elements from second and 
// compare every element with current max   
for (int i = 1; i < n; i++) 
    if (arr[i] > max) 
        max = arr[i]; 

printf(""Maximum element = %d"", max);"
"Write a code to generate n terms of the Fibonacci sequence.
","def get_fibonacci(n):
    """""" Generates n terms of the Fibonacci sequence
    
    Args:
        n (int): The number of Fibonacci terms to generate
        
    Returns:
        list: A list of the first n Fibonacci numbers
    """"""
    # Initialize first two Fibonacci numbers
    a = 0
    b = 1

    # Initialize the Fibonacci Sequence list
    fibonacci_sequence = []
    fibonacci_sequence.append(a)
    fibonacci_sequence.append(b)

    # Generate the Fibonacci Sequence
    while len(fibonacci_sequence) < n:
        c = a + b
        fibonacci_sequence.append(c)
        a = b
        b = c

    return fibonacci_sequence"
"resolve the following compile-time error in the program
#include <stdio.h>

int main()
{
    int a = 1, 3;
    printf(""%d"", a);
    return 0;
}","#include <stdio.h>

int main()
{
    int a = 1; // Removed `3` which caused a compile time error 
    printf(""%d"", a);
    return 0;
}"
"Create a MySQL query to select the top 5 customers with the highest total spending in the last 12 months.
","SELECT customer_id, SUM(cost) AS total_spending
FROM orders
WHERE order_date >= CURDATE() - INTERVAL 12 MONTH
GROUP BY customer_id
ORDER BY total_spending DESC
LIMIT 5"
"Assign 1 to all the elements of a 2D array that are divisible by 3.
arr = [[1,2,3],
       [10,15,20],
       [3, 8, 6]]","for row in range(len(arr)): 
    for col in range(len(arr[row])): 
        if arr[row][col] % 3 == 0: 
            arr[row][col] = 1
print(arr)"
"Given two arrays of integers, find the common elements.
arr1 = [1, 2, 3, 4, 5]; arr2 = [4, 5, 6, 7, 8]","def common_elements(arr1, arr2):
    common = []
    for item in arr1:
        if item in arr2:
            common.append(item)

    return common"
"Create a function that will find the maximum length of increasing subarray in a list
list = [2, 3, 3, 1, 4, 5, 8, 4]","def longest_increasing_subarray(arr):
    max_length = 1
    curr_length = 1

    for i in range(1, len(arr)):
        if arr[i] > arr[i - 1]:
            curr_length += 1
        else:
            if curr_length > max_length:
                max_length = curr_length
            curr_length = 1
    
    if curr_length > max_length:
        max_length = curr_length
    
    return max_length"
"Create an array with 5 elements in Python.
","arr = [1, 2, 3, 4, 5]"
"Modify the code in the following snippet to include a try/catch block.
function getStringLength() {
    let string = prompt(""Please enter a string"");
    let length = string.length;
    console.log(length);
}","function getStringLength() {
    try {
        let string = prompt(""Please enter a string"");
        let length = string.length;
        console.log(length);
    } catch (error) {
        console.log('ERROR: ', error);
    }
}"
"Create a C++ program that finds the most common element in the given input array.
Given array = [2, 4, 8, 3, 4, 4, 6, 2, 4, 9]","#include <bits/stdc++.h>
 
using namespace std;
 
int most_common(int arr[], int n) 
{ 
   unordered_map<int, int> hash; 
 
   // store the counts of all elements 
   for (int i = 0; i < n; i++) 
     hash[arr[i]]++; 
 
   // traverse through the map and 
   // find out the maximum frequency 
   int max = 0, res = -1; 
   for (auto i : hash) { 
     if (max < i.second) { 
       res = i.first; 
       max = i.second; 
     } 
   } 
 
   return res; 
}  
 
int main() 
{ 
   int arr[] = { 2, 4, 8, 3, 4, 4, 6, 2, 4, 9 }; 
   int n = sizeof(arr) / sizeof(arr[0]); 
   cout << most_common(arr, n) << endl; 
   return 0;   
}"
"Write a function in C++ that takes two integers as input, and outputs the greatest common divisor (GCD) of the two integers.
","int gcd(int a, int b) { 
    if (b == 0) 
        return a; 
    return gcd(b, a % b); 
}"
"Update a variable to be the negative of its value.
x = 5","# negative function
def negative(x):
    return -x

# main program
x = negative(x)
print(x)"
"Write a query to find out the maximum salary earned by an employee
","SELECT MAX(salary)
FROM Employees;"
"Explain the concept of the depth-first search algorithm and provide an example.
","Depth-first search (DFS) is an algorithm used to traverse a tree or graph data structure. It starts at the root of the tree, explores as far as possible down a given branch and then backtracks along the same path before exploring a new branch. For example, consider a BST (Binary Search Tree) where we want to traverse all the elements, the algorithm starts at the root node, then traverses all the elements in the left subtree before traversing all the elements in the right subtree."
"Combine two sorted Arrays into one sorted Array.
arr1 = [1, 5, 8, 9, 10];
arr2 = [2, 3, 4, 6, 7];","function combineArray(arr1, arr2) {
    let combined = [];
    
    let l = 0;
    let r = 0;

    while ((l < arr1.length) && (r < arr2.length)) {
        if (arr1[l] < arr2[r]) {
            combined.push(arr1[l]);
            l++;
        } else {
            combined.push(arr2[r]);
            r++;
        }
    }

    while (l < arr1.length) {
        combined.push(arr1[l]);
        l++;
    }

    while (r < arr2.length) {
        combined.push(arr2[r]);
        r++;
    }
    return combined;
}

const result = combineArray(arr1, arr2);
console.log(result);  // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
"Create a function in Java to convert a string of comma-separated values into an array.
data = ""Banana, Apple, Apricot""","public static String[] convertStringToArray(String data) {
 
    String[] elements = data.split("","");
 
    // Trim all the elements
    for (int i = 0; i < elements.length; i++) {
        elements[i] = elements[i].trim();
    }
 
    return elements;
}"
"Write an SQL query to retrieve names and email addresses from a table called ""user_info"".
","SELECT name, email FROM user_info;"
"Create a Swift program to print out the following: “Hello, World!”
","print(""Hello, World!"")"
"Create a function to calculate the exponent of a given number x raised to power y.
","def exponent(x,y): 
    if(y == 0): 
        return 1
    elif (int(y % 2) == 0): 
        y = int(y / 2) 
        return exponent(x, y) * exponent(x, y) 
    else: 
        return (x * exponent(x, int(y / 2)) * exponent(x, int(y / 2))) 

exponent(5,3) # Output: 125"
"Implement a Java program for finding the index of an element in a sorted array.
","public int binarySearch(int[] arr, int val){
    int left = 0;
    int right = arr.length - 1;
    while (left <= right) {
        int mid = left + (right - left) /2 ;
        if (arr[mid] == val) 
            return mid;
        else if (arr[mid] < val) 
            left = mid + 1;
        else 
            right = mid - 1;
    }  
    return -1;
}"
"Identify which elements in an array are even numbers.
nums = [1, 2, 3, 4, 5]","def is_even_num(nums):
    result = []
    for num in nums:
        if num % 2 == 0:
            result.append(num)
    
    return result"
"Help the user enter two numbers and print the sum of them.
","def print_sum_of_two_numbers():
    num1 = int(input(""Enter a number: ""))
    num2 = int(input(""Enter another number: ""))
    print(""The sum of the two numbers is: "" + str(num1 + num2))"
"Create a class named ‘Vehicles’ with attributes color and price.
","class Vehicles:
   def __init__(self, color, price):
        self.color = color
        self.price = price"
"Generate a random password with a combination of letters, numbers and special characters.
","import random

def generate_password():
    letters = 'abcdefghijklmnopqrstuvwxyz'
    numbers = '0123456789'
    special_characters = '@#$%^&*()'
    
    password = ''

    password += random.choice(letters)
    password += random.choice(numbers)
    password += random.choice(special_characters)

    for _ in range(6):
        source = random.choice([letters, numbers])
        password += random.choice(source)

    return password

print(generate_password())"
"Implement a neural network from scratch
","class NeuralNetwork:
  def __init__(self, num_inputs, num_hidden_layers, num_outputs):
    self.num_inputs = num_inputs
    self.num_hidden_layers = num_hidden_layers
    self.num_outputs = num_outputs

    self.weights_input_to_hidden = np.random.randn(num_inputs, num_hidden_layers) 
    self.bias_hidden = np.zeros(num_hidden_layers)
    self.weights_hidden_to_output = np.random.randn(num_hidden_layers, num_outputs)
    self.bias_output = np.zeros(num_outputs)
    
    self.activation_function = lambda x : 1/(1+np.exp(-x))

  def forward_propagation(self, inputs):
    # Compute the inputs to the hidden layer
    hidden_in = np.dot(inputs, self.weights_input_to_hidden) + self.bias_hidden
    # Compute the hidden layer output
    hidden_out = self.activation_function(hidden_in)
    # Compute the inputs to the output layer
    output_in = np.dot(hidden_out, self.weights_hidden_to_output) + self.bias_output
    # Return the output layer output
    return output_in"
"Generate a Java program to perform the following task.
Add two integers a and b and print the sum","public class Sum {
 
    public static void main(String[] args) {
        int a = 15;
        int b = 10;
        int sum = a + b;
        System.out.println(""Sum of a and b is "" + sum);
    }
}"
"Deploy a static website on AWS
","To deploy a static website on AWS, create an S3 bucket and configure the bucket for static website hosting. Upload the website content to the S3 bucket, then create a CloudFront distribution to redirect requests to the S3 bucket. Finally, configure a DNS record to point to the CloudFront distribution."
"Write a class to represent a point in a 2-D plane.
","class Point: 
    
    def __init__(self, x_coordinate, y_coordinate): 
        self.x = x_coordinate 
        self.y = y_coordinate 
  
    def get_x(self): 
        return self.x 
  
    def get_y(self): 
        return self.y 
  
    def set_x(self, x_coordinate): 
        self.x = x_coordinate 
  
    def set_y(self, y_coordinate): 
        self.y = y_coordinate 
  
    def distance(self, other_point): 
        x_diff_sq = (self.x - other_point.x) * (self.x - other_point.x) 
        y_diff_sq = (self.y - other_point.y) * (self.y - other_point.y) 
          
        return (x_diff_sq + y_diff_sq) ** 0.5 
  
p1 = Point(1, 2) 
p2 = Point(3, 4) 

print(p1.distance(p2))"
"Generate HTML code for displaying a list of items
","<ul>
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
  <li>Item 4</li>
</ul>"
"Write a SQL query to find the maximum and minimum salaries of employees in a given company.
","SELECT MAX(salary), MIN(salary)
FROM Employee"
"Reverse a given list of strings.
['first', 'second', 'third']","['third', 'second', 'first']"
"Create a class in C++ to store the rolling average of a stream of numbers.
","class RollingAverage {
  private:
    int windowSize;
    int currentIndex;
    double total;
    std::vector<double> data;

  public:
    RollingAverage(int windowSize)
        : windowSize(windowSize)
        , currentIndex(0)
        , total(0.0)
        , data(windowSize) 
    { 
        for (int i = 0; i < windowSize; ++i) {
            data.push_back(0.0);
        }
    }

    void add(double value) {
        int prevIndex = (currentIndex - 1 + windowSize) % windowSize;
        total -= data[prevIndex];
        total += value;
        data[currentIndex] = value;
        currentIndex = (currentIndex + 1) % windowSize;
    }

    double getAverage() {
        return total / windowSize;
    }
};"
"Edit the following HTML page and add a link to an existing page on the internet.
<html>
    <header>
        <title>My Page</title>
    </header>
</html>","<html>
    <header>
        <title>My Page</title>
    </header>
    <body>
        <a href=""https://www.example.com"">Link to Example</a>
    </body>
</html>"
"Explain the process of linear search in a few sentences.
","Linear search is a technique for searching for an element in a list by repeatedly checking every element until a match is found or the end of the list is reached. It is typically implemented as a loop, where each element is compared to the search key until a match is found, or until all the elements have been searched."
"What could be a use case of a 'while' loop in Python?
","A while loop can be used to iterate over a sequence or perform a computation until a specific condition is met. For example, it can be used to generate a list of prime numbers, where it would check if the current number is a prime number by checking if its divisible by any of the already discovered primes before it."
"Write a code to find the shortest possible palindrome.
string = 'race'","""""""
Function to find the shortest possible palindrome
""""""

const findShortestPalindrome = (string) => {
  let reversedString = string.split('').reverse().join('')
  let newString = string + '#' + reversedString
  let lps = []
  let i = 1
  let j = 0
  while (i < newString.length) {
    if (newString[i] === newString[j]) {
      lps[i] = j + 1
      i++
      j++
    } else {
      if (j !== 0) {
        j = lps[j - 1]
      } else {
        lps[i] = 0
        i++
      }
    }
  }
  return string + reversedString.substring(lps[newString.length - 1])
}

console.log(findShortestPalindrome(string)) // 'ecarace'"
"Find all substrings of a string that are palindromes in Python.
","def get_all_palindromes(input_string):
    palindromes = []
    for substring_length in range(len(input_string)):
        for i in range(len(input_string) - substring_length + 1):
            sub_string = input_string[i: i + substring_length]
            if sub_string == sub_string[::-1]:
                palindromes.append(sub_string)
    return palindromes

# Usage
palindromes = get_all_palindromes(""banana"")
print(palindromes) # ['a', 'ana', 'anana', 'b', 'na', 'nana']"
"Construct a Python class to represent a student with attributes such as name, age, and course. The class should have a method that returns the student information in a formatted output
Student Name: John Smith
Age: 17
Course: Computer Science","class Student: 
    def __init__(self, name, age, course): 
        self.name = name 
        self.age = age
        self.course = course

    def get_info(self): 
        return f""Name: {self.name}, Age: {self.age}, Course: {self.course}""

student = Student(""John Smith"", 17, ""Computer Science"")

print(student.get_info()) # Name: John Smith, Age: 17, Course: Computer Science"
"Write a HTML code to create a table with two columns, one for the name of a person and the other for their address.
","<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Address</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>John Doe</td>
      <td>123 Main Street</td>
    </tr>
    <tr>
      <td>Jane Doe</td>
      <td>456 South Ave</td>
    </tr>
  </tbody>
</table>"
"Use regex to extract the domain from a URL.
url = 'https://www.example.com/blog/post/1'","import re

def extract_domain(url):
    """"""
    A function to extract the domain from a URL using regex.
    Args: 
     url (str): a URL.
    Returns:
     domain (str): the domain of the URL.
    """"""
    regex = r""http[s]?://(www\.)?([^/]+)/.*""
    matches = re.search(regex, url)
    return matches.group(2)
    
if __name__ == '__main__':
    url = 'https://www.example.com/blog/post/1'
    print(extract_domain(url))"
"Write a query in SQL to find the total number of people who currently work in the software engineering department.
","SELECT COUNT(*) 
FROM Employees 
WHERE Department = 'Software Engineering';"
"Design a program to find out how many times a pattern occurs in a given string.
Find the number of times “quick” occurs in “The quick brown fox jumps over the lazy dog.”","def count_pattern(sentence, pattern):
    count = 0
    words = sentence.split(' ')
    for word in words:
        if word == pattern:
            count += 1
    return count

if __name__ == ""__main__"":
    sentence = ""The quick brown fox jumps over the lazy dog.""
    pattern = ""quick""
    print(count_pattern(sentence, pattern))"
"Write code to create a function in JavaScript to reverse a given array.
var input = [1, 2, 3, 4, 5];","function reverseArray(input) {
    let result = [];
    for (let i = input.length - 1; i >= 0; i--) {
        result.push(input[i]);
    }
    return result;
}"
"Calculate the sum of the numbers in the array [1, 5, 7, 10]
","# Define the array
arr = [1, 5, 7, 10]

# Calculate the sum
sum = sum(arr)

# Print the result
print(""The sum of the numbers in the array is "" + str(sum) + ""."")"
"How would you create a function in Python to add two numbers?
","def add(a, b):
	return a + b 

# Usage 
print(add(3,4)) # output: 7"
"Calculate the number of bits required to represent the given letter.
letter = 'A'",8 bits.
"Design a Bash script to replace all the characters in a string.
String to be changed: My name is Jane
Characters to be replaced: a->A, e->E","#!/bin/bash

string=""My name is Jane""
string=""${string//a/A}""
string=""${string//e/E}""
echo $string"
"Create a serverless application with AWS Lambda.
",Create an AWS Lambda function with associated IAM roles and policies that define the function’s access to related AWS resources. Package your code into a .zip file and upload it to AWS Lambda. Connect the Lambda function to an API Gateway to make your function accessible through an API endpoint.
"Write a C++ method to convert a string into lowercase.
","string toLowerCase(string s)
{
    transform(s.begin(), s.end(), s.begin(), ::tolower);
    return s;
}"
"Create a SQL query that finds the third highest salary of all employees.
","SELECT TOP 1 Salary
FROM (
	SELECT DISTINCT TOP 3 Salary
	FROM Employees
	ORDER BY Salary DESC
) AS Param
ORDER BY Salary ASC"
"Create a basic python object that stores the length and width of an rectangle.
","class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width"
"Rewrite the following in-place insertion sort algorithm in Java.
","public class InsertionSort { 
	public static void inplaceInsertionSort(int[] array) { 
		// Iterate over array elements 
		for (int i = 1; i < array.length; i++) { 
			int value = array[i]; 
			int j = i; 
			// Check whether the adjacent element in 
			// left side is greater or not 
			while (j > 0 && array[j - 1] > value) { 
				// shifting the elements 
				array[j] = array[j - 1]; 
				j--; 
			} 
			// moving the element in right side 
			array[j] = value; 
		} 
	} 
	// Driver Code 
	public static void main(String[] args) { 
		int[] arr = { 20, 12, 10, 15, 2 }; 
		inplaceInsertionSort(arr); 
		for (int i : arr) { 
			System.out.print(i + "" ""); 
		} 

	}"
"Extract the first 3 characters of an input string using Python.
String = ""Hello World!""","string = ""Hello World!""

#Extract first 3 characters 
first_3_characters = string[0:3]

print(first_3_characters)"
"How would you implement a function to determine if a number is even or odd in Python?
","def even_odd(number):
    if number % 2 == 0:
        print(""Even"")
    else:
        print(""Odd"")"
"Create a JavaScript function that takes an array of numbers and returns true if every element is an even number and false otherwise
","function checkEven(array) {
    for (var i = 0; i < array.length; i++) {
        if (array[i] % 2 !== 0) {
            return false;
        }
    }
    return true;
}"
"Create an HTML partial for a form that includes inputs for first name and last name.
","<form>
  <label>First Name:</label> 
  <input type=""text"" name=""fname"">
  <label>Last Name:</label> 
  <input type=""text"" name=""lname"">
  <input type=""submit"" value=""Submit"">
</form>"
"Given an array of integers and a target value, modify the array such that each element is the multiplication of the previous element and the target value.
arr = [2, 4, 5], target = 3","arr = [2, 8, 24]  # [2 * 3, 4 * 3, 5 * 3]"
"Create a dictionary where the keys are the integers up to 10, and the values are the cubes of those same integers.
","def create_dict():
    cube_dict = {}
    for i in range(1,11):
        cube_dict[i] = i**3
    return cube_dict"
"Generate a 10x10 multiplication table in Python.
","for i in range(1,11): 
   for j in range(1,11): 
        print(i*j, end = ""\t"") 
   print()"
"Write a function to split a string of words by comma.
string = 'apple,orange,banana,grapes'","def split_by_comma(string):
    return string.split("","")"
"Given a string, you need to write a regular expression that finds all the words that start with a caret (^) symbol.
String: ""^awesome ^data ^scoring""",\^awesome\s|\^data\s|\^scoring\s
"Write a shell script that exits with a status code of 0.
","#!/bin/bash

exit 0"
"Write a function that receives an array and removes every odd element from it.
[1, 2, 3, 4, 5, 6, 7, 8]","def remove_odd(arr):
    return [i for i in arr if i % 2 == 0]"
"What is the most efficient way to iterate through a list of dictionaries in Python?
","The most efficient way to iterate through a list of dictionaries in Python is to use the ""for-in"" loop. This loop iterates over the elements of the list and accesses the values of the dictionary using the ""key"" argument. The syntax would be: for item in list: do_something(item[key])."
"Write a SQL query to list all the product categories with their sales numbers in the given data set.
Table: Products

| id | product_name | category | sale_price |
  1       iPhone        Phones   400
  2       iPad          Tablets  500
  3       Apple Watch    Phones   300
  4      In-ear headset  Audio    50
  5      Pen Drive      Storage  20
  6      32GB RAM       Storage  100","SELECT category, SUM(sale_price) as total_sales
FROM Products
GROUP BY category"
"Design a SQL query to retrieve the names of movies released in the last 10 years.
",SELECT Name FROM Movies WHERE Release_Year > YEAR(CURDATE()) - 10;
"Using regex, find all the words that have a specific character at the start.
the words that start with 'a'","import re

words = [""amazing"", ""apple"", ""banana"", ""cherry"", ""desert"", ""encounter""]

result = [word for word in words if re.search(""^a"", word)]
print(result)"
"Write a method which takes 2 parameters and returns the greater one
","def max_num(x, y):
    if x>y:
        return x
    else:
        return y"
"Explain what is an algorithm.
","An algorithm is a set of steps or procedures used to solve a problem or accomplish a task. Algorithms are designed to perform an operation on a given set of inputs in order to obtain the desired output. Algorithms can be implemented in various ways, such as in pseudocode or in a programming language. Algorithms are commonly used for complex tasks such as image processing, data sorting, text processing, and AI applications."
"Write a function to calculate the average score of a list of numbers.
","def get_average(numbers):
    """"""
    Calculate and return the average of a list of numbers
    :param numbers: the list of numbers
    :return: the average of the numbers
    """"""
    total = 0
    for number in numbers:
        total += number
    return total / len(numbers)"
"Identify all the variables in this C++ program.
#include <iostream>
 
int main()
{   
    int number = 10;
    std::cout << number;
    return 0;
}",The variable in the above program is 'number'.
"Write a SQL query to get employee names from the Employees table where salary is greater than 50000.
",SELECT Name FROM Employees WHERE Salary > 50000
"Create a SQL query to select the top 5 most expensive items from a table.
","SELECT * FROM TABLE_NAME
ORDER BY PRICE DESC
LIMIT 5;"
"Implement an algorithm to sort the following array.
[3, 5, 4, 6, 1, 2]","def sortArray(array):
    n = len(array)
    for i in range(n):
        min_index = i
        for j in range(i+1, n):
            if array[min_index] > array[j]:
                min_index = j
        array[i], array[min_index] = array[min_index], array[i]
    return array"
"Create a MongoDB query to find all records with a ""quantity"" field greater than 5.
","db.collection.find({ ""quantity"": { $gt: 5 } })"
"Create a SQL query to fetch all user names from a table.
Table name: users
Table structure: user_id INTEGER, user_name VARCHAR","SELECT user_name 
FROM users;"
"Produce a program that takes in two strings and check if they are anagrams.
silent and listen","def is_anagram(s1, s2):
    if sorted(s1) == sorted(s2):
        return True
    else:
        return False"
"Write a function to check if an array is sorted according to given constraints.
arr = [2, 3, 15, 9, 5]","def isSorted(arr) : 
	n = len(arr) 
	for i in range(0,n-1): 
		if arr[i] > arr[i+1]:
			return False
	return True"
"Write a C# method that takes in an integer and multiplies it by 5
","public static int multiplyBy5(int num) {
    return num * 5;
}"
"Implement a python class named 'Temperature' that ranks a temperature value as cold, warm, or hot given a threshold value of 30.
","class Temperature:
  def __init__(self, value, threshold=30):
    self.value = value
    self.threshold = threshold

  def rank(self):
    if self.value < self.threshold:
        return ""cold""
    elif self.value == self.threshold:
        return ""warm""
    else:
        return ""hot"""
"Generate a code to take in a list of sentences, totaling no more than 100 words and output the longest sentence.
['This sentence is the longest.', 'This sentence is the shortest.']","def get_longest_sentence(lst):
    longest_sentence = ''
    longest_len = 0
    for s in lst:
        s_len = len(s)
        if s_len > longest_len:
            longest_sentence = s
            longest_len = s_len
    return longest_sentence

if __name__ == '__main__':
    lst = ['This sentence is the longest.', 'This sentence is the shortest.']
    longest_sentence = get_longest_sentence(lst)
    print(longest_sentence)"
"Write a code to update the content on the web page with current time and date.
","import datetime

def update_web_page_time_date():
    # Get the current time and date
    current_time = datetime.datetime.now().strftime(""%H:%M:%S %d-%m-%Y"")

    # Update the content of the web page
    with open(""index.html"", ""w"") as fh:
        fh.write(""<p>The current time and date is: {}<p>"".format(current_time))

if __name__ == '__main__':
    update_web_page_time_date()"
"Reverse the elements of a given array.
int[] array = {1, 2, 3, 4, 5};","for (int i = 0; i < array.length / 2; i++) {
    int temp = array[i];
    array[i] = array[array.length - i - 1];
    array[array.length - i - 1] = temp;
}"
"Create a for loop to output the square roots of the numbers between 0 and 10 using the math library.
","import math

for i in range(0,11):
    print(math.sqrt(i))"
"Sort the given list of numbers in non-decreasing order with selection sort.
[2, 1, 5, 3, 4]","[1, 2, 3, 4, 5]"
"Rewrite the following Python code to include proper exception handling.
f = open(""myfile.txt"")
text = f.read()","try:
    f = open(""myfile.txt"")
    text = f.read()
except IOError:
    print(""Error: Could not open file"")
finally:
    f.close()"
"Scale a vector of 10 numbers from 0 to 10.
[2.5, 3.5, 5.5, 7.5, 1.5, 8.5, 0.5, 4.5, 6.5, 9.5]","def scale(vector): 
    scaled_vector = []
    for i in vector: 
        scaled_vector.append(i/10*10) 
    return scaled_vector"
"Create a database schema for a books table with id, name, author, and date fields.
","CREATE TABLE books (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255),
        author VARCHAR(255),
        date DATE
);"
"Write a SQL query that returns the name of the author who has more than two books published in current year.
","SELECT author
FROM books
WHERE YEAR(date_published) = YEAR(CURDATE())
GROUP BY author
HAVING COUNT(*) > 2;"
"Create a Python function that takes two arguments, a positive integer and a boolean, and return the word ""yes"" if the boolean is true and the number is even, else it should return the word ""no"".
","def check_number(number, condition):
    if condition and number % 2 == 0:
        return ""yes""
    else:
        return ""no"""
"Create a script in Python that plots a bar chart showing the count of beers sold in a bar in a particular week.
beer_sales = [200, 500, 600, 100, 800]","import matplotlib.pyplot as plt

week = [1, 2, 3, 4, 5]
plt.bar(week,beer_sales)
plt.xlabel('Week')
plt.ylabel('Number of beers sold')
plt.show()"
"Write a query to find the names of all employees who have the same salary as the employee with the highest salary.
Table Name: Employees
Columns: Name, Salary","SELECT Name
FROM Employees
WHERE Salary = (SELECT MAX(Salary) 
                FROM Employees);"
"Write an efficient Python program to remove duplicate characters from the given string.
String: Hello world",He lwrd
"Write a query in MySQL to find the most popular item in a store
","SELECT item_name, COUNT(*) AS NumberOfOrders
FROM orders 
GROUP BY item_name
ORDER BY NumberOfOrders DESC
LIMIT 1"
"Split a string by a number greater than the length of the string in Python.
string = ""Hello World""","split_string = string[:11]
print(split_string) # Output = ""Hello World"""
"What are the main components of an object oriented programming language?
","The main components of an object oriented programming language are classes, objects, methods, and inheritance. Classes are the blueprint used to create objects, methods are the functions which act on objects, and inheritance is the ability for classes to define a common set of characteristics."
"Suggest an algorithm to remove duplicates from an array.
","def remove_duplicates(arr):
    # Create a seen set
    seen = set()
    # Iterate through the array
    for i in range(len(arr)):
        # If element is already seen, remove it
        if arr[i] in seen:
            del arr[i]
        # Else add element to seen set
        else:
            seen.add(arr[i])
    return arr"
"Construct a SQL query that gets the average salary of all employees who work in Department A
","SELECT AVG(salary) 
FROM employees
WHERE department = 'A'"
"Write a Python function to print out the squares of the numbers between 1 and 10.
","def print_squares():
    for i in range(1, 11):
        print(i**2)"
"Create a function named ""parse_urls"" which takes a single string parameter and returns a dictionary of queries from the URL.
url=""https://www.example.com/product?color=red&size=small""","def parse_urls(url): 
    queries = url.split('?')[1]
    queries_dict = {}
    for query in queries.split('&'): 
        key, value = query.split('=') 
        queries_dict[key] = value 
    return queries_dict"
"Create a CSS class with border radius and a background colour.
",".rounded-box {
    border-radius: 8px;
    background-color: #f5f5f5;
}"
"Create a program in Java that finds the maximum element in an array.
","public static int getMaxElement(int[] arr) {
    int max = Integer.MIN_VALUE;
        
    for (int el : arr) {
        if (el > max)
            max = el;
    }
    return max;
}"
"Design a function in Python to sort a list of tuples based on the first element.
","def sort_list_of_tuples(my_list):
    my_list.sort(key=lambda x: x[0])
    return my_list"
"Assume that we have an array of integers. Create code to input the array and output the sum of all the elements of the array.
arr = [1, 2, 3, 4, 5]","def calculate_sum(arr):
    """"""Calculates sum of all elements in the given array""""""
    total = 0
    for num in arr:
        total += num
    return total

if __name__ == '__main__':
    arr = [1, 2, 3, 4, 5]
    print(calculate_sum(arr))"
"Create a C++ program for computing the sum of the digits in a number.
Number: 1234","#include <iostream>
using namespace std;

int getSumOfDigits(int n) 
{ 
    // Base case 
    if (n == 0) 
        return 0; 
          
    return (n % 10 + getSumOfDigits(n / 10)); 
} 
  
// Driver code 
int main() 
{ 
    int n = 1234; 
    cout << getSumOfDigits(n) << endl; 
    return 0; 
}"
"Write a code to classify emails as spam or not-spam using Naive Bayes algorithms.
","# Importing necessary libraries
import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB

# Loading the dataset
df = pd.read_csv('emails.csv')

# Feature engineering
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['message'])
y = df['label']

# Training the model
nb = MultinomialNB()
nb.fit(X,y)

# Classification 
example_emails = [""You won the lottery!"", ""I need some help with my homework""]
X_example = vectorizer.transform(example_emails)
predicted_labels = nb.predict(X_example)
print(predicted_labels) # Output: [spam, not-spam]"
"Write a Python program to create a histogram for a given list of numbers.
list = [2, 3, 6, 5]","import matplotlib.pyplot as plt

plt.hist(list)

plt.title(""Histogram of numbers"")
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")

plt.show()"
"Name 3 popular JavaScript frameworks.
","Three popular JavaScript frameworks are React, Angular, and Vue."
"Create a switch statement for printing out the day for a given number
","switch (day) { 
    case 1: 
        console.log(""Monday""); 
        break; 
    case 2: 
        console.log(""Tuesday""); 
        break; 
    case 3:
        console.log(""Wednesday""); 
        break; 
   .....  
    case 7:
        console.log(""Sunday""); 
        break; 

    default: 
        console.log(""Invalid input""); 
        break; 
}"
"Develop a for loop to write a program to print the first 5 prime numbers
","count = 0 # to count the number of prime numbers

for num in range(1,100):  

   # all prime numbers are greater than 1
   if num > 1:
       for i in range(2,num):
           if (num % i) == 0:
               break
       else:
           print(num)
           count += 1
       if count == 5:
           break"
"Write a function in Python to calculate the value of ""e"" to 4 decimal places.
","from math import e

def calc_e():
    """"""This function calculates the value of e to 4 decimal places""""""
    return round(e, 4)"
"Use a for loop to sum all the elements in an array.
myArr = [2, 5, 8, 11]","def Sum_list(list): 
    sum = 0
    for i in range(len(list)):
        sum += list[i] 
    return sum 

myArr = [2, 5, 8, 11]
print(Sum_list(myArr))"
"Create a JavaScript function that validates a given number as an integer.
Input: 653","function checkInt(number){
	if(number % 1 === 0){
		return true;
	}
	return false;
}
checkInt(653); // returns true"
"Initialize an empty list in Python and then add three items to it.
","my_list = []
my_list.append(""item1"")
my_list.append(""item2"")
my_list.append(""item3"")"
"List out all the sorting algorithms supported in Python.
","The sorting algorithms supported in Python include bubble sort, insertion sort, selection sort, merge sort, quick sort, and heap sort."
"Write a Java program that prints a rating out of 10 based on user input.
Input value: 7","public class Rating {
 public static void main (String[] args) {
  int inputValue = 7;
  int rating = 0;

  if (inputValue >= 8) {
   rating = 10;
  } else if (inputValue >= 5) {
   rating = 7;
  } else {
   rating = 4;
  }

  System.out.println(""Rating: "" + rating);
 }
}"
"Import a module in Python and store it in a variable named “import_module”.
","import_module = importlib.import_module(""<module name>"")"
"Write a code to count the occurrences of a particular element in a given list.
list1 = [1, 2, 3, 3, 3, 4, 5]
element = 3","def count_occurrences(list1, element):
  count = 0
  for elem in list1:
    if elem == element:
      count += 1
  return count

if __name__ == ""__main__"":
  print(""Number of occurrences of"", element, ""in the list:"", count_occurrences(list1, element))"
"Create a variable to store your name.
","name = ""John"""
"Create a loop that prints out numbers from 0 to 15, except skip numbers 6, 7, and 12.
","for num in range(16):
 if num not in [6, 7, 12]:
    print(num)"
"Build a PHP function to check if two strings are anagrams.
$s1 = 'abcd';
$s2 = 'dcba';","function is_anagram($s1, $s2) { 
    // If the lengths of the strings are not equal,
    // they cannot be anagrams
    if (strlen($s1) != strlen($s2)) { 
        return false; 
    } 
  
    // Create an array and assign value 0 to each character
    $count = array(); 
    for ($i = 0; $i < strlen($s1); $i++) { 
        $count[$s1[$i]] = 0; 
    } 
  
    // Increase the count of each character found in first string
    for ($i = 0; $i < strlen($s1); $i++) { 
        $count[$s1[$i]]++; 
    } 
  
    // Decrease the count of each character found in second string
    for ($i = 0; $i < strlen($s2); $i++) { 
        $count[$s2[$i]]--; 
    } 
  
    // If all the counts are 0, then they are anagrams
    foreach ($count as $value) { 
        if ($value != 0) { 
            return false; 
        } 
    } 
  
    return true; 
}"
"Write a SQL query to find records where the name starts with ‘Jo’.
","SELECT * FROM tableName
WHERE name LIKE 'Jo%'"
"Generate a string containing the first 10 characters of the alphabet in reverse order.
",zyxwvutsrq
"Find out the number of odd numbers in an array
[2, 9, 0, 5, 3]","def odd_num(arr): 
    count = 0
    for num in arr: 
        if num % 2 != 0: 
            count += 1
    return count 
        
# Test Array 
arr = [2, 9, 0, 5, 3] 
# Function Call 
odd_num(arr)"
"How can you sort a list in decending order in Python?
","my_list = [4, 8, 19, 6, 17, 11]

sorted_list = sorted(my_list, reverse=True)"
"Given the input dictionary below, create a list containing all the items of the dictionary.
my_dict = {
    ""name"": ""John"",
    ""age"": 21,
    ""place"": ""Delhi""
}","my_list = list(my_dict.values())
print(my_list)
# Output: [""John"", 21, ""Delhi""]"
"Edit the code to print out that ""Index not found"".
nums = [1, 2, 3, 4, 5]
target = 6","def Contains(nums, target):
    for i in range(len(nums)):
        if nums[i] == target:
            return True
    print(""Index not found"")
    return False"
"Write an HTML code snippet to override the default font-size attribute of the body tag.
","<body style=""font-size: 16px;"">"
"Create a JavaScript function to find the length of the longest common substring between ""apple"" and ""pineapple"".
","function longestCommonSubstring(str1, str2) {
  let longestSubstring = '';
  let longestStringLength = 0;

  for (let i = 0; i < str1.length; i++) {
    for (let j = 0; j < str2.length; j++) {
      let tempSubstring = '';
      let k = i;

      while (str1[k] === str2[j]) {
        tempSubstring += str1[k++];
        j++;
      }
      
      if (tempSubstring.length > longestStringLength) {
        longestStringLength = tempSubstring.length;
        longestSubstring = tempSubstring;
      }
    }
  }
  
  return longestSubstring;
}

longestCommonSubstring(""apple"", ""pineapple""); // output -> ""apple"""
"Design an efficient algorithm to search for an item in an array.
","One efficient algorithm to search for an item in an array is the binary search algorithm. The binary search algorithm works by dividing the array into two parts and then searching through the divided parts in logarithmic time. The algorithm starts by comparing the item to be searched with the middle element of the array. If the item is smaller than the middle element, then the algorithm searches the first part of the array. If the item is larger than the middle element, then the algorithm searches the second part of the array. The process is then repeated until the item is found or the algorithm reaches the end of the array."
"Write a regex that matches the strings ""apple"" and ""match"".
",/(apple)|(match)/
"Assign a numerical value to a given string.
""Apple""","""Apple"" = 1"
"Sort the array in ascending order.
arr = [3, 2, 1, 5, 4]","arr.sort() # [1, 2, 3, 4, 5]"
"Find the frequency of each letter in the given string.
string = ""banana""","freq = {} 
  
for i in string: 
    if i in freq: 
        freq[i] += 1
    else: 
        freq[i] = 1
# freq is {'b': 1, 'a': 3, 'n': 2}"
"Combine the following two commands into a single shell script.
echo ""FileName: File1""
cat File1.txt","#!/bin/bash
echo ""FileName: File1""
cat File1.txt"
"design a functions which removes the duplicate elements from a list
","def remove_duplicates(x):
    res = []
    for i in x:
        if i not in res:
            res.append(i)
    return res"
"Develop a program to remove an element from a list at the specified index.
my_list = [4, 5, 6, 7]
index = 2","def remove_at_index(my_list, index):
    del my_list[index]
    return my_list"
"Assign the values of list_2 to the same positions of list_1.
list_1 = [1, 2, 5, 8]
list_2 = [3, 6, 9, 12]","list_1[0] = 3
list_1[1] = 6
list_1[2] = 9
list_1[3] = 12"
"Create an HTML form with a text field for user to enter an email address and a submit button.
","<form action="""" method=""post"">
  <input type=""text"" name=""email"" placeholder=""Enter your email address"">
  <input type=""submit"" value=""Submit"">
</form>"
"Write an API to return the average transaction amount of a customer.
","@app.route('/get_average_transaction_amount', methods=['GET'])
def get_average_transaction_amount():
    customer_id = request.args.get('customer_id')
    query = ""SELECT AVG(transaction_amount) FROM transactions WHERE customer_id = %s""
    result = db.query(query, customer_id)
    return jsonify(result)"
"Create a method to generate a random integer between 1 and 10 in Python.
","import random

def random_int():
    return random.randint(1, 10)"
"Construct a switch-case statement to output ""Monthly"" if the user enters ""M"" to output ""Yearly"" if the user enters ""Y"", and ""Invalid"" if the user enters neither ""M"" nor ""Y"".
","def printOption(option):
switch(option):
    case ""M"":
        print(""Monthly"")
        break
    case ""Y"":
        print(""Yearly"")
        break
    default:
        print(""Invalid"")"
"Generate a correct Python code for a data structure which supports the following operations -
insert(key, value)
get(key)
delete(key)","class Map(object):
    
    def __init__(self): 
        # a dictionary-based data structure 
        # to store (key, value) pairs 
        self.data = {} 
  
    # insert the given value with the given key 
    def insert(self, key, value): 
        self.data[key] = value     
  
    # get the value for the given key 
    def get(self, key): 
        return self.data[key] 
  
    # delete the datapoint with the given key 
    def delete(self, key): 
        self.data.pop(key)"
"Convert this octal number to a binary number.
Octal number: 77",Binary number: 111111
"Update the HTML div with an ID of ""content"" so that its background color is blue.
","<div id=""content"" style=""background-color:blue;""></div>"
"Given an integer n, write a Python program to print a pattern.
n = 5","for i in range(1, n+1): 
  for j in range(1,i+1): 
    print(""* "", end="""")  
  print(""\r"")"
"Write a function to check whether a number is a prime number in JavaScript.
let num = 7;","function isPrime(num) { 
  
    // Edge cases:
    if (num <= 1)  return false; 
    if (num === 2)  return true; 
    if (num % 2 === 0) return false; 

    for (let i=3; i<=Math.sqrt(num); i+=2) { 
        if (num % i === 0) 
            return false; 
    } 
    return true; 
}"
"Build a function in JavaScript that takes two integers and returns the minimum value of the two.
int x = 5;
int y = 8;","const findMin = (x, y) => {
  if (x < y) {
    return x;
  }
  return y;
}

findMin(x, y); // 5"
"Re-write the code below in Java to reverse the first string while preserving the order of the elements in the other strings.
arr = [string1, string2, string3]","String[] arr = {""string1"", ""string2"", ""string3""}; 
 
String temp = arr[0]; 
arr[0] = new StringBuilder(temp).reverse().toString(); 
 
System.out.println(Arrays.toString(arr));"
"Write a Ruby script that given two numbers, finds the greatest common factor (GCF) of them.
","def gcf(num1, num2)
  gcf = 1
  x = [num1, num2].min
  (1..x).each do |i|
    if num1 % i == 0 && num2 % i == 0
      gcf = i 
    end
  end
  return gcf
end"
"Write a JavaScript program that allows the user to input two numbers and shows the bigger number.
","function biggestNum(){
var num1 = parseInt(prompt(""Please enter the first number: "")); 
var num2 = parseInt(prompt(""Please enter the second number: "")); 
  
if(num1 > num2){
  alert(""The largest number is: "" + num1); 
}
else if(num2 > num1){
  alert(""The largest number is: "" + num2); 
}
else{
  alert(""Both numbers are equal."");
}
}
biggestNum();"
"Separate the given list into two lists for even and odd numbers
lst = [1, 2, 3, 4, 5]","even_lst = []
odd_lst = []
for num in lst:
    if num % 2 == 0:
        even_lst.append(num)
    else:
        odd_lst.append(num)"
"Write a while loop that adds 1 to the value of ‘var’ each time it is iterated until it reaches 5.
var = 0","while var < 5: 
    var += 1"
"Use a for-loop in PHP to generate a random number between 0 and 10.
","<?php
for ($i=1; $i<=10; $i++){
    $rand_num = rand(0, 10);
    echo $rand_num . ""\n"";
}
?>"
"Given a list of strings, write a Python program to capitalize the first letter of each word.
words = ['The', 'quick', 'brown', 'fox']","capitalized_words = [word.capitalize() for word in words]
print(capitalized_words) # Output: ['The', 'Quick', 'Brown', 'Fox']"
"Write a SQL query to find the number of books published after the year 2000.
",SELECT COUNT(*) FROM books WHERE year > 2000;
"Create a class in Python called Cat with constructor that takes three arguments i.e. name, color and age. The class should have three methods called meow, purr and display_info.
","class Cat:
    def __init__(self, name, color, age):
        self.name = name
        self.color = color
        self.age = age
    
    def meow(self):
        print('%s the %s cat meows!' % (self.name, self.color))
    
    def purr(self):
        print('%s the %s cat purrs contentedly.' % (self.name, self.color))
    
    def display_info(self):
        print('%s is a %s cat and is %d years old.' % (self.name, self.color, self.age))"
"Create a JavaScript function to convert a string to pig-latin.
","function toPigLatin(str) {
 const vowels = ['a', 'e', 'i', 'o', 'u'];
 let result = '';
 str.split(' ').forEach(word => {
 if (vowels.includes(word[0])) {
 result += `${word}ay `;
 } else {
 result += `${word.substring(1)}${word[0]}ay `;
 }
 });
 return result;
}"
"Write a function to generate the next line of Pascal's Triangle given the parent line.
Parent line: [1, 2, 1]","def next_pascals_triangle(parent):
    next_line = [1]
    for i in range(len(parent)-1):
        next_line.append(parent[i] + parent[i+1])
    next_line.append(1)
    return next_line"
"Develop an algorithm to find the greatest common factor (GCF) of two numbers in Python.
","def gcf(a,b):
    if a == 0 :
        return b 
    return gcf(b % a, a)"
"Suggest a way of converting the following JSON object into CSV format.
data = {
    ""Name"": ""John Doe"",
    ""Age"": ""50"",
    ""Gender"": ""Male""
}","import csv 

def json_to_csv(data):
    csv_data = [list(data.values())]
    with open('data.csv', 'w') as f:
        writer = csv.writer(f)
        writer.writerows(csv_data)
    
json_to_csv(data)"
"Create a C# event handler that is triggered when a button is clicked, and prints the text ""Button clicked!""
","public void btnClick_Click(object sender, System.EventArgs e)  
{
    System.Console.WriteLine(""Button clicked!"");
}"
"Construct an array of objects in JavaScript to represent a list of users.
","let users = [
  {
    username: 'John',
    age: 20
  },
  {
    username: 'Jane',
    age: 22
  },
  {
    username: 'Jacob',
    age: 25
  }
];"
"Create a function in python to find the minimum value in an array.
arr = [3,6,2,7,1]","def find_min(arr): 
    min = arr[0] 
    for x in arr: 
        if x < min: 
            min = x 
    return min

result = find_min(arr)
print(result) # prints 1, which is the minimum in the array."
"Design a program to find the sum of all numbers in an array of size 5
int arr[] = {4, 8, 2, 6, 1};","public class SumOfElements { 
    // Function to get sum of all elements. 
    public static int getSum(int[] arr) 
    { 
        int sum = 0; 
        for (int i : arr) 
            sum += i; 
        return sum; 
    } 
  
    public static void main(String[] args) 
    { 
        int arr[] = { 4, 8, 2, 6, 1 }; 
        int sum = getSum(arr); 
  
        System.out.println(""Sum is : "" + sum); 
    } 
}"
"Generate valid HTML tags for a two-column table.
","<table>
    <tr>
        <th> Column 1 </th>
        <th> Column 2 </th>
    </tr>
    <tr>
        <td> </td>
        <td> </td>
    </tr>
</table>"
"Create a Java program to take a given string and replace all occurrences of a given letter with another given letter
'bbac', 'b', 'a'","public String ReplaceLetters(String str, char oldChar, char newChar) {
    return str.replace(oldChar, newChar);
}"
"Merge the two lists below together.
list_a = [1,2,3] 
list_b = [4,5,6]","[1, 2, 3, 4, 5, 6]"
"In HTML, write a code to create an unordered list.
","<ul>
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
  <li>Item 4</li>
</ul>"
"Create a new list from an existing list with no duplication.
list_int = [4, 7, 4, 8, 6, 7]","new_list_ints = list(set(list_int)) # new_list_ints = [4, 7, 8, 6]"
"Construct a class to represent a basic calculator with functions for addition, subtraction, multiplication and division.
","class Calculator:
    def __init__(self):
        pass

    def add(self, a, b):
        return a + b
    
    def subtract(self, a, b):
        return a - b

    def multiply(self, a, b):
        return a * b

    def divide(self, a, b):
        return a / b"
"Devise a function that converts a number represented in the binary system to a decimal number.
1100","""""""
Devise a function that converts a number represented in the binary system to a decimal number
""""""

def binary_to_decimal(number):
    decimal = 0
    power = 0
    while number != 0:
        last_digit = number % 10
        decimal += last_digit * pow(2, power)
        power += 1
        number //= 10
    return decimal"
"Return the string ""Hello world"" as a response from a web service written in Java.
","@GET
@Path(""/helloWorld"")
@Produces(MediaType.TEXT_PLAIN)
public String getHelloWorldString() {
  return ""Hello world"";
}"
"Write a Bash script that prints numbers from 0 to 10 three times.
","for i in {1..3}; do
    for num in $(seq 0 10); do
        echo ""$num""
    done
done"
"Output the contents of an array of strings to the console.
arr = [""apple"", ""orange"", ""banana""]","for s in arr:
    print(s)"
"Implement an algorithm in Python to find the GCD (Greatest Common Divisor) of two numbers
","def gcd(a, b): 
  
   if (a == 0): 
       return b 
       
   if (b == 0): 
       return a 
       
   if (a == b): 
       return a 
       
   if (a > b): 
       return gcd(a-b, b) 
      
   return gcd(a, b-a)"
"Given a binary tree, print out a post-order traversal of its nodes.
","def postorder_traverse(root):

  if root == null:
    return

  postorder_traverse(root.left)
  postorder_traverse(root.right)
  print(root.value)"
"Modify the given Python code to calculate the sum of the given list and print the output.
list = [1,2,3,4,5]","def sumList(list): 
    sum = 0
    for i in list:
        sum = sum + i
    return sum

print(sumList(list))"
"Extract the value of the given key from the given XML structure.
<score>
    <name>Alice</name>
    <points>15</points>
</score>

Key: points",15
"Construct a helper function that prints the provided string twice.
","def print_twice(string):
    print(string)
    print(string)"
"Create a database table in SQL with two columns UserId and Username.
","CREATE TABLE Users (
  UserId INT NOT NULL, 
  Username VARCHAR(255) NOT NULL,
  PRIMARY KEY (UserId)
);"
"Now write a function to generate all the factorial numbers from 1 to n.
","def generate_factorials(n):
    factorials = [1]
    for num in range(1,n+1):
        if num == 1:
            factorials.append(1)
        else:
            factorials.append(factorials[-1]*num)
    return factorials"
"Create a function that takes two strings as parameters, compares them, and returns 0 if they are equal, 1 if the first string is greater, and -1 if the second string is greater.
","def compare_strings(str1, str2):
    if str1 == str2:
        return 0
    elif str1 > str2:
        return 1
    else:
        return -1"
"What is the most efficient sorting algorithm in C?
",The most efficient sorting algorithm in C is Quick Sort.
"Summarize the given article using the Gensim summarizer.
[Article about Gensim summarizer](https://gensim.readthedocs.io/en/latest/summarization.html)","Gensim summarizer uses text preprocessing, tokenization, and summarization to generate extracted summaries from the given text. It supports manual summarization, latent semantic analysis, Latent Dirichlet Allocation, baseline summarization, and phrases-based summarization. Gensim summarizer provides a variety of ways to summarize text documents including manual summarization and auto summarization techniques."
"Design a SQL statement to select all the customers from the database with last name 'Smith'.
","SELECT * 
FROM customers 
WHERE last_name = 'Smith';"
"How can we inverse the numerical order of elements stored in an array?
","To invert the order of elements stored in an array, we can use the reverse() function. This function takes in an array and reverses the order of the elements in-place, returning nothing. The syntax is as follows:

array.reverse()"
"Generate a valid cURL command to request data from a given API endpoint
Endpoint: testserver.com/api/user","curl -X GET ""testserver.com/api/user"" -H ""accept: application/json"""
"You need to design a calculator class with methods to perform basic calculations (add, subtract, multiply, divide, etc.).
","class Calculator:
    def __init__(self):
        # initializing the calculator
        pass

    def add(self, a, b):
        return a + b

    def subtract(self, a, b):
        return a - b

    def multiply(self, a, b):
        return a * b

    def divide(self, a, b):
        return a / b"
"Sort this list of tuples in ascending order by the first value of the tuple
tuple_list = [(3,4),(5,6),(7,1)]","sorted_list = sorted(tuple_list, key=lambda x: x[0])"
"Explain the basic syntax for a for loop in JavaScript.
","The basic syntax for a for loop in JavaScript is as follows: for (initialization; condition; iteration). The initialization statement is run once at the beginning of the loop, and typically initializes one or more loop variables, which are used to track the progress of the loop. The condition statement is used to check the result of the initialization statement; if the result is true, the loop will execute. The iteration statement is run each time the loop runs; it modifies the loop variable(s) so that the loop can terminate when the specified condition is met. Once the loop has finished executing, program execution continues after the for loop statement."
"Create a variable with the value 10 using JavaScript
",var number = 10;
"Create a function in R to calculate the mean from a given list of numbers.
numlist = c(2, 5, 10, 17, 21)","mean <- function(numlist) {
  mean_val <- sum(numlist)/length(numlist)
  return (mean_val)
}"
"Given a number, create a function that returns a list that contains its divisors.
num = 20","def get_divisors(num):
    """"""This function returns a list that contains the divisors of a given number""""""
    return [x for x in range(1, num + 1) if num % x == 0]"
"How would you collect data from websites using Scrapy?
","Scrapy is a Python framework used for web scraping. It can be used to extract data from websites using a variety of techniques. The first step is to create a Scrapy project and define the items you want to scrape. After that, create a Spider class which is responsible for crawling and extracting the data. Finally, you can use a range of methods like XPath and CSS selectors to collect the data."
"Rewrite the following for loop code using a list comprehension.
arr = [1,2,3,4,5]
for i in arr:
  arr[i] = arr[i] + 1","arr = [x+1 for x in [1,2,3,4,5] ]

print(arr)"
"Explain what data encapsulation is.
",Data encapsulation is a software programming concept that allows the internal representation of an object to be hidden from the outside world. It is used to protect the data from being modified by parts of the program that should not have access to the data. It is also used to provide a way to extend the functionality of an object without editing the object code itself.
"Explain the concept of parameter estimation in machine learning.
","Parameter estimation is the process of determining the optimal values for the parameters of a machine learning algorithm. The values that produce the best performance on the training data are typically used as the parameters for the model. By optimizing the parameters, the model can fit the data more accurately and lead to improved generalization performance. Parameter estimation can involve manual tuning, or the use of automated techniques such as grid search or stochastic optimization."
"Create a new virtual environment for Python.
","Convert your current directory to a virtual environment:

python3 -m venv <name of virtual environment>

Activate the virtual environment:

source <name of virtual environment>/bin/activate
    
Deactivate the virtual environment:

deactivate"
"Name at least three sorting algorithms that can be implemented in PHP.
","1. Bubble Sort. 
2. Selection Sort. 
3. Insertion Sort."
"Generate some sample input that can be used to test the edge cases of the following code snippet.
def multiply_two_numbers(a, b):
    if a == 0 or b == 0:
        return 0
    else:
        return a * b","Sample inputs for testing the edge cases:
- Input: a = 0, b = 5
- Input: a = 5, b = 0
- Input: a = 0, b = 0"
"Create a function to check if a given triangle is an equilateral triangle.
a = 5, b = 5, c = 5","def isEquilateral(a, b, c):
    if (a == b == c): 
        return True
    else: 
        return False
  
isEquilateral(a, b, c) # returns True"
"Given the below array, find all the elements that are greater than 6.
arr = [3, 5, 8, 1, 9, 6]","let result = arr.filter(el => el > 6); 
// result is [8, 9]"
"Use NumPy to create a 3x3 array of random numbers from 0 to 1.
","import numpy as np
arr = np.random.rand(3, 3)
print(arr)

# Output
[[0.78000621 0.36251339 0.91162219]
 [0.52734163 0.56699849 0.03191476]
 [0.81245571 0.21147751 0.72691151]]"
"Read the given code block and debug it.
def main():
 print(""Hey I'm here"")
 if n == 0: 
  print(""Hey I'm there"")
main()","Error: n is not defined.

The given code is trying to use the variable n, which is not declared. To fix this, it should be declared before the if statement. The modified code is as follows:

def main():
 print(""Hey I'm here"")
 n = 0
 if n == 0: 
  print(""Hey I'm there"")
main()"
"Write a query in MySQL for finding all the customers who have ordered a specific product.
SELECT * FROM orders","SELECT * 
FROM orders 
WHERE orders.productID = <Specific Product ID>;"
"Implement a function to calculate the absolute value of a number.
-7","```
def absValue(num): 
    if num >= 0: 
        return num 
    else: 
        return -num 
  
print( absValue(-7) )

```"
"Create a shell script to print out the names of the all subdirectories in given directory
","#!/bin/bash
for dir in $1/*
do
    if [ -d $dir ]
    then
        echo $(basename $dir)
    fi
done"
"Create a program to list all the prime numbers between two numbers
","def list_primes(start, end):
    prime_list = [2]
    for num in range(start, end + 1):
        if all(num % i != 0 for i in range(2, num)):
            prime_list.append(num)

    return prime_list"
"Create a JavaScript function to check if an integer n is a perfect square.
","function isPerfectSquare(n) {
 for (int i = 0; i <= n; i++) {
  if (i * i == n) {
   return true;
  }
 }
 return false;
}"
"Locate and erase all text nodes from the following XML string.
<body>
  <div>Hello world!</div>
  <div>Good bye world!</div>
</body>","def delete_text_nodes(xml_string): 
  root = ET.fromstring(xml_string) # parse the XML string 
  elems = root.findall("".//text()"") # find all text nodes 
  for e in elems: 
    e.getparent().remove(e) # remove the text node 
  return ET.tostring(root) # return the parsed XML string"
"Generate a Pandas code snippet to calculate the averages of the elements of each row in the given dataframe?
dataframe = pd.DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9]], columns=['a', 'b', 'c'])","import pandas as pd
  
dataframe = pd.DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9]], columns=['a', 'b', 'c'])
 
dataframe['avg'] = dataframe.mean(axis=1)

print(dataframe)"
"Generate an HTML page with a table containing all the elements of an array in JavaScript.
[1, 2, 3, 4]","<html>
   <head>
      <title>Array Table</title>
   </head>
   <body>
      <table>
         <tr>
         <th>Element Value</th>
         </tr>
         <tr>
            <td>1</td>
         </tr>
         <tr>
            <td>2</td>
         </tr>
         <tr>
            <td>3</td>
         </tr>
         <tr>
            <td>4</td>
         </tr>
      </table>
   </body>
</html>"
"Write a Python function which takes a number as an argument and print ""even"" if the number is even and print ""odd"" if the number is odd.
","def print_even_odd(number):
 if number % 2 == 0:
 print(""even"")
 else:
 print(""odd"")"
"Write a JavaScript program to parse and evaluate a simple mathematical expression entered as a string.
String str = ""2 + 3 * 4 - 5 / 3"";","function evaluateExpression(str) {
    let expression = str.split(' ').map(el => {
        if (el === '+' || el === '-' || el === '*' || el === '/') {
            return el;
        }
        return parseInt(el);
    });
    let stack = [];
    let result;

    for (let i = 0; i < expression.length; i++) {
        let el = expression[i];
        if (typeof el === 'number') {
            stack.push(el);
        } else {
            let secondOperand = stack.pop();
            let firstOperand = stack.pop();
            switch (el) {
                case '+':
                    result = firstOperand + secondOperand;
                    break;
                case '-':
                    result = firstOperand - secondOperand;
                    break;
                case '*':
                    result = firstOperand * secondOperand;
                    break;
                case '/':
                    result = firstOperand / secondOperand;
                    break;
            }
            stack.push(result);
        }
    }
    return stack.pop();
}

console.log(evaluateExpression(""2 + 3 * 4 - 5 / 3""));"
"Evaluate this code and output the result.
x = 5
y = 7
z = 8","x = 5
y = 7
z = 8

result = (x + y) * z
print(result)

# Output: 75"
"Create a Java class that prints ""Welcome to my program"" when initialized.
","public class Welcome {
    public Welcome() {
        System.out.println(""Welcome to my program"");
    }
}"
"Design a function in Ruby to calculate the exponent of a given base and exponent.
","def exponent(base, exp)
  result = 1
  exp.times { result *= base }
  result
end"
"How do you count the number of specific characters in a given string?
","You can use the count() method in Python to count the number of specific characters in a given string. For example:

s = 'My name is John'

num_of_char = s.count('o')

print(num_of_char) #Output: 2"
"Sort the given list according to the last three digits of every number.
[332, 555, 898, 876]","def sort_list(numbers):
    """"""Sorts a list of numbers according to the last three digits of each number.""""""
    return sorted(numbers, key=lambda x: x % 1000)"
"Create a program that calculates the area of a triangle using C#.
base = 10
height = 8","public class AreaCalculator { 
    public static void main(String[] args) { 
        int base = 10;
        int height = 8;
        double area = (base*height)/2; 
        System.out.println(""The area of the triangle is: ""+area); 
    } 
}"
"Develop a function in Java that prints out the squares of all numbers between 1 and 10.
","public void printSquares(){
   for(int i=1; i<=10; i++){
      System.out.println(i*i);
   }
}"
"Parse a JSON object and print out the elements.
data = {
  'name': 'John Doe',
  'age': 32,
  'address': {
    'street': '123 Main St',
    'city': 'New York',
    'zip': 10010
  }
}","import json

data = json.loads(data)

print('Name:', data['name'])
print('Age:', data['age'])
print('Street:', data['address']['street'])
print('City:', data['address']['city'])
print('Zip:', data['address']['zip'])"
"Design a class in Java to build a Binary Search Tree.
","public class BST { 
  
    /* Class containing left and right child of current node and key value*/
    class Node { 
        int key; 
        Node left, right; 
  
        public Node(int item) { 
            key = item; 
            left = right = null; 
        } 
    } 
  
    // Root of BST 
    Node root; 
  
    // Constructor 
    BST() {  
        root = null;  
    } 
  
    // This method mainly calls insertRec() 
    void insert(int key) { 
       root = insertRec(root, key); 
    } 
  
    // A recursive function to insert a new key in BST 
    Node insertRec(Node root, int key) { 
  
        // If the tree is empty, return a new node 
        if (root == null) { 
            root = new Node(key); 
            return root; 
        } 
  
        // Otherwise, recur down the tree 
        if (key < root.key) 
            root.left = insertRec(root.left, key); 
        else if (key > root.key) 
            root.right = insertRec(root.right, key); 
  
        // return the (unchanged) node pointer 
        return root; 
    } 
  
}"
"Implement an algorithm that returns the maximum sum of a given subsequence.
arr = [-2,1,3,-4,5]","The algorithm should return the maximum sum of subseqence in the array. 

To solve this, we can use the Dynamic Programming approach. The algorithm will traverse the array and for each index (i), it will calculate two values:
1. Max sum of the array including the element at index i.
2. Max sum of the array excluding the element at index i.

The algorithm should iterate through the array and return the maximum of the two values.

maxSum = max(maxSumIncludingCurrentElement, maxSumExcludingCurrentElement);

The maximum sum of the subsequence will be maxSum."
"Design a program to search for a given string within an array of strings.
arr = ['hello', 'world', 'how', 'are', 'you']
given_str = 'how'","def search(arr, given_str):
    for item in arr:
        if item == given_str:
            return True
    return False"
"Change the variable names in the following Python code.
x1 = 10
y1 = 20","a = 10
b = 20"
"Write a method in Java that takes a string as input and returns its length.
","public static int getStringLength(String str) 
{ 
    // Return the length of the string
    return str.length(); 
}"
"Write a Java program that takes an array of integers and prints the numbers that are divisible by 5
[10, 20, 25, 15]","// Create the array of integers
int[] numbers = {10, 20, 25, 15};
 
// Iterate over array and print numbers divisible by 5
for (int number : numbers) {
  if (number % 5 == 0) {
    System.out.println(number);
  }
}
 
// Output: 10 20 25"
"Find the min and max of the given array of numbers.
Array: [5, 3, 10]","min = 3
max = 10"
"Write a JavaScript code to print the current day in the week.
","const day = new Date().getDay();
let dayString;

switch (day) {
  case 0:
    dayString = ""Sunday"";
    break;
  case 1:
    dayString = ""Monday"";
    break;
  case 2:
    dayString = ""Tuesday"";
    break;
  case 3:
    dayString = ""Wednesday"";
    break;
  case 4:
    dayString = ""Thursday"";
    break;
  case 5:
    dayString = ""Friday"";
    break;
  case 6:
    dayString = ""Saturday"";
    break;
  default:
    dayString = ""Unknown"";
}

console.log(dayString);"
"Given a list of phone numbers, write a code to find the one with the highest digits.
phone_numbers = [""+440123456789"", ""+45987654321"", ""+441234567890""]","highest = 0
highest_phone = None

for number in phone_numbers:
    number_digits = ''.join(filter(str.isdigit, number))
    if int(number_digits) > highest:
        highest_phone = number
        highest = int(number_digits)

print(f""The phone number with highest digits is {highest_phone}."")"
"Write a function that takes in 2 lists, reverses the elements of each list and combines the elements to output a single list.
list1 = [1,2,3]
list2 = [4,5,6]","[6, 5, 4, 3, 2, 1]"
"Create an object with the following properties, `name` of type `string`, `age` of type `number`, and `pet` of type `boolean`.
","let exampleObject = {
    name: 'Bob',
    age: 26,
    pet: true
};"
"Create a JavaScript code snippet to check if a given number is odd.
Number = 21","function isOdd(num) { 
    if (num % 2 !== 0) {
        return true;
    }
    return false;
}

// Output
console.log(isOdd(21));
// Output: true"
"Create a Python function to generate a random hex color code.
","import random

def generate_random_hex_color_code():
  hex_code = ""#""
  for i in range(6):
    random_digit = random.choice(""0123456789ABCDEF"")
    hex_code += random_digit
  return hex_code

if __name__ == '__main__':
  print(generate_random_hex_color_code())"
"Create a SQL query to join two tables called Employees and Departments.
Employees table has the following columns:
Emp_ID: int
Name: string
Age: int
Dept_ID: int

Departments table has the following columns:
Dept_ID: int
Dept_Name: string
Location: string","SELECT e.Name, e.Age, d.Dept_Name, d.Location
FROM Employees e
INNER JOIN Departments d 
ON e.Dept_ID = d.Dept_ID;"
"Create an HTML page with a header containing the text ""Welcome to our website"".
","<html>
<head><title>Welcome to our website</title></head>
    <body>
        <h1>Welcome to our website</h1>
    </body>
</html>"
"Create a HTML form with 4 fields, a Name field, an Email field, a Phone number field and an Address field.
","<form>
  <label>Name</label>
  <input type=""text"" name=""name""><br>
  <label>Email</label>
  <input type=""text"" name=""email""><br>
  <label>Phone Number</label>
  <input type=""text"" name=""phone_number""><br>
  <label>Address</label>
  <input type=""text"" name=""address""><br>
  
  <input type=""submit"" value=""Submit"">
</form>"
"Design an object-oriented class in Python that stores a book's title, author, and publisher.
","class Book:
  
  def __init__(self, title, author, publisher):
    self._title = title
    self._author = author
    self._publisher = publisher

  def get_title(self):
    return self._title

  def set_title(self, title):
    self._title = title

  def get_author(self):
    return self._author
  
  def set_author(self, author):
    self._author = author

  def get_publisher(self):
    return self._publisher
  
  def set_publisher(self, publisher):
    self._publisher = publisher"
"Write a jQuery code snippet to change the text color of all p tags to red.
","$('p').css('color', 'red');"
"Create a JavaScript constant to define a tax rate.
",const TAX_RATE = 0.2;
"Write a query to find all employees whose age is greater than 25.
",SELECT * FROM employees WHERE age > 25;
"Write a SQL query to find the first name of all students enrolled in course ""CSCI-203""
","SELECT firstName 
FROM students 
WHERE courseName = 'CSCI-203';"
"Create a JavaScript function for getting the unique elements in an array.
const arr = [3, 1, 4, 3, 2, 5]","const getUniqueElements = array => {
    const uniqueElements = [...new Set(array)];
    return uniqueElements;
}

console.log(getUniqueElements(arr)); // [3, 1, 4, 2, 5]"
"Write a Java program to find out the longest word from a sentence.
String sentence = ""This is a sample sentence""","public class LongestWord { 
  
    // Function to find longest word in the sentence 
    static String findLongestWord(String str) { 
  
        String longestWord = """"; 
        String[] words = str.split("" ""); 
        for (int i = 0; i < words.length; i++) { 
            if (words[i].length() > longestWord.length()) { 
                longestWord = words[i]; 
            } 
        } 
        return longestWord; 
    } 
  
    public static void main(String[] args) 
    { 
        String str = ""This is a sample sentence""; 
        System.out.println(findLongestWord(str)); 
    } 
}"
"Given a 2D array of binary values and another 2D array, find the indices of the first array where the values of both arrays are equivalent.
array1 = [[1, 0, 0, 1],[1, 0, 1, 0],[0, 0, 0, 1],[1, 0, 1, 0]]
array2 = [[1, 0, 1, 0], [1, 0, 0, 1], [0, 0, 0, 1], [1, 0, 0, 1]]","def find_empty_position(array1, array2):
    results = []
    for i in range(len(array1)):
        for j in range(len(array1[0])):
            if array1[i][j] == array2[i][j] and array1[i][j] == 0:
                results.append((i, j))
    return results"
"Construct a for-loop in C# to convert a string to lower cas
","for (int i = 0; i < str.Length; i++)
{
     str[i] = char.ToLower(str[i]);
}"
"Reverse the following string using a Python program
""Hello World!""","def reverse_string(str):
  return str[::-1]

reverse_string('Hello World!') # output: '!dlroW olleH'"
"Create a SQL query to select the name, job title and salary of all employees who work in the Sales department.
","SELECT name, job_title, salary
FROM employees
WHERE department = 'Sales'"
"Generate a JavaScript algorithm to sort a given array
Input array: [2, 3, 1, 4]","function sortArray(nums) {
    for (let i = 0; i < nums.length; i++) {
        for (let j = i + 1; j < nums.length; j++) {
            if (nums[j] < nums[i]) {
                let temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
            }
        }
    }
    return nums;
}"
"Write an SQL query that returns the total number of items per category.
","SELECT category, COUNT(*) AS items 
FROM items 
GROUP BY category;"
"Design a HTML page to display a table of students’ grades for a specific subject.
","<!DOCTYPE html>
<html>
<head>
<style>
table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

td, th {
  border: 1px solid #dddddd;
  text-align: left;
  padding: 8px;
}

tr:nth-child(even) {
  background-color: #dddddd;
}
</style>
</head>
<body>

<h2>Students' Grades</h2>

<table>
  <tr>
    <th>Name</th>
    <th>Grade</th>
  </tr>
  <tr>
    <td>John</td>
    <td>A</td>
  </tr>
  <tr>
    <td>Steve</td>
    <td>B</td>
  </tr>
  <tr>
    <td>Jane</td>
    <td>A+</td>
  </tr>
  <tr>
    <td>Jeff</td>
    <td>C+</td>
  </tr>
</table>

</body>
</html>"
"What is the syntax to convert a string to an integer in Java?
",int num = Integer.parseInt(string);
"What is the difference between an interface and an abstract class?
","The main difference between an interface and an abstract class is that an interface can only contain abstract methods while an abstract class can include both abstract and non-abstract methods. Additionally, an interface can be implemented by multiple classes while a class can only extend a single abstract class. Interfaces are also limited to public methods while an abstract class can contain any type of access modifiers."
"Create a function that prints a list of all the even numbers from a given list of integers.
test_list = [1, 2, 3, 4, 5, 6]","def print_even(test_list):
    even_list = []
    for num in test_list:
        if num % 2 == 0:
            even_list.append(num)
    print(even_list)"
"How do I create a function that sums two integers in Python?
","def add_two_ints(a, b):
    return a + b"
"Name the grammar that is used to identify data in a Javascript string.
",The grammar used to identify data in a JavaScript string is JSON (JavaScript Object Notation).
"Request the age of a user using HTML and store the user's answer in a variable called ""Age"".
","<label for=""age"">Please enter your age: </label>
<input type=""number"" name=""age"" id=""age"">

// Store the user's answer in a variable
var Age = document.getElementById(""age"").value;"
"Generate a program to remove duplicates from an unsorted linked list.
","class Node: 
  
    def __init__(self, data): 
        self.data = data  
        self.next = None
  
def remove_duplicates(head): 
    h = {} 
  
    temp = head 
    prev = None
    while(temp): 
        if temp.data in h: 
            prev.next = temp.next
            temp = None
        else: 
            h[temp.data] = True
            prev = temp 
        temp = prev.next

if __name__ == ""__main__"":
    pass"
"Create a function to filter out elements in an array that meet a given criteria.
lst = [2, 3, 4, 5, 6, 7, 8, 9] 
criteria = lambda x: x % 2 == 0","def filter_by(lst, criteria):
    """"""This function takes an array of elements and a criteria and returns an array of elements filtered by the criteria.""""""
    return [x for x in lst if criteria(x)]"
"Create a code to calculate the most frequent character in a given string
s = ""Hello world!""","def most_frequent_char(s):
    counts = {}
    max_char = """"
    max_count = 0
    for c in s:
        if c in counts:
            counts[c] += 1
        else:
            counts[c] = 1
        if counts[c] > max_count:
            max_char = c
            max_count = counts[c]
    return max_char
  
# example
s = ""Hello world!""
print(most_frequent_char(s))"
"Create a regular expression to identify email addresses in a given string.
","The regular expression to identify email addresses in a given string is:

\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}\b"
"Given a Binary search tree, write a C++ program to find the lowest common ancestor (LCA) of two given nodes in the BST.
Tree:
            8
          /   \
         3    10
        / \    /
       1   6  14","struct TreeNode
{
    struct TreeNode* left;
    struct TreeNode* right;
    int data;
}; 
 
 
TreeNode* LCA(TreeNode* root,TreeNode* node1, TreeNode* node2) 
{ 
    int small = min(node1->data, node2->data);
    int large = max(node1->data, node2->data);
  
    if (root == NULL) 
        return NULL; 
  
    if (root->data >= small && root->data <= large) 
        return root; 
  
    if (root->data > large) 
        return LCA(root->left, node1, node2); 
  
    return LCA(root->right, node1, node2); 
}"
"Parse the given string and return a list of words.
string = ""this is a test string""","def parse_string(string):
    words = string.split()
    return words"
"Develop a C++ code snippet to swap two variables.
","void swap(int& x, int& y) { 
    int temp = x; 
    x = y; 
    y = temp; 
}"
"Write an HTML structure to create a form with two text boxes and two submit buttons.
","<form action=""form_action.php"" method=""POST"">
    <input type=""text"" name=""name"">
    <input type=""text"" name=""email"">
    <input type=""submit"" name=""button1"" value=""Submit"">
    <input type=""submit"" name=""button2"" value=""Cancel"">
</form>"
"Create a RegEx pattern to match a text string with a pattern string.
","pattern = re.compile(r""patternstring"")"
"Create an HTML page that uses the CSS box model to style a text.
","<!DOCTYPE html>
<html>
<head>
    <title>Text Styling</title>
    <style>
        #text {
            border: solid 1px black;
            padding: 10px;
            width: 300px;
            margin: 10px auto;
        }
    </style>
</head>

<body>
    <div id=""text"">
        This is some sample text to demonstrate the CSS box model.
    </div>
</body>
</html>"
"Write an HTML code snippet to display a blue heart symbol.
","<span style=""color: blue; font-size: 2em;"">&#9829;</span>"
"Find the slope of this line.
Point 1 (3, 2)
Point 2 (6, 4)",The slope of the line is 0.5.
"Use the information provided to initialize a dictionary in Python.
keys = [""name"", ""age"", ""gender""]
values = [""John Doe"", 25, ""Male""]","my_dict = dict(zip(keys, values))"
"Construct an algorithm to check for palindrome in a given string.
","def is_palindrome(text):
	rev = ''.join(reversed(text)) 
	return rev == text"
"Write a Bash script that prints out the day of the week.
","#!/bin/bash
day=$(date +%A)
echo ""Today is $day"""
"Run the following program and provide the console output.
def multiply(x, y):
    return x * y

print(multiply(2, 5))",10
"Transform the C code into an equivalent Python program.
int main()
{
    int i, j;
    for (i = 0; i < 3; i++) 
        for (j = 0; j < 4; j++)
            printf(""%d %d\n"", i, j);
    return 0;
}","for i in range(3):
    for j in range(4):
        print(i, j)"
"Create a program in Python to return the first n elements from an array
","def first_n_elements(array, n):
    return array[:n]"
"Complete the following C++ code to print the 3rd element from the array.
int arr[5] = {1,2,3,4,5};",std::cout << arr[2] << std::endl;
"Using a dictionary, store the given student's name and marks as key value pairs.
name = ""John Doe""
marks = { ""maths"" : 90, ""physics"" : 80, ""chemistry"" : 85 }","student_data = {}
student_data[name] = marks"
"Write a code to find the factorial of a given number using a recursive function.
","def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)"
"Create a React app that loads data from a given REST API endpoint.
","import React from 'react';
import Axios from 'axios';

class App extends React.Component {
    
    constructor(props) {
        super(props);
        this.state = {
            data: [],
        };
    }

    async componentDidMount() {
        const res = await Axios.get(<api_url>)
        this.setState({data: res.data});
    }

    render(){
        return (
            <div>
                {this.state.data.map(item => <p>{item.name}</p>)}
            </div>
        )
    }
}

export default App;"
"Code a Java program to find the area of an equilateral triangle.
","import java.util.Scanner;

public class AreaOfTriangle {
    public static void main(String[] args) {
        double s;
        double area;
        Scanner sc = new Scanner(System.in);
        System.out.println(""Enter the side of the equilateral triangle:"");
        s = sc.nextDouble();
        area = (Math.sqrt(3) / 4) * (s * s);
        System.out.println(""Area of equilateral triangle is "" + area);
    }
}"
"Calculate the area of this shape.
[Image]",The area of this shape is 36 cm^2.
"Write an SQL query to display the maximum and minimum values of the ""amount"" column from the following table.
transactions
columns: id, user_id, amount","SELECT MAX(amount) AS max_amount, MIN(amount) AS min_amount FROM transactions;"
